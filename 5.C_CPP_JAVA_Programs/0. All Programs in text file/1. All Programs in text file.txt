....................................Assignment 1..........................................
//  Header File

#include<stdio.h>
typedefint BOOL;
#define TRUE 1
#define FALSE 0


int  Divide(int ,int);

voidDisplay();

voidDisplay();

intCheck( int );       

void Accept(int); 

void Display(int);

void Display(int);


void Display(int);

void Display(int);

BOOL ChkEven(int ); 

#include"Header.h"//Header File Inclusion

//////////////////////////////////////////////////////////////
//
// Function Name :      Divide
// Parameters :         Integer,Integer
// Return value :       Integer
// Description :        It Is Used To Division Of Two Number
// Author :             Nikita Santosh Karande
// Date :               24 July 2020
//
//////////////////////////////////////////////////////////////

//Function Definition
int  Divide(int iNo1,      //Input Of The Function
	int iNo2)      //Input Of The Function
{
intiAns = 0;   //Local Variable

if(iNo2 > iNo1)          
  { 
return -1;          
  }
else
  {
iAns = iNo1 / iNo2;   //Number1 Divide Number2 And Store Ans in iAns
  }
returniAns;   //it return Division 
}
#include"Header.h"
/*
Problem Statement: Program To Divide Two Numbers
*/

/*
  START
       Accept first number as No1
	   Accept Second number as No2
	   Create One variable as iAns
	   Perform Division of No1 & No2
	   Store the result in iAns
	   Return the value from Ans
  STOP
*/

//Entry Point  Function  From Where Execution Start
intmain()
{
int iValue1 = 15, iValue2 = 5;   //Local Variable

intiRet = 0;   //Local Variable

iRet = Divide(iValue1, iValue2);   //Function Call

printf("Division is= %d", iRet);   //Display On Screen

return0;   //It Indicate Successfully Termination
}


 
#include"Header.h"//Header File Inclusion

//////////////////////////////////////////////////////////////
//
// Function name :      Display
// Parameters :         None 
// Return value :       None
// Description :        It Is Used To Print 5 Time "Marvellous"
// Author :             Nikita Santosh Karande
// Date :               24 July 2020
//
//////////////////////////////////////////////////////////////

//Function Definition
voidDisplay()
{	
inti = 0;   //Local Variable

for(i = 1; i<= 5;i++)  // It Is Used for iteration
	{ 
printf("Marvellous\n");  //Display On screen
    }
}  

#include"Header.h"    //Header File Inclusion

/*
Problem Statement: Program to print 5 times “Marvellous” on screen.  
*/

/*
  START
       Create iCnt variable
	Use for loop 
	in this loop icnt=1 
	print in loop body "Marvellous"
	After 1 iteration iCnt has increased 
	if icnt=5 then loop iteration is stop 
  END
*/
//Entry Point Function From Where Execution Start
intmain()
{   
Display();    // Function Call

return0;   //It indicate Successfully Termination
}

 
#include"Header.h"//Header File Inclusion

//////////////////////////////////////////////////////////////
//
// Function name :      Display
// Parameters :         Non 
// Return value :       Non
// Description :        It Is Used To Print 5 To 1 Digit
// Author :             Nikita Santosh Karande

// Date :               25 July 2020
//
//////////////////////////////////////////////////////////////

//Function Definition
voidDisplay()
{
inti = 5;   //Local Variable
while( i> 0 )      // It is Used For Iteration
   {
printf("%d\n",i);   // Display On Screen
i--;                //post Decrement 
   }
}

#include"Header.h"//Header File Inclusion
/*
Problem Statement: Program to print 5 to 1 number on screen.  
*/
/*
   START
         Create iCnt variable and this variable assign 5 value
	  Using while loop create iteration 
	  after 1 iteration 5 is decreased in 1 
	  In  loop body print iCnt
	  If iCnt is greater than equal to 1 then looping stop  
    STOP
*/
//Entry Point Function From Where Execution Starts
intmain()
{
	Display();  //Function Call

	return0;   //It indicate Successfully Termination

}
 
#include"Header.h"       // Header File Inclusion

//////////////////////////////////////////////////////////////
//
// Function name :      Check
// Parameters :         Integer
// Return value :       Integer
// Description :        Check input no is divisible 5 or Not.
// Author :             Nikita Santosh Karande
// Date :               25 July 2020
//
//////////////////////////////////////////////////////////////

//Function Definition
intCheck( intiNo)       //Function Prototype
{
if(( iNo % 5) == 0)   //If mod is 0 then return True(1)
   {
returnTRUE;   //TRUE indicate divisible by 5
   }
else//if mod is 1 then return False(0)
   {
returnFALSE ;//FALSE indicate Not divisible by 5
   }
}
#include"Header.h"//Header File Inclusion
/*
Problem Statement : Accept one number and check whether is  divisible by 5 or not.
*/
/*
 START
      Accept no No1 from user 
	  Divide the No1 by 5 and store remainder into result
	  If the result is zeros
	    then return divide 5
	  Otherwise
	    Not divisible by 5
 STOP
*/

//Entry Point Function From Where Execution Start 
intmain()
{
intiValue = 0;   //Local Variable
   BOOL bRet = FALSE;

printf("Enter number");  //Display On Screen 
scanf("%d" ,&iValue);    //Accept Input

bRet = Check(iValue);   //Function Call

if(bRet == TRUE)
   {
printf("Divisible by 5"); //Display On Screen 
   }
else
   {
printf("Not Divisible by 5");//Display On Screen 
   }
return0;   //It Indicates Successfully Termination
}

#include"Header.h"// Header File Inclusion

//////////////////////////////////////////////////////////////
//
// Function name :      Accept
// Parameters :         Integer
// Return value :       Non
// Description :        Accept number and print *
// Author :             Nikita Santosh Karande
// Date :               25 July 2020
//
//////////////////////////////////////////////////////////////

//Function Definition
voidAccept(intiNo)                       //Function Parameter
{
intiCnt = 0;   //Local Variable
for( iCnt = 1 ; iCnt<=iNo ; iCnt++ )    //It is used to iteration
  {
printf(" * ");                           //Display On Screen
  }
}
#include"Header.h"//Header File Inclusion
/*
Problem Statement : Accept one number from user and print that number of * on screen.
*/

 START
      Accept number for user No1
	  Create iCnt variable and the value areassign for iCnt is 1
	  Using for loop iteration create
	  in this loop body print *  after 1 iteration iCnt is increased
	  if iCnt is equal to No1 loop is terminated
	  and printing is stop
  STOP
*/
//Entry Point Function From Where Execution Start 
intmain()
{
	intiValue = 0;   //Local Variable
	iValue = 5;
       Accept(iValue);   //Function Call
	
	return0;   //It indicates Successfully Termination
}
 ..................................Assignment 2............................................

#include"Header.h"// Header File Inclusion

///////////////////////////////////////////////////////////////////////////////////////////
//
// Function Name:      Display
// Parameter :         Integer
// Return Value:       Non
// Description:        Accept One number and  print Number of star on screen
// Author :            Nikita Santosh Karande
// Date :              25 july 2020
//
//////////////////////////////////////////////////////////////////////////////////////

//Function Definition
voidDisplay(intiNo)  //Inpute Function
{
intiCnt = 0;   //Local Variable

while( iCnt<iNo)  //It is used to iteration
    {
printf(" * ");     //Display On Screen 
iCnt++ ;//Post increment 
    }
}
#include"Header.h"// Header File Inclusion
/*
Problem Statement: Accept one number from user and print that number of * on screen.
*/
/*
 START
      Accept No from user 
	  Create iCnt variable
	  Using while loop iteration start  after one iteration iCnt is increased
	  in this while loop body print star
	  if iCnt and No is equal then loop is break
	  program is terminate
 STOP 
 */
//Entry Point Function From Where Execution Start.
intmain()
{
	intiValue = 0;   //Local Variable

printf("Enter number");   //Display On Screen
	scanf("%d" ,&iValue);     //Accept Input

Display(iValue);   //Function Call

return0;   //It indicate  Successfully Termination
}

 
#include"Header.h"//Header File Inclusion
////////////////////////////////////////////////////////////////////////
//
// Function Name :    Display
// Parameters :       Integer
// returntype :       Non
// Description :      Accept number and print no of star
// Author :           Nikita Santosh Karande
// Date :             25 july 2020
////////////////////////////////////////////////////////////////////////

//Function Definition
voidDisplay(intiNo)      //Inpute Of the Function
{
while( iNo>  0)       //It is used to iteration
    { 
printf(" * ");         //Display On Screen
iNo--;                 //Post Decrement
    } 
} 
#include"Header.h"
/*
Problem Statement:  Accept one number from user and print that number of * on screen
*/
/*
 START
      Accept No from user 
	  Using while loop iteration start  after one iteration No is Decreased
	  in this while loop body print star
	  if No is 0 then loop is break
	  program is terminate
 STOP 
 */
//Entry Point Function Where Execution Start 
intmain()
{
	intiValue = 0;   //Local Variable

printf("Enter number\n"); //Display On Screen
	scanf("%d" ,&iValue);   //Accept Input

Display(iValue);   //Function Call


return0;   //it indicate Successfully Termination
} 


 
#include"Header.h"//Header File Inclusion

////////////////////////////////////////////////////////////////////////////////////////////
//
//   Function Name :   Display
//   Parameters :      Integer
//   Return Value :      Non
//   Description :     Accept no and check less 10 print "Hello" otherwise print"Demo"
//   Author :          Nikita Santosh Karande
//   Date :            25 july 2020
//
//////////////////////////////////////////////////////////////////////////////////////

//Function Definition
void Display ( intiNo)  //Input Of The Function
{
if(iNo< 10)          //if number is less than 10
    {
printf("Hello");   //Display ON Screen
    }
else//if number is greater than 10
    {
printf("Demo");   //Display ON Screen
    }
}
#include"Header.h"//Header File Inclusion
/*Problem Statement:  Accept on number from user if number is less than 10 then print “Hello” otherwise print “Demo”. */
/*
START
Accept  No from user
	 check No is less than 10 or Not 
	 if No is less than 10 print "Hello"
	 Otherwise print "Demo"
 STOP
*/
//Entry Point Function Where Execution Starts
intmain()
{
intiValue = 0;   //Local Variable

printf("Enter number");      //Display On Screen
scanf("%d" ,&iValue);        //Accept Input

   Display(iValue);   //Function Call

return0;   //It indicate Successfully Termination
}

 
#include"Header.h"//Header File Inclusion

//////////////////////////////////////////////////////////////////////////////////////
//
//  Function Name :   Display
//  Parameters :      Integer,Integer
//  Return Value :    Non
//  Description :     Accept two numbers from user and display first number of times
//  Author :          Nikita Santosh Karande
//  Date :            25 july 2020
//
//////////////////////////////////////////////////////////////////////////////////////

//Function Definition
voidDisplay( intiNo, intiFrequency)    //Input Of The Function
{
intiCnt = 0;   //Local Variable

for(iCnt = 0; iCnt<iFrequency; iCnt++) //It is used for iteration
{
printf(" %d ",iNo);                  //Display On screen
}
}
#include"Header.h"//Header File Inclusion
/*
Problem Statement:  Accept two numbers from user and display first number in second number of times.
*/
/*
  STRAT
       Accept First number from user No1
	   Accept First number from user No2
	   Create iCnt and it assign 0 value
	   Using for loop Start iteration after one iteration iCnt increased
	   In this loop body print No1
	   if iCnt is equal to No2 then loop is break
	   and program is terminated
   STOP
*/
//Enty Point Function Where Execution Start
intmain()
{
intiValue = 0;   //Local Variable
intiCount = 0;   //Local Variable

printf("Enter number");     //Display On Screen
scanf("%d" ,&iValue);       //Accept Input

printf("Enter frequency");  //Display On Screen
scanf("%d",&iCount);        //Accept Input

Display(iValue , iCount);   //Function Call
	
return0;   //It indicate successfully termination
}

 
#include"Header.h"//Header File Inclusion
//////////////////////////////////////////////////////////////////////////////////////////
//
//  Function Name :   ChkEven
//  Parameters :      Interger
//  Returntype :      Interger
//  Description :     It is used to check Even or Odd
//  Author :          Nikita Santosh Karande
//  Date :            25 july 2020
//
//////////////////////////////////////////////////////////////////////////////////////////
//Function Defination
BOOL ChkEven(intiNo)   //Input Of The Function
{
if(iNo%2==0)
  {
return TRUE;
  }
else
  {
return FALSE;
  }
}
#include"Header.h"//Header File Inclusion
/*
Problem Statement:  Accept number from user and check whether number is even or odd.
*/
/*
 START
      Accept number as No
	  Divide the No by 2 and store the remainder into result
	  If the result is zero
	     then return Even 
	  Otherwise 
	    return Odd
  END 

*/
//Function Definition
intmain()
{
intiValue = 0;   //Local Variable
 BOOL bRet = FALSE;   //Local Variable

printf("Enter number"); //Display On Screen
scanf("%d",&iValue);    //Accept input

bRet = ChkEven(iValue);   //Function Call

if(bRet==TRUE)
 {
printf("%d = is Even",iValue);
 }
else
 {
printf("%d = is odd",iValue);
 }

return 0;   //It Indicate Successfully Termination
}

*************************************Assignment 3***********************************
#include<stdio.h>
void PrintEven(int);
/*
   Write a program which accept one number from user and print
    that number of even numbers on screen
*/

#include "Header.h"     // Header file inclusion

int main()
{
   int iValue = 0;
   printf("Enter number\n");
   scanf("%d",&iValue);
   PrintEven(iValue);
   return 0;
}
#include "Header.h"             // Header file inclusion

//////////////////////////////////////////////////////////////
//
// Function name :        PrintEven
// Parameters :           Integer
// Return value :         None
// Description :          It is used print even number
// Author :               Nikita Santosh Karande
// Date :               1/8/2020
//////////////////////////////////////////////////////////////

// Function Defination
void PrintEven(int iNo)
 {
      if(iNo <= 0)
        {
            return;
        }
        int iEven=0;
        while(iNo>0)
        {
           iEven=iEven+2;
           printf("%d\n",iEven);
           iNo--;
        }
 }
#include<stdio.h>
void DisplayFactor(int);
/*
   2. Write a program which accept number from user and print even factors of that number.  
*/

#include "Header.h"     // Header file inclusion

int main()
{
  int iValue = 0;
  printf("Enter number\n");
  scanf("%d",&iValue);
  DisplayFactor(iValue);
  return 0;

}
#include "Header.h"             // Header file inclusion

//////////////////////////////////////////////////////////////
//
// Function name :        DisplayFactor
// Parameters :           Integer
// Return value :         None
// Description :          It is used display factor
// Author :               Nikita Santosh Karande
// Date :                 1/8/2020
//////////////////////////////////////////////////////////////

// Function Defination
void DisplayFactor(int iNo)
{
     int i = 0;
     if(iNo <= 0)
        {
            iNo = -iNo;
        }
        for(i = 1; i<= iNo/2;i++)
        {
            if(iNo%i==0)
             {
                 printf("%d ",i);
            }
        }
}
#include<stdio.h>
void DisplayEvenFactor(int);
/*
3. Write a program which accept number from user and print even factors of that number.
*/

#include "Header.h"     // Header file inclusion

int main()
{
    int iValue = 0;
    printf("Enter number\n");
    scanf("%d",&iValue);
    DisplayEvenFactor(iValue);
    return 0;
}
#include "Header.h"             // Header file inclusion

//////////////////////////////////////////////////////////////
//
// Function name :        DisplayEvenFactor
// Parameters :           Integer
// Return value :         None
// Description :          It is used accept number from user and print even factors of that number
// Author :               Nikita Santosh Karande
// Date :                  1/8/2020
//////////////////////////////////////////////////////////////

void DisplayEvenFactor(int iNo)
{
    int i = 0;
    if(iNo <= 0)
        {
            iNo = -iNo;
        }
         for(i = 2; i< iNo ;i++)
         {
             if(iNo%i==0)
             {
                 if(i%2==0)
                 printf("%d ",i);
             }
        }
}/*4. Accept one character from user and convert case of that character.
Input : a   Output : A
Input : D   Output : d */
#include<stdio.h>
int main()
{
    char cValue='\0';
    printf("Enter the character");
    scanf("%c",&cValue);
    DisplayConvert(cValue);
    return 0;
}
int DisplayConvert(int cValue)
{
    if(cValue>='a'&& cValue<='z')
    {
        printf("%c",cValue-32);
    }
    else if(cValue>='A'&& cValue<='Z')
    {
        printf("%c",cValue+32);
    }
}
/*5. Accept on character from user and check whether
 that character is vowel  (a,e,i,o,u) or not.
Input : E   Output : TRUE
Input : d   Output : FALSE */
#include<stdio.h>
#define true 1
#define false 0
typedef int bool;
int cvowel(char);
int main()
{
    char cValue='\0';
    bool bRet=false;
    printf("Enter the character");
    scanf("%c",&cValue);
    bRet=cvowel(cValue);
    if(bRet==true)
    {
        printf("It is Vowel");
    }
    else
    {
        printf("It is not vowel");
    }
   return 0;
}
int cvowel(char cValue)
{
    if(cValue=='a'||cValue=='e'||cValue=='i'||cValue=='o'||cValue=='u'||cValue=='A'||cValue=='E'||cValue=='I'||cValue=='O'||cValue=='U')
    {
        return true;
    }
    else
    {
        return false;
    }
}

/*
Problem statement :
1. Accept number from user and return the Multiplication of factors of that number.

*/

#include "Header.h"

int main()          // Entry point function
{
    int iValue = 0;
    int iRet = 0;
    
    printf("Enter number\n");
    scanf("%d",&iValue);
    
    iRet = MultFact(iValue);        
    
    printf("Multiplication of factors is : %d\n",iRet);
    
    return 0;
}
#include "Header.h"

//////////////////////////////////////////////////////////////
//
//  Function name : MultFact
//  Input : Interger
//  Output :    Integer
//  Description :   It is used to perform the multiplication the factors
//  Autor : nikita santosh karande
//  Date :  1/08/2020
//
//////////////////////////////////////////////////////////////

int MultFact(int iNo)
{
    int iSum = 1;       
    int iCnt = 0;         
    
 
    if(iNo == 0)        
    {
        return 0;
    }
    

    if(iNo < 0)             
    {
        iNo = -iNo;         
    }
    
    for(iCnt = 2; iCnt <= iNo/2 ; iCnt++)
    {
            if((iNo % iCnt) == 0)
            {
                iSum = iSum * iCnt;
            }
    }
    
    return iSum;
}

//////////////////////////////////////////////////////////////////////////
//
//  Time complexity : O(N/2)
//  Where N is the input for our applicartion.
//
//////////////////////////////////////////////////////////////////////////

/*
Problem statement :
2.Write a program which accept number from user and display its factors in decreasing order.

*/

#include "Header.h"

int main()          // Entry point function
{
    int iValue = 0;
    
    printf("Enter number\n");
    scanf("%d",&iValue);
    
    FactRev(iValue);        
    
    return 0;
}
#include "Header.h"

//////////////////////////////////////////////////////////////
//
//  Function name :FactRev
//  Input : Interger
//  Output :   None
//  Description :   It is used to display its factors in decreasing order
//  Autor : nikita santosh karande
//  Date :  1/08/2020
//
//////////////////////////////////////////////////////////////

void FactRev(int iNo)
{
    int iSum = 0;
    int iCnt = 0;


    if(iNo == 0)
    {
        return;
    }


    if(iNo < 0)
    {
        iNo = -iNo;
    }

    for(iCnt = iNo/2; iCnt<= iNo ; iCnt--)
    {
            if((iNo % iCnt) == 0)
            {
                printf("%d ",iCnt);
            }
    }

}
//////////////////////////////////////////////////////////////////////////
//
//  Time complexity : O(N)
//  Where N is the input for our applicartion.
//
//////////////////////////////////////////////////////////////////////////
*****************************************Assignment 5************************************
#include<stdio.h>       

void NonFact(int);

/*
Problem statement :
 Accept number from user and display non factors of that number.
 
*/

/*
    Algorithm :
 
    START
            Accept number from user and store into the variable no
 
            Craete one counter as cnt and initialise to 1
 
            Iterate till the counter is less than the number ie no
                check whether the cnt divides the no completetly
                    if no
                        then display the counter
                incremnet the value of counter by 1
 
            continue to the iteration
    END
*/

#include "Header.h"

int main()        
{
    int iValue = 0;
    
    printf("Enter number\n");
    scanf("%d",&iValue);
    
    NonFact(iValue);  	
    
    return 0;
}



#include "Header.h"

//////////////////////////////////////////////////////////////
//
//  Function name : NonFact
//  Input : Interger
//  Output :    None
//  Description :   It is used to display the Non Factorial
//  Autor : Nikita santosh Karande
//  Date :  1/8/2020
//
//////////////////////////////////////////////////////////////

void NonFact(int iNo)        
{
    int iCnt = 0;                       
    for( iCnt = 1 ; iCnt < iNo ; iCnt++ )
    {
       if((iNo % iCnt) != 0)        
       {
               printf("%d\n",iCnt);
       }
    }
}

//////////////////////////////////////////////////////////////////////////
//
//  Time complexity : O(N)
//  Where N is the input for our applicartion.
//
//////////////////////////////////////////////////////////////////////////

#include<stdio.h>       // REquired for printf and scanf

int SumNonFact(int);

/*
Problem statement :
 Accept number from user and display summation of non factors of that number.
 
*/

/*
    Algorithm :
 
    START
            Accept number from user and store into the variable no
 
            Craete one counter as cnt and initialise to 1
 
            Iterate till the counter is less than the number ie no
                check whether the cnt divides the no completetly
                    if yes
                        then display summation of factors the counter
                incremnet the value of counter by 1
 
            continue to the iteration
    END
*/

#include "Header.h"

int main()
{
    int iValue = 0;
    int iRet=0;
    printf("Enter number\n");
    scanf("%d",&iValue);

   iRet= SumNonFact(iValue);
    printf("%d",iRet);
    return 0;
}


#include "Header.h"

//////////////////////////////////////////////////////////////
//
//  Function name : SumNonFact
//  Input : Interger
//  Output :    None
//  Description :   It is used to display the summation of factor
//  Autor : Nikita santosh Karande
//  Date :  1/8/2020
//
//////////////////////////////////////////////////////////////

int SumNonFact(int iNo)        
{
    int iCnt = 0; 
    int iSum=0;                      
    for( iCnt = 1; iCnt < iNo ; iCnt++ )
    {
       if((iNo % iCnt) != 0)        
       {
               iSum=iSum+iCnt;
       }
    }
    return iSum;
}

//////////////////////////////////////////////////////////////////////////
//
//  Time complexity : O(N)
//  Where N is the input for our applicartion.
//
//////////////////////////////////////////////////////////////////////////


#include<stdio.h>       

int FactDiff(int);

/*
Problem statement :
 5.Write a program which accept number from user and return difference 
 between summation of all its factors and non factors. 
 
*/

/*
    Algorithm :
 
    START
            Accept number from user and store into the variable no
 
            Craete one counter as cnt and initialise to 1
 
            Iterate till the counter is less than the number ie no
                check whether the cnt divides the no completetly
                    if yes
                        then store one variable summation of  non factors the counter
               else
                  then store one variable summation of factors the counter
                incremnet the value of counter by 1
            continue to the iteration
in one variable in ans
return ans
    END
*/

#include "Header.h"

int main()
{
    int iValue = 0;
    int iAns=0;
    printf("Enter number\n");
    scanf("%d",&iValue);

    iAns=FactDiff(iValue);
    printf("%d",iAns);

    return 0;
}


#include "Header.h"

//////////////////////////////////////////////////////////////
//
//  Function name : FactDiff
//  Input : Interger
//  Output :   Integer
//  Description :   It is used to display the difference of factor
//  Autor : Nikita santosh Karande
//  Date :  1/8/2020
//
//////////////////////////////////////////////////////////////

int FactDiff(int iNo)
{
    int iCnt = 0;
    int iSumNoFact=0;
    int iSumFact=0;
    int iAns;
    for( iCnt = 1; iCnt < iNo ; iCnt++ )
    {
       if((iNo % iCnt) != 0)
       {
               iSumNoFact=iSumNoFact+iCnt;
       }
       else
       {
              iSumFact=iSumFact+iCnt;
       }
    }
    iAns=(iSumFact-iSumNoFact);
    return iAns;
}
//////////////////////////////////////////////////////////////////////////
//
//  Time complexity : O(N)
//  Where N is the input for our applicartion.
//
//////////////////////////////////////////////////////////////////////////

**********************************Assingment  5***************************************



/*1. Write a program which accept name from user and print that name.  
  Input : Piyush Khairnar
  Output : Piyush Khairnar */

#include<stdio.h>
//////////////////////////////////////////////////////////////
//
// Function Name :      None
// Parameters :         None
// Return value :       None
// Description :        It Is Used accept name from user and print that name
// Author :             Nikita Santosh Karande
// Date :               3 august 2020
//
//////////////////////////////////////////////////////////////
/*
algorithm:
   START
        chreate of one variable name of character
        strore this varible
        display the variable 
   END*/
int main()
{
     char Name[30];
     printf("Please enter full name\n");
     scanf("%[^\n]s",&Name);
     printf("Your name is %s",Name);
     return 0;
}

******************************************************************************************

/*2.  Write a program which accept one number from user and check
whether that number is greater than 100 or not.
  Input : 101    Output : Greater
  Input : 39    Output : Smaller */
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0
//////////////////////////////////////////////////////////////
//
// Function Name :      ChkGreater
// Parameters :         integer
// Return value :       Bool
// Description :        It Is Used number is greater than 100 or not
// Author :             Nikita Santosh Karande
// Date :               3 august 2020
//
//////////////////////////////////////////////////////////////
BOOL ChkGreater(iValue)
{
   if(iValue>100)
   {
       return TRUE;
   }
   else
   {
       return FALSE;
   }
}
/*
Algorithm:
 START
       create one variable no
       create variable bool
       if  check the value is greater than 100
       then 
        return true
       otherwise false
       display the value
 END */
       
int main()
{
    int iValue = 0;
    BOOL bRet = FALSE;
    printf("Please enter number");
    scanf("%d",&iValue);
    bRet = ChkGreater(iValue);
    if(bRet==TRUE)
        {
            printf("Greater");
        }
    else
        {
           printf("Smaller");
        }
        return 0;
}
*******************************************************************************************
 /*3. Write a program which accept two numbers
  and check whether numbers are equal or not.

Input : 10 10
Output : Equal
Input : 10 12
Output : Not Equal
Input : 10 -10
Output : Not Equal */
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0
//////////////////////////////////////////////////////////////
//
// Function Name :      ChkEqual
// Parameters :         integer
// Return value :       Bool
// Description :        It Is Used number is greater than 100 or not
// Author :             Nikita Santosh Karande
// Date :               3 august 2020
//
//////////////////////////////////////////////////////////////
BOOL ChkEqual(int iValue1,int iValue2)
{
    if(iValue1==iValue2)
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}
/*Algorithm:
 START
       create two variable no
       create one variable bool
       if first value and second value is same
       then 
        return true
       otherwise false
 END */
int main()
{
    int iValue1 = 0,iValue2 = 0;
    BOOL bRet = FALSE;
    printf("Please enter two numbers");
    scanf("%d%d",&iValue1, &iValue2);
    bRet = ChkEqual(iValue1,iValue2);
    if(bRet==TRUE)
        {
            printf("Equal");
        }
    else
        {
           printf("Not Equal");
        }
    return 0;
}
*******************************************************************************************
 /*4. Write a program which accept three numbers and print its multiplication.  
  Input :  5   4   7
  Output :  140
  Input :  5   0   7
   Output :  35
  Input :  5   0   0
  Output :  5
  Input :  0   0   0
  Output :  0  */
#include<stdio.h>
#define FALSE 0
//////////////////////////////////////////////////////////////
//
// Function Name :      Multiply
// Parameters :         integer
// Return value :       integer
// Description :        It Is Used three numbers and print its multiplication
// Author :             Nikita Santosh Karande
// Date :               3 august 2020
//
//////////////////////////////////////////////////////////////
int Multiply(int no1,int no2,int no3)
{
    int mult=0;
       if(no1!=0&&no3!=0) // Handle the condition if number is 0
       {
           mult=no1*no3;
           return mult;
       }
       else if(no3!=0&&no2!=0)
        {
           mult=no2*no3;
           return mult;
       }
       else if(no1!=0&&no2!=0)
        {
           mult=no1*no2;
           return mult;
       }
       else if(no1!=0&&no2!=0&&no3!=0)
        {
           mult=no1*no2*no3;
           return mult;
       }
       else if(no1!=0)
        {
           mult=no1;
           return mult;
       }
         else if(no2!=0)
        {
           mult=no2;
           return mult;
       }
         else if(no3!=0)
        {
           mult=no3;
           return mult;
       }
       else
       {
           return 0;
       }
  }
int main()
{
    int iValue1 = 0,iValue2 = 0, iValue3 = 0, iRet = 0;
    printf("Please enter three numbers\n");
    scanf("%d %d %d",&iValue1, &iValue2, &iValue3);
    iRet = Multiply(iValue1,iValue2,iValue3);
    printf("your multiplication is:%d",iRet);
    return 0;
}
*******************************************************************************************
/*5. Write a program which accept total marks & obtained marks
from user and calculate percentage.  */
Input :  1000  745
Output :  74.5%
#include<stdio.h>
//////////////////////////////////////////////////////////////
//
// Function Name :      Multiply
// Parameters :         integer
// Return value :       integer
// Description :        It Is Used accept total marks & obtained marks from user and calculate percentage
// Author :             Nikita Santosh Karande
// Date :               3 august 2020
//
//////////////////////////////////////////////////////////////
float Percentage(float total,float obtain)
{
    int Percentage=0;
    if(total!=0&&obtain!=0)
    {
        Percentage=(obtain/total)*100;
        return Percentage;
    }
}
int main()
{
   int iValue1 = 0,iValue2 = 0;
   float fRet = 0.0;
   printf("Please enter total marks");
   scanf("%d",&iValue1);
   printf("Please enter obtained marks");
   scanf("%d",&iValue2);
   fRet = Percentage(iValue1,iValue2);
   printf("%d",fRet);
   return 0;
}
******************************************************************************************
*************************************Assingment 6*****************************************

/*1.Write a program which accept number from user and display its digits in reverse order.
Input :  2395
Output :
5
9
3
2
Input :  1018
Output :  8   1   0   1
Input :  -1018
Output :  8   1   0   1
Input :  9000
Output :  0   0   0   9       */
#include<stdio.h>


void DisplayDigit(int iNo)
{
    int iDigit = 0;
    if(iNo<0)
        {
            iNo = -iNo;
        }
    while(iNo!=0)
        {
            iDigit =iNo%10;
            printf("%d\n",iDigit);
             iNo = iNo/10;
        }
}
int main()
{
    int iValue = 0;
    printf("Enter number\n");
    scanf("%d",&iValue);
    DisplayDigit(iValue);
    return 0;
}
******************************************************************************************
/*2.Write a program which accept number from
user and check whether it contains 0 in it or not.
Input :  2395
Output :  There is no Zero
Input :  1018
Output :  It Contains Zero
Input :  9000
Output :  It Contains Zero
Input :  10687
Output :  It Contains Zero    */
#include<stdio.h>
#define TRUE 1
#define FALSE 0
typedef int BOOL;
BOOL ChkZero(int iNo)
{
    int iDigit=0,iCount=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    while(iNo!=0)
    {
        iDigit=iNo%10;
        if(iDigit==0)
        {
            iCount++;
        }
        iNo=iNo/10;
    }
    if(iCount!=0)
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}
int main()
{
    int iValue = 0;
    BOOL bRet = FALSE;
    printf("Enter number");
    scanf("%d",&iValue);
    bRet=ChkZero(iValue);
    if(bRet==TRUE)
    {
        printf("It Contains Zero");
    }
    else
    {
        printf("There is no Zero");
    }
    return 0;
}
*****************************************************************************************
/*3.Write a program which accept number
from user and count frequency of 2 in it.
Input :  2395  Output :  1
Input :  1018 Output :  0
Input :  9000 Output :  0
Input :  922432 Output :  3 */
#include<stdio.h>
int CountTwo(int iNo)
{
    int iDigit=0,iCount=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    while(iNo!=0)
    {
        iDigit=iNo%10;
        if(iDigit==2)
        {
            iCount++;
        }
        iNo=iNo/10;
    }
    return iCount;
}
int main()
{
     int iValue = 0;
     int iRet = 0;
     printf("Enter number");
     scanf("%d",&iValue);
     iRet = CountTwo(iValue);
     printf("%d",iRet);
     return 0;
}
******************************************************************************************
/*4.Write a program which accept number from user and count frequency of 4 in it.
Input :  2395  Output :  0
Input :  1018 Output :  0
Input :  9440 Output :  2
Input :  922432 Output :  1  */
#include<stdio.h>
int CountFour(int iNo)
{
    int iDigit=0,iCount=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    while(iNo!=0)
    {
        iDigit=iNo%10;
        if(iDigit==4)
        {
            iCount++;
        }
        iNo=iNo/10;
    }
    return iCount;
}
int main()
{
     int iValue = 0;
     int iRet = 0;
     printf("Enter number");
     scanf("%d",&iValue);
     iRet = CountFour(iValue);
     printf("%d",iRet);
     return 0;
}
*****************************************************************************************
/*5.Write a program which accept number from user and
 count frequency of such a digits which are less than 6.
Input :  2395  Output :  3
Input :  1018 Output :  3
Input :  9440 Output :  3
Input :  96672 Output :  1  */
#include<stdio.h>
int Count(int iNo)
{
    int iDigit=0,iCount=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    while(iNo!=0)
    {
        iDigit=iNo%10;
        if(iDigit<6)
        {
            iCount++;
        }
        iNo=iNo/10;
    }
    return iCount;
}
int main()
{
     int iValue = 0;
     int iRet = 0;
     printf("Enter number");
     scanf("%d",&iValue);
     iRet = Count(iValue);
     printf("%d",iRet);
     return 0;
}
****************************************************************************************
*******************************Assingnment 7********************************************
/*1.Write a program which accept number from user and return
the count of even digits.
Input :  2395  Output :  1
Input :  1018 Output :  2
Input :  -1018 Output :  2
Input :  8462 Output :  4   */
#include<stdio.h>
int CountEven(int iNo)
{
    int iDigit=0,iCount=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    while(iNo!=0)
    {
        iDigit=iNo%10;
        if(iDigit%2==0)
        {
            iCount++;
        }
        iNo=iNo/10;
    }
    return iCount;
}
int main()
{
     int iValue = 0;
     int iRet = 0;
     printf("Enter number");
     scanf("%d",&iValue);
     iRet = CountEven(iValue);
     printf("%d",iRet);
     return 0;
}
******************************************************************************************
/*2.Write a program which accept number from user and return the count of odd digits.
Input :  2395  Output :  3
Input :  1018 Output :  2
Input :  -1018 Output :  2
Input :  8462 Output :  0   */
#include<stdio.h>
int CountOdd(int iNo)
{
    int iDigit=0,iCount=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    while(iNo!=0)
    {
        iDigit=iNo%10;
        if(iDigit%2!=0)
        {
            iCount++;
        }
        iNo=iNo/10;
    }
    return iCount;
}
int main()
{
     int iValue = 0;
     int iRet = 0;
     printf("Enter number");
     scanf("%d",&iValue);
     iRet = CountOdd(iValue);
     printf("%d",iRet);
     return 0;
}
*****************************************************************************************
/*3.Write a program which accept number from user and return the
count of digits in between 3 and 7.
Input :  2395  Output :  1
Input :  1018 Output :  0
Input :  4521 Output :  2
Input :  9922 Output :  0 */
#include<stdio.h>
int CountRange(int iNo)
{
    int iDigit=0,iCount=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    while(iNo!=0)
    {
        iDigit=iNo%10;
        if(iDigit>3&&iDigit<7)
        {
            iCount++;
        }
        iNo=iNo/10;
    }
    return iCount;
}
int main()
{
     int iValue = 0;
     int iRet = 0;
     printf("Enter number");
     scanf("%d",&iValue);
     iRet = CountRange(iValue);
     printf("%d",iRet);
     return 0;
}
******************************************************************************************
/*4.Write a program which accept number from user and return
 multiplication of all digits.
Input :  2395  Output :  270
Input :  1018 Output :  8
Input :  9440 Output :  144
Input :  922432 Output :  864  */
#include<stdio.h>
int MultDigits(int iNo)
{
    int iDigit=0,iCount=0,iAns=1;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    while(iNo!=0)
    {
        iDigit=iNo%10;
        if(iDigit!=0)
        {
            iAns=iAns*iDigit;
        }
        iNo=iNo/10;
    }
    return iAns;
}
int main()
{
     int iValue = 0;
     int iRet = 0;
     printf("Enter number");
     scanf("%d",&iValue);
     iRet = MultDigits(iValue);
     printf("%d",iRet);
     return 0;
}
****************************************************************************************
/*5.Write a program which accept number from user
and return difference between summation of even digits
 and summation of odd digits.
Input :  2395  Output :  -15 (2 - 17)
Input :  1018 Output :  6 (8 - 2)
Input :  8440 Output :  16  (16 - 0)
Input :  5733 Output :  -18 (0 - 18) */
#include<stdio.h>
int MultDigits(int iNo)
{
    int iDigit=0,iCount=0,iAns1=1,iAns2=1,iFinalAns=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    while(iNo!=0)
    {
        iDigit=iNo%10;
        if(iDigit%2==0)
        {
            iAns1=iAns1+iDigit;
        }
        else
        {
            iAns2=iAns2+iDigit;
        }
        iNo=iNo/10;
    }
    iFinalAns=(iAns1-iAns2);
    return iFinalAns;
}
int main()
{
     int iValue = 0;
     int iRet = 0;
     printf("Enter number");
     scanf("%d",&iValue);
     iRet = MultDigits(iValue);
     printf("%d",iRet);
     return 0;
}
*****************************************************************************************

***********************************Assignment 8****************************************
/*1. Write a program which accept number from user and if
number is less than 50 then print small , if it is greater than
 50 and less than 100 then print medium, if it is greater than 100 then
print large.
 Input : 75  Output : Medium
 */
#include<stdio.h>
void Number(int iNo)
{
    if(50>iNo)
    {
        printf("Small\n");
    }
    else if(iNo>50&&iNo<100)
    {
        printf("Medium\n");
    }
    else
    {
        printf("Large");
    }
}
int main()
{
     int iValue = 0;
     printf("Enter number");
     scanf("%d",&iValue);
     Number(iValue);
     return 0;
}

******************************************************************************************
/*2. Accept single digit number from user and print it into word.
Input : 9  Output : Nine
Input : -3 Output : Three
Input : 12 Output : Invalid Number
 */
#include<stdio.h>
void Display(int iNo)
{
    switch(iNo)
    {
            case -1:
            case 1:
            printf("One");
            break;
            case 2:
            case -2:
            printf("Two");
            break;
            case 3:
            case -3:
            printf("Three");
            break;
            case 4:
            case -4:
            printf("Four");
            break;
            case 5:
            case -5:
            printf("Five");
            break;
            case 6:
            case -6:
            printf("Six");
            break;
            case 7:
            case -7:
            printf("Seven");
            break;
            case 8:
            case -8:
            printf("Eight");
            break;
            case 9:
            case -9:
            printf("Nine");
            break;
            case 10:
            case -10:
            printf("Ten");
            break;
            default:
                printf("Invalid Number");
                break;
            }
}
int main()
{
    int iValue = 0;
    printf("Enter number");
    scanf("%d",&iValue);
    Display(iValue);
    return 0;
}

************************************************************************************
/*3.Write a program to find factorial of given number.
Input :  5  Output :  120   (5 * 4 * 3 * 2 * 1)
Input :  -5  Output :  120   (5 * 4 * 3 * 2 * 1)
Input :  4  Output :  24   (4 * 3 * 2 * 1)
 */
#include<stdio.h>
int Factorial(int iNo)
{
    int iFact=1,iAns=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    while(iNo!=0)
    {
        iFact=iFact*iNo;
        iNo--;
    }
    return iFact;
}
int main()
{
    int iValue = 0,iRet = 0;
    printf("Enter number");
    scanf("%d",&iValue);
    iRet = Factorial(iValue);
    printf("Factorial of number is %d",iRet);
    return 0;
}
****************************************************************************************
/*4.Write a program which accept number from user and display its table.
Input :  2 Output :  2 4 6 8 10 12 14 16 18 20
Input :  5 Output :  5 10 15 20 25 30 35 40 45 50
Input :  -5 Output :  5 10 15 20 25 30 35 40 45 50
 */
#include<stdio.h>
void Table(int iNo)
{
    int i,iAns;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    iAns=iNo;
    for(i=1;i<=10;i++)
    {
        printf("%d ",iAns);
        iAns=iAns+iNo;
    }
}
int main()
{
    int iValue = 0;
    printf("Enter number");
    scanf("%d",&iValue);
    Table(iValue);
    return 0;
}
***************************************************************************************
/*5. Write a program which accept number from user
and display its table in reverse order.
Input :  2 Output :  20 18 16 14 12 10 8 6 4 2
 Input :  5 Output :  50 45 40 35 30 25 20 15 10 5
Input :  -5 Output :  50 45 40 35 30 25 20 15 10 5
 */
#include<stdio.h>
void TableRev(int iNo)
{
    int i,iAns;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    for(i=10;i>0;i--)
    {
        iAns=i*iNo;
        printf("%d ",iAns);
    }
}
int main()
{
    int iValue = 0;
    printf("Enter number");
    scanf("%d",&iValue);
    TableRev(iValue);
    return 0;
}


***********************************Assignment 9**************************************
/*1.Write a program which accept number from user and print
 that number of $ & * on screen.
Input :  5 Output :  $ * $ * $ * $ * $ *
Input :  3 Output :  $ * $ * $ *
Input :  -3 Output :  $ * $ * $ *        */
#include<stdio.h>
//////////////////////////////////////////////////////////////
//
// Function Name :      Pattern
// Parameters :         Integer
// Return value :       None
// Description :        It Is Used number of $ & * on screen
// Author :             Nikita Santosh Karande
// Date :               3 august 2020
//
//////////////////////////////////////////////////////////////
void Pattern(int iNo)
{
    int i=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    for(i=1;i<=iNo;i++)
    {
        printf("$ *");
    }
}
int main()
{
    int iValue = 0;
    printf("Enter number");
    scanf("%d",&iValue);
    Pattern(iValue);
    return 0;
}
***************************************************************************************
/*2.Write a program which accept number from user
 and print numbers till that  number.
 Input :  8
 Output :  1  2  3  4  5  6  7  8  -*/
 #include<stdio.h>
//////////////////////////////////////////////////////////////
//
// Function Name :      Display
// Parameters :         Integer
// Return value :       None
// Description :        It Is Used print numbers till that  number
// Author :             Nikita Santosh Karande
// Date :              3 august 2020
//
//////////////////////////////////////////////////////////////

void Display(int iNo)
{
    int i;
    for(i=1;i<=iNo;i++)
    {
        printf("%d ",i);
    }
}
int main()
{
     int iValue = 0;
     printf("Enter number");
     scanf("%d",&iValue);
     Display(iValue);
     return 0;
}
*****************************************************************************************
/*3. Write a program which accept number from user and print its numbers line.
 Input :  4  Output :  -4  -3  -2  -1  0  1  2  3  4 */
#include<stdio.h>
void Display(int iNo)
{
   int i,iCpy=0;
   iCpy=-iNo;
   for(i=iNo;i>=iCpy;i--)
   {
       printf("%d ",i);
   }
}
int main()
{
     int iValue = 0;
     printf("Enter number");
     scanf("%d",&iValue);
     Display(iValue);
     return 0;
}
*******************************************************************************************
/*4. Write a program which accepts N from user and print
 all odd numbers up to N.
Input :  18  Output :  1  3  5  7  9  11  13  */
#include<stdio.h>
void OddDisplay(int iNo)
{
    int i=1;
    for(i=1;i<iNo;i++)
    {
        if(i%2!=0)
        {
            printf("%d ",i);
        }
    }
}
int main()
{
    int iValue = 0;
    printf("Enter number");
    scanf("%d",&iValue);
    OddDisplay(iValue);
    return 0;
}
*****************************************************************************************
/*5. Write a program which accept N and print
first 5 multiples of N.
Input :  4  Output :  4  8  12  16  20
 */
#include<stdio.h>
void MultipleDisplay(int iNo)
{
    int i,iAns=0;
     for(i=1;i<=5;i++)
     {
         iAns=iAns+iNo;
         printf("%d ",iAns);
     }
}
int main()
{
    int iValue = 0;
    printf("Enter number");
    scanf("%d",&iValue);
    MultipleDisplay(iValue);
    return 0;
}

******************************************************************************************
********************************Assignment 10********************************************
/*1.Write a program which accept radius of circle from user
and calculate its area. Consider value of PI as 3.14. (Area = PI * Radius * Radius)
Input :  5.3  Output :  88.2026
Input :  10.4  Output :  339.6224
 */
 #include<stdio.h>
double CircleArea(float fRadius)
{
    float iPI=3.14;
    double iArea=0;
    return(iPI*fRadius*fRadius);
}
int main()
{
    float fValue = 0.0;
    double dRet = 0.0;
    printf("Enter radius");
    scanf("%f",&fValue);
    dRet = CircleArea(fValue);
    printf("%f",dRet);
    return 0;
}
***************************************************************************************
/*2. Write a program which accept width & height
 of rectangle from user and calculate its area. (Area = Width * Height)
Input :  5.3  9.78 Output :  51.834 
 */
 #include<stdio.h>
double RectArea(float fWidth, float fHeight)
{
    return(fWidth*fHeight);
}
int main()
{
     float fValue1 = 0.0, fValue2 = 0.0;
     double dRet = 0.0;
     printf("Enter width");
     scanf("%f",&fValue1);
     printf("Enter height");
     scanf("%f",&fValue2);
     dRet = RectArea(fValue1, fValue2);
     printf("%f",dRet);
     return 0;
}
*****************************************************************************************
/*3. Write a program which accept distance in kilometre
 and convert it into meter. (1 kilometre = 1000 Meter)
Input :  5 Output :  5000  Input :  12 Output :  12000 
 */
 #include<stdio.h>
int KMtoMeter(int iNo)
{
    return(iNo*1000);
}
int main()
{
     int iValue = 0, iRet = 0;
     printf("Enter distance");
     scanf("%d",&iValue);
     iRet = KMtoMeter(iValue);
     printf("%d",iRet);
     return 0;
}
****************************************************************************************
/*4. Write a program which accept temperature in Fahrenheit and
 convert it into celsius. (1 celsius = (Fahrenheit -32) * (5/9))
Input :  10 Output :  -12.2222 (10 - 32) * (5/9) 
Input :  34 Output :  1.11111 (34 - 32) * (5/9) 
 */
 #include<stdio.h>
double FhtoCs(float fTemp)
{
    return((fTemp-32)*(5/9));
}
int main()
{
      float fValue = 0;
      double dRet;
      printf("Enter temperature in Fahrenheit");
      scanf("%f",&fValue);
      dRet = FhtoCs(fValue);
      printf("%f",dRet);
      return 0;
}

*****************************************************************************************
/*5. Write a program which accept area in square feet and convert
 it into square meter. (1 square feet = 0.0929 Square meter)
Input :  5 Output :  0.464515  Input :  7 Output :  0.650321
 */
 #include<stdio.h>
double SquareMeter(int iValue)
{
    double iNo=0.0929;
    return(iValue*iNo);
}
int main()
{
     int iValue = 0;
     double dRet = 0.0;
     printf("Enter area in square feet");
     scanf("%d",&iValue);
     dRet = SquareMeter(iValue);
     printf("%f",dRet);
     return 0;
}
******************************************************************************************
****************************************Assignment 11*************************************
/*1.Write a program which accept range from user and display all numbers in between that range.
Input :  23 35  Output :  23 24 25 26 27 28 29 30 31 32 33 34 35
Input :  10 18 Output :  10 11 12 13 14 15 16 17 18
Input :  10 10 Output :  10
Input :  -10 2 Output :  -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0 1 2
Input :  90 18 Output :  Invalid range
 */
 #include<stdio.h>
void RangeDisplay(int iStart,int iEnd)
{
    if(iStart>=iEnd)
    {
        printf("Invalid range");
    }
   while(iStart<=iEnd)
   {
       printf("%d ",iStart);
       iStart++;
   }
}
int main()
{
      int iValue1 = 0, iValue2 = 0;
      printf("Enter starting point");
      scanf("%d",&iValue1);
      printf("Enter ending point");
      scanf("%d",&iValue2);
      RangeDisplay(iValue1,iValue2);
      return 0;
}
*****************************************************************************************
/*2. Write a program which accept range from user and display all even numbers in between that range.
Input :  23 35  Output :  24 26 28 30 32 34     Input :  10 18 Output :  10 12 14 16 18
Input :  10 10 Output :  10
Input :  -10 2 Output :  -10 -8 -6 -4 -2 0 2
Input :  90 18 Output :  Invalid range
 */
 #include<stdio.h>
void RangeDisplayEven(int iStart,int iEnd)
{
    if(iStart>=iEnd)
    {
        printf("Invalid range");
    }
   while(iStart<=iEnd)
   {
       if(iStart%2==0)
       {
           printf("%d ",iStart);
       }
       iStart++;
   }
}
int main()
{
      int iValue1 = 0, iValue2 = 0;
      printf("Enter starting point");
      scanf("%d",&iValue1);
      printf("Enter ending point");
      scanf("%d",&iValue2);
      RangeDisplayEven(iValue1,iValue2);
      return 0;
}
***********************************************************************************
/*3. Write a program which accept range from user and return
 addition of all numbers in between that range. (Range should contains positive numbers only)
Input :  23 30  Output :  212
  Input :  10 18 Output :  126
Input :  -10 2 Output :  Invalid range
Input :  90 18 Output :  Invalid range
 */
 #include<stdio.h>
int RangeSum(int iStart,int iEnd)
{
    int iAns=0;
    if(iStart>=iEnd)
    {
        printf("Invalid range");
    }
    while(iStart<=iEnd)
    {
        iAns=iAns+iStart;
        iStart++;
    }
   return iAns;
}
int main()
{
      int iValue1 = 0, iValue2 = 0,iRet=0;
      printf("Enter starting point");
      scanf("%d",&iValue1);
      printf("Enter ending point");
      scanf("%d",&iValue2);
      iRet = RangeSum(iValue1, iValue2);
      printf("Addition is %d",iRet);
      return 0;
}
**************************************************************************************
/*4.Write a program which accept range from user and return addition of
all even numbers in between that range. (Range should contains positive numbers only)
Input :  23 30  Output :  108    
Input :  10 18 Output :  70
Input :  -10 2 Output :  Invalid range
Input :  90 18 Output :  Invalid range
 */
 #include<stdio.h>
int RangeSumEven(int iStart,int iEnd)
{
    int iAns=0;
    if(iStart>=iEnd)
    {
        printf("Invalid range");
    }
    while(iStart<=iEnd)
    {
        if(iStart%2==0)
        {
            iAns=iAns+iStart;
        }
        iStart++;
    }
   return iAns;
}
int main()
{
      int iValue1 = 0, iValue2 = 0,iRet=0;
      printf("Enter starting point");
      scanf("%d",&iValue1);
      printf("Enter ending point");
      scanf("%d",&iValue2);
      iRet = RangeSumEven(iValue1,iValue2);
      printf("Addition is %d",iRet);
      return 0;
}
***************************************************************************************
/*5.Write a program which accept accept range from user and display all numbers
in between that range in reverse order.
Input :  23 35  Output :  35 34 33 32 31 30 29 28 27 26 25 24 23
   Input :  10 18 Output :  18 17 16 15 14 13 12 11 10
Input :  10 10 Output :  10
Input :  -10 2 Output :  2 1 0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10
 */
  #include<stdio.h>
void RangeDisplayRev(int iStart,int iEnd)
{
    if(iStart>iEnd)
    {
        printf("Invalid range");
    }
   while(iEnd>=iStart)
   {
       printf("%d ",iEnd);
       iEnd--;
   }
}
int main()
{
      int iValue1 = 0, iValue2 = 0;
      printf("Enter starting point");
      scanf("%d",&iValue1);
      printf("Enter ending point");
      scanf("%d",&iValue2);
      RangeDisplayRev(iValue1,iValue2);
      return 0;
}
*****************************************************************************************
***********************************Assingment 12**************************************
/*1.Write a program which accept number from user and display below pattern.
Input :  5  Output :  * * * * * # # # # #
Input :  6 Output :  * * * * * * # # # # # # #
Input :  -5  Output :  * * * * * # # # # #
Input :  2 Output :  * * # #
 */
  #include<stdio.h>
void Display(int iNo)
{
    int i=0,j;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    for(i=1;i<=iNo;i++)
    {
        printf("* ");
    }
     for(i=1;i<=iNo;i++)
    {
        printf("# ");
    }

}
int main()
{
    int iValue = 0;
    printf("Enter number");
    scanf("%d",&iValue);
    Display(iValue);
    return 0;
}
*************************************************************************************
/*2. Accept amount in US dollar and return its corresponding
value in Indian currency. Consider 1$ as 70 rupees.
Input :  10 Output :  700
Input :  3 Output :  210
Input :  1200 Output :  84000
 */
  #include<stdio.h>
int DollarToINR(int iNo)
{
   return(iNo*70);
}
int main()
{
    int iValue = 0,iRet=0;
    printf("Enter number");
    scanf("%d",&iValue);
    iRet=DollarToINR(iValue);
    printf("%d",iRet);
    return 0;
}
******************************************************************************************
/*3.Write a program to find even factorial of given number.
Input :  5  Output :  8   (4 * 2)
Input :  -5  Output :  8   (4 * 2)
Input :  10  Output :  3840  (10 * 8 * 6 * 4 * 2)
 */
  #include<stdio.h>
int EvenFactorial(int iNo)
{
   int i,iAns=1;
   if(iNo<0)
   {
       iNo=-iNo;
   }
    for(i=1;i<=iNo;i++)
    {
        if(i%2==0)
        {
            iAns=iAns*i;
        }
    }
    return iAns;
}
int main()
{
    int iValue = 0,iRet=0;
    printf("Enter number");
    scanf("%d",&iValue);
    iRet=EvenFactorial(iValue);
    printf("%d",iRet);
    return 0;
}
*****************************************************************************************
/*4. Write a program to find odd factorial of given number.
Input :  5  Output :  15   (5 * 3 * 1)
Input :  -5  Output :  15   (5 * 3 * 1)
Input :  10  Output :  945  (9 * 7 * 5 * 3 * 1)
 */
  #include<stdio.h>
int OddFactorial(int iNo)
{
   int i,iAns=1;
   if(iNo<0)
   {
       iNo=-iNo;
   }
    for(i=1;i<=iNo;i++)
    {
        if(i%2!=0)
        {
            iAns=iAns*i;
        }
    }
    return iAns;
}
int main()
{
    int iValue = 0,iRet=0;
    printf("Enter number");
    scanf("%d",&iValue);
    iRet=OddFactorial(iValue);
    printf("%d",iRet);
    return 0;
}
**************************************************************************************
/*5. Write a program which returns difference between Even
 factorial and odd factorial of given number.
Input :  5  Output :  -7   (8 - 15)
Input :  -5  Output :  -7   (8 - 15)
Input :  10  Output :  2895  (3840 - 945)
 */
  #include<stdio.h>
int FactorialDiff(int iNo)
{
   int i,iAns1=1,iAns2=1;
   if(iNo<0)
   {
       iNo=-iNo;
   }
    for(i=1;i<=iNo;i++)
    {
        if(i%2!=0)
        {
            iAns1=iAns1*i;
        }
        else
        {
            iAns2=iAns2*i;
        }
    }
    return(iAns2-iAns1);
}
int main()
{
    int iValue = 0,iRet=0;
    printf("Enter number");
    scanf("%d",&iValue);
    iRet=FactorialDiff(iValue);
    printf("%d",iRet);
    return 0;
}
******************************************************************************************

****************************************Assignment 14**************************************
/*
1. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 3
Output : * * *
         * * *
         * * *
         * * *
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row\n");
    scanf("%d",&iValue1);
    printf("Enter the Column\n");
    scanf("%d",&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int iCntRow=0,iCntColum=0;
    for(iCntRow=1;iCntRow<=iRow;iCntRow++)
    {
        for(iCntColum=1;iCntColum<=iCol;iCntColum++)
        {
            printf("* ");
        }
        printf("\n");
    }
}
******************************************************************************************
/*
2. Accept number of rows and number of columns from user
and display below pattern.
Input :  iRow = 4  iCol = 3
Output : 1 2 3
         1 2 3
         1 2 3
         1 2 3
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row\n");
    scanf("%d",&iValue1);
    printf("Enter the Column\n");
    scanf("%d",&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int iCntRow=0,iCntColum=0;
    for(iCntRow=1;iCntRow<=iRow;iCntRow++)
    {
        for(iCntColum=1;iCntColum<=iCol;iCntColum++)
        {
            printf("%d ",iCntColum);
        }
        printf("\n");
    }
}
****************************************************************************************
/*
3. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 3  iCol = 5
Output : 5 4 3 2 1
         5 4 3 2 1
         5 4 3 2 1
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row\n");
    scanf("%d",&iValue1);
    printf("Enter the Column\n");
    scanf("%d",&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int iCntRow=0,iCntColum=0;
    int iCpyColum=iCol;
    for(iCntRow=1;iCntRow<=iRow;iCntRow++)
    {
        for(iCntColum=1;iCpyColum>=iCntColum;iCpyColum--)
        {
            printf("%d ",iCpyColum);
        }
        printf("\n");
        iCpyColum=iCol;
    }
}
****************************************************************************************
/*
4. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 3  iCol = 4
Output : * # * #
         * # * #
         * # * #
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row\n");
    scanf("%d",&iValue1);
    printf("Enter the Column\n");
    scanf("%d",&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int iCntRow=0,iCntColumn=0;
    for(iCntRow=1;iCntRow<=iRow;iCntRow++)
    {
       for(iCntColumn=1;iCntColumn<=iCol;iCntColumn++)
       {
           if(iCntColumn%2==0)
           {
               printf("# ");
           }
           else
           {
               printf("* ");
           }
       }
       printf("\n");
    }
}
*****************************************************************************************
/*
5. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol =  4
Output : 1 1 1 1
         2 2 2 2
         3 3 3 3
         4 4 4 4
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row\n");
    scanf("%d",&iValue1);
    printf("Enter the Column\n");
    scanf("%d",&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int iCntRow=0,iCntColumn=0;
    for(iCntRow=1;iCntRow<=iRow;iCntRow++)
    {
       for(iCntColumn=1;iCntColumn<=iCol;iCntColumn++)
       {
           printf("%d",iCntRow);
       }
       printf("\n");
    }
}
******************************************************************************************
**********************************Assignment 13********************************************
/*
1. Accept number from user and display below pattern.
Input :  5
Output : A B C D E
*/

  #include<stdio.h>
int main()
{
    int iValue=0;
    printf("Enter the number\n");
    scanf("%d",&iValue);
    pattern(iValue);
    return 0;
}
void pattern(int iNo)
{
    int iCnt=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }

    for(iCnt=65;iNo>0;iCnt++,iNo--)
    {
       printf("%c ",iCnt);
    }
}

*******************************************************************************************
/*
2. Accept number from user and display below pattern.
Input :  5
Output : 5 # 4 # 3 # 2 # 1 #
*/
  #include<stdio.h>
int main()
{
    int iValue=0;
    printf("Enter the number\n");
    scanf("%d",&iValue);
    pattern(iValue);
    return 0;
}
void pattern(int iNo)
{
    int iCnt;

    if(iNo<0)
    {
        iNo=-iNo;
    }

    for(iCnt=1;iNo>=iCnt;iNo--)
    {
        printf("%d\t#\t",iNo);
    }
}
****************************************************************************************
/*
3. Accept number from user and display below pattern.
Input :  5
Output : 1 * 2 * 3 * 4 * 5 *
*/

  #include<stdio.h>
int main()
{
    int iValue=0;
    printf("Enter the number\n");
    scanf("%d",&iValue);
    pattern(iValue);
    return 0;
}
void pattern(int iNo)
{
    int iCnt;

    if(iNo<0)
    {
        iNo=-iNo;
    }

    for(iCnt=1;iCnt<=iNo;iCnt++)
    {
        printf("%d\t*\t",iCnt);
    }
}

************************************************************************************
/*
4. Accept number from user and display below pattern.
Input :  4
Output : # 1 * # 2 * # 3 * # 4 *
*/

  #include<stdio.h>
int main()
{
    int iValue=0;
    printf("Enter the number\n");
    scanf("%d",&iValue);
    pattern(iValue);
    return 0;
}
void pattern(int iNo)
{
    int iCnt;

    if(iNo<0)
    {
        iNo=-iNo;
    }

    for(iCnt=1;iCnt<=iNo;iCnt++)
    {
        printf("#\t%d\t*\t",iCnt);
    }
}

**************************************************************************************
/*
5. Accept number from user and display below pattern.
Input :  8
Output : 2 4 6 8 10 12 14 16
*/

  #include<stdio.h>
int main()
{
    int iValue=0;
    printf("Enter the number\n");
    scanf("%d",&iValue);
    pattern(iValue);
    return 0;
}
void pattern(int iNo)
{
    int iCnt=0;
    int iAns=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }

    for(iCnt=1;iCnt<=iNo;iCnt++)
    {
       iAns=iAns+2;
       printf("%d ",iAns);
    }
}

*************************************************************************************
*******************************************Assignment 15********************************
/*
1. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 4
Output : A B C D
         A B C D
         A B C D
         A B C D
*/

  #include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int iCnt1=0,iCnt2=0;
    int iCpy=iCol;
    for(iCnt1=0;iCnt1<iRow;iCnt1++)
    {
        for(iCnt2=65;iCpy>0;iCnt2++,iCpy--)
        {
            printf("%c ",iCnt2);
        }
        iCpy=iCol;
        printf("\n");
    }
}

************************************************************************************
/*
2. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 4
Output : A B C D
         a b c d
         A B C D
         a b c d
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int iCnt1=0,iCnt2=0;
    int iCpy=iCol;
    for(iCnt1=1;iCnt1<=iRow;iCnt1++)
    {
        if(iCnt1%2==0)
        {
            for(iCnt2=97;iCpy>0;iCnt2++,iCpy--)
            {
                printf("%c ",iCnt2);
            }

        }
        else
        {
             for(iCnt2=65;iCpy>0;iCnt2++,iCpy--)
            {
                printf("%c ",iCnt2);
            }
        }
        iCpy=iCol;
        printf("\n");
    }
}

**************************************************************************************
/*
3. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 3  iCol = 5
Output : A A A A A
         B B B B B
         C C C C C
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int iCnt1=0,iCnt2=0;
    char iChar='A';
    for(iCnt1=1;iCnt1<=iRow;iCnt1++)
    {
        for(iCnt2=1;iCnt2<=iCol;iCnt2++)
        {
            printf("%c ",iChar);
        }
        printf("\n");
        iChar++;
    }

}

***************************************************************************************
/*
4. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 5
Output : 4 4 4 4 4
         3 3 3 3 3
         2 2 2 2 2
         1 1 1 1 1
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int iCnt1=0,iCnt2=0;
    int iCpy=iRow;
    for(iCnt1=1;iCnt1<=iRow;iCnt1++)
    {
        for(iCnt2=1;iCnt2<=iCol;iCnt2++)
        {
            printf("%d ",iCpy);
        }
        printf("\n");
        iCpy--;
    }

}

************************************************************************************
/*
5. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 3  iCol =  4
Output : 1 2 3 4
         5 6 7 8
         9 10 11 12
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int iCnt1=0,iCnt2=0;
    int iAns=1;
    for(iCnt1=1;iCnt1<=iRow;iCnt1++)
    {
        for(iCnt2=1;iCnt2<=iCol;iCnt2++)
       {
           printf("%d ",iAns);
           iAns++;
       }
       printf("\n");
    }

}

*************************************************************************************
***********************************Assignment 16****************************************
/*
1. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 4
Output : 1 2 3 4
         5 6 7 8
         9 1 2 3
         4 5 6 7
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int iCnt1=0,iCnt2=0;
    int iAns=1;
    for(iCnt1=1;iCnt1<=iRow;iCnt1++)
    {
        for(iCnt2=1;iCnt2<=iCol;iCnt2++)
       {
            if(iAns==10)
            {
                iAns=1;
            }
            printf("%d ",iAns);
            iAns++;
       }
      printf("\n");
    }

}

*************************************************************************************
/*
2. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 4
Output : 2 4 6 8 10
         1 3 5 7 9
         2 4 6 8 10
         1 3 5 7 9
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int iCnt1=0,iCnt2=0;
    int iAns=1;
    for(iCnt1=1;iCnt1<=iRow;iCnt1++)
    {
        for(iCnt2=1;iCnt2<=iCol;iCnt2++)
       {
            if(iCnt1%2==0)
            {
                printf("%d ",iAns);
                iAns=iAns+2;
            }
            else
            {
                printf("%d ",iCnt2*2);
            }
       }
       iAns=1;
      printf("\n");
    }

}

****************************************************************************************
/*
3. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 5  iCol = 5
Output : a b c d e
         1 2 3 4 5
         a b c d e
         1 2 3 4 5
         a b c d e
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int iCnt1=0,iCnt2=0;
    int iAns='a';
    for(iCnt1=1;iCnt1<=iRow;iCnt1++)
    {
        for(iCnt2=1;iCnt2<=iCol;iCnt2++)
       {
            if(iCnt1%2==0)
            {
                printf("%d ",iCnt2);
            }
            else
            {
                printf("%c ",iAns);
                iAns++;
            }
       }
       iAns='a';
      printf("\n");
    }

}

***********************************************************************************
/*
4. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 5  iCol = 5
Output :  1  2  3  4  5
         -1 -2 -3 -4 -5
          1  2  3  4  5
         -1 -2 -3 -4 -5
          1  2  3  4  5
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int iCnt1=0,iCnt2=0;
    for(iCnt1=1;iCnt1<=iRow;iCnt1++)
    {
        for(iCnt2=1;iCnt2<=iCol;iCnt2++)
       {
            if(iCnt1%2==0)
            {
                printf("%d ",-iCnt2);
            }
            else
            {
                printf(" %d ",iCnt2);
            }
       }
      printf("\n");
    }

}

**************************************************************************************
/*
5. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol =  4
Output : 1 2 3 4
         2 3 4 5
         3 4 5 6
         4 5 6 7
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
     int i=0,j=0,a=0;
    int iNo=1;
    for(i=1;i<=iNo1;i++)
    {

       for(j=1;j<=iNo2;j++)
       {
           printf("%d ",iNo);
           iNo=iNo+1;
       }
       iNo=iNo-3;

       printf("\n");
    }
}
}

************************************************************************************************************
*****************************Assignment 17**********************************************
/*
1. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 4
Output : * # # #
         * * # #
         * * * #
         * * * *
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int i,j;
    if(iRow<0)
    {
        iRow=-iRow;
    }
     if(iCol<0)
    {
        iCol=-iCol;
    }
    if(iRow!=iCol)
    {
        printf("invalid number");
        return;
    }
    for(i=1;i<=iCol;i++)
    {
        for(j=1;j<=iRow;j++)
        {
            if(i<j)
            {
                printf("#");
            }
            else
            {
                printf("*");
            }
        }
        printf("\n");
    }
}

***************************************************************************************
/*
2. Accept number of rows and number of columns from user and
display below pattern.
Input :  iRow = 4  iCol = 4
Output : * * * *
         * * * #
         * * # #
         * # # #
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int i,j;
    if(iRow<0)
    {
        iRow=-iRow;
    }
     if(iCol<0)
    {
        iCol=-iCol;
    }
    if(iRow!=iCol)
    {
        printf("invalid number");
        return;
    }
    for(i=1;i<=iRow;i++)
    {
        for(j=1;j<=iCol;j++)
        {
            if(j<=iCol-i)
            {
                printf("* ");
            }
            else
            {
                printf("# ");
            }

        }
        printf("\n");
    }
}

****************************************************************************************
/*
3. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 5  iCol = 5
Output : $ * * * *
         * $ * * *
         * * $ * *
         * * * $ *
         * * * * $
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int i,j;
    if(iRow<0)
    {
        iRow=-iRow;
    }
     if(iCol<0)
    {
        iCol=-iCol;
    }
    if(iRow!=iCol)
    {
        printf("invalid number");
        return;
    }
    for(i=1;i<=iRow;i++)
    {
        for(j=1;j<=iCol;j++)
        {
            if(i==j)
            {
                printf("$ ");
            }
            else
            {
                printf("* ");
            }
        }
        printf("\n");
    }
}

**************************************************************************************
/*
4. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 6  iCol = 5
Output : * * * * *
         * @ @ @ *
         * @ @ @ *
         * @ @ @ *
         * @ @ @ *
         * * * * *
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int i,j;
    if(iRow<0)
    {
        iRow=-iRow;
    }
     if(iCol<0)
    {
        iCol=-iCol;
    }
   /* if(iRow!=iCol)
    {
        printf("invalid number");
        return;
    }*/
    for(i=1;i<=iRow;i++)
    {
        for(j=1;j<=iCol;j++)
        {
            if(i==1||j==1||i==iRow||j==iCol)
            {
                printf("* ");
            }
            else
            {
                printf("@ ");
            }
        }
        printf("\n");
    }
}

**************************************************************************************
/*
5. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol =  4
Output : 1 2 3 4
         1 * * 4
         1 * * 4
         1 2 3 4
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int i,j,k=1;
    if(iRow<0)
    {
        iRow=-iRow;
    }
     if(iCol<0)
    {
        iCol=-iCol;
    }
   /* if(iRow!=iCol)
    {
        printf("invalid number");
        return;
    }*/
    for(i=1;i<=iRow;i++)
    {
        for(j=1;j<=iCol;j++)
        {
            if(i==1)
            {
                printf("%d ",j);
            }
            else if(j==1)
            {
                printf("%d ",k);
            }
            else if(i==iRow)
            {
                 printf("%d ",j);
            }
            else if(j==iCol)
            {
                printf("%d ",iRow);
            }
            else
            {
                printf("* ");
            }
        }
        printf("\n");
    }
}

**************************************************************************************
************************************Assignment 18****************************************
/*
1. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 4
Output : *
         * *
         * * *
         * * * *
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int i,j;
    if(iRow<0)
    {
        iRow=-iRow;
    }
     if(iCol<0)
    {
        iCol=-iCol;
    }
   /* if(iRow!=iCol)
    {
        printf("invalid number");
        return;
    }*/
    for(i=1;i<=iRow;i++)
    {
        for(j=1;j<=iCol;j++)
        {
            if(i>=j)
            {
                printf("* ");
            }
        }
        printf("\n");
    }
}

***********************************************************************************
/*
2. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 4
Output : * * * *
         * * *
         * *
         *
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int i,j;
    if(iRow<0)
    {
        iRow=-iRow;
    }
     if(iCol<0)
    {
        iCol=-iCol;
    }
   /* if(iRow!=iCol)
    {
        printf("invalid number");
        return;
    }*/
    for(i=1;i<=iRow;i++)
    {
        for(j=1;j<=iCol;j++)
        {
            if(i<=j)
            {
                printf("* ");
            }
        }
        printf("\n");
    }
}

************************************************************************************
/*
3. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 5  iCol = 5
Output : $ * * * *
         # $ * * *
         # # $ * *
         # # # $ *
         # # # # $
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int i,j;
    if(iRow<0)
    {
        iRow=-iRow;
    }
     if(iCol<0)
    {
        iCol=-iCol;
    }
   /* if(iRow!=iCol)
    {
        printf("invalid number");
        return;
    }*/
    for(i=1;i<=iRow;i++)
    {
        for(j=1;j<=iCol;j++)
        {
            if(i==j)
            {
                printf("$ ");
            }
            else if(i>=j)
            {
                printf("# ");
            }
            else
            {
                printf("* ");
            }
        }
        printf("\n");
    }
}

************************************************************************************
/*
4. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 6  iCol = 6
Output : * * * * * *
         * *       *
         *   *     *
         *     *   *
         *       * *
         * * * * * *
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int i,j;
    if(iRow<0)
    {
        iRow=-iRow;
    }
     if(iCol<0)
    {
        iCol=-iCol;
    }
   /* if(iRow!=iCol)
    {
        printf("invalid number");
        return;
    }*/
    for(i=1;i<=iRow;i++)
    {
        for(j=1;j<=iCol;j++)
        {
            if(i==j)
            {
                printf("* ");
            }
            else if(i==1||j==1||i==iRow||j==iCol)
            {
                printf("* ");
            }
            else
            {
                printf("  ");
            }
        }
        printf("\n");
    }
}

******************************************************************************************
/*
5. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol =  4
Output : 1 2 3 4
           2 3 4
             3 4
               4
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int i,j;
    if(iRow<0)
    {
        iRow=-iRow;
    }
     if(iCol<0)
    {
        iCol=-iCol;
    }
   /* if(iRow!=iCol)
    {
        printf("invalid number");
        return;
    }*/
    for(i=1;i<=iRow;i++)
    {
        for(j=1;j<=iCol;j++)
        {
            if(i<=j)
            {
                printf("%d ",j);
            }
            else
            {
                printf("  ");
            }
        }
        printf("\n");
    }
}

*********************************************************************************
*********************************Assignment 19****************************************
/*
1. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 4
Output : * * * #
         * * # *
         * # * *
         # * * *
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int i,j,k;
    if(iRow<0)
    {
        iRow=-iRow;
    }
     if(iCol<0)
    {
        iCol=-iCol;
    }
   /* if(iRow!=iCol)
    {
        printf("invalid number");
        return;
    }*/
    for(i=1;i<=iRow;i++)
    {
        k=1;
        for(j=1;j<=iCol;j++)
        {
            if(j==(iCol+k)-i)
            {
                printf("# ");
            }
            else
            {
               printf("* ");
            }
        }
        printf("\n");
    }
}

*************************************************************************************
/*
2. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 4
Output : * * * #
         * * # @
         * # @ @
         # @ @ @
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int i,j,k;
    if(iRow<0)
    {
        iRow=-iRow;
    }
     if(iCol<0)
    {
        iCol=-iCol;
    }
   /* if(iRow!=iCol)
    {
        printf("invalid number");
        return;
    }*/
    for(i=1;i<=iRow;i++)
    {
        k=1;
        for(j=1;j<=iCol;j++)
        {
            if(j==(iCol+k)-i)
            {
                printf("# ");
            }
            else if(j>=(iCol+k)-i)
            {
               printf("@ ");
            }
            else
            {
                printf("* ");
            }
        }
        printf("\n");
    }
}

************************************************************************************
/*
3. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 6  iCol = 6
Output : * * * * * *
         *       * *
         *     *   *
         *   *     *
         * * * * * *
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int i,j,k;
    if(iRow<0)
    {
        iRow=-iRow;
    }
     if(iCol<0)
    {
        iCol=-iCol;
    }
   /* if(iRow!=iCol)
    {
        printf("invalid number");
        return;
    }*/
    for(i=1;i<=iRow;i++)
    {
        k=1;
        for(j=1;j<=iCol;j++)
        {
            if(i==1||j==1||i==iRow||j==iCol)
            {
                printf("* ");
            }
            else if(j==(iCol+k)-i)
            {
                printf("* ");
            }
            else
            {
                printf("  ");
            }

        }
        printf("\n");
    }
}

**************************************************************************************
/*
4. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 6  iCol = 6
Output : * * * * * *
         * # # # * *
         * # # * $ *
         * # * $ $ *
         * * $ $ $ *
         * * * * * *
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int i,j,k;
    if(iRow<0)
    {
        iRow=-iRow;
    }
     if(iCol<0)
    {
        iCol=-iCol;
    }
   /* if(iRow!=iCol)
    {
        printf("invalid number");
        return;
    }*/
    for(i=1;i<=iRow;i++)
    {
        k=1;
        for(j=1;j<=iCol;j++)
        {
            if(i==1||j==1||i==iRow||j==iCol)
            {
                printf("* ");
            }
            else if(j==(iCol+k)-i)
            {
                printf("* ");
            }
            else if(j<=iCol-i)
            {
                printf("# ");
            }
            else
            {
                printf("$ ");
            }

        }
        printf("\n");
    }
}

***************************************************************************************
/*
5. Accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol =  4
Output : 1 2 3 4 5
         1 2     5
         1  3    5
         1    4  5
         1 2 3 4 5
*/
#include<stdio.h>
int main()
{
    int iValue1=0,iValue2=0;
    printf("Enter the Row And Column\n");
    scanf("%d %d",&iValue1,&iValue2);
    pattern(iValue1,iValue2);
    return 0;
}
void pattern(int iRow,int iCol)
{
    int i,j,k=1;
    if(iRow<0)
    {
        iRow=-iRow;
    }
     if(iCol<0)
    {
        iCol=-iCol;
    }
   /* if(iRow!=iCol)
    {
        printf("invalid number");
        return;
    }*/
    for(i=1;i<=iRow;i++)
    {
        for(j=1;j<=iCol;j++)
        {
            if(i==j)
            {
                printf("%d ",j);
            }
            else if(i==1)
            {
                printf("%d ",j);
            }
            else if(j==1)
             {
                 printf("%d ",j);
             }
             else if(i==iRow)
             {
                 printf("%d ",j);
             }
             else if(j==iCol)
             {
                 printf("%d ",j);
             }
             else
             {
                 printf("  ");
             }

        }
        printf("\n");
    }
}

****************************************************************************************
******************************************************************************************
*********************************Assignment 21***********************************************
/*
1. Accept N numbers from user and return difference between
summation of even elements and summation of odd elements.
Input :  N :   6
  Elements : 85 66 3 80 93 88
Output : 53 (234 - 181)
*/


/*
     START
         Accept the value of N
         Accept all N numbers
         pass that value of N and N number to the function

         function will perform the summation
         accept the summation from the function

         display the summation
    END
*/
#include<stdio.h>
int Difference(int arr[],int iSize)
{
  int iCnt=0;
  int iAdd1=0,iAdd2=0,iAns=0;
  for(iCnt=0;iCnt<iSize;iCnt++)
  {
      if(arr[iCnt]%2==0)
      {
          iAdd1=iAdd1+arr[iCnt];
      }
      else
      {
          iAdd2=iAdd2+arr[iCnt];
      }
  }
  iAns=(iAdd1-iAdd2);
  return iAns;
}
int main()
{
     int iValue=0;
     int iRet=0;
     int *ptr=NULL;
     int iCnt=0;
     printf("Enter your N number:");
     scanf("%d",&iValue);

     ptr=(int*)malloc(4*iValue);
     if(ptr==NULL)
     {
         printf("Memory not allocated");
         return -1;
     }
     else
     {
         printf("Memory allocated\n");
     }
     printf("Enter the number:");
     for(iCnt=0;iCnt<iValue;iCnt++)
     {
         scanf("%d",&ptr[iCnt]);
     }
     iRet=Difference(ptr,iValue);
     printf("Your summation is %d",iRet);
     return 0;
}
***************************************************************************************
/*
2. Accept N numbers from user and display all such elements which are divisible by 5.
Input :  N :   6
  Elements : 85 66 3 80 93 88
Output : 85 80
*/


/*
     START
         Accept the value of N
         Accept all N numbers
         pass that value of N and N number to the function

         function will perform the divisible by 5
         accept the divisible by 5 from the function

         display the divisible by 5
    END
*/
#include<stdio.h>
void Display(int arr[],int iSize)
{
  int iCnt=0;
  int iAdd1=0,iAdd2=0,iAns=0;
  for(iCnt=0;iCnt<iSize;iCnt++)
  {
      if(arr[iCnt]%5==0)
      {
          printf("%d ",arr[iCnt]);
      }
  }
}
int main()
{

     int iValue=0;
     int *ptr=NULL;
     int iCnt=0;
     printf("Enter N value:");
     scanf("%d",&iValue);

     ptr=(int*)malloc(4*iValue);

     printf("Enter the numbers:");

     for(iCnt=0;iCnt<iValue;iCnt++)
     {
         scanf("%d",&ptr[iCnt]);
     }
     Display(ptr,iValue);
     return 0;
}
**************************************************************************************
/*
3. Accept N numbers from user and display all such elements which are even and divisible
by 5.
Input :  N :   6
Elements : 85 66 3 80 93 88
Output : 80
*/


/*
     START
         Accept the value of N
         Accept all N numbers
         pass that value of N and N number to the function

         function will perform the even and divisible by 5
         accept the even and divisible by 5 from the function

         display the even and divisible by 5
    END
*/
#include<stdio.h>
void Display(int arr[],int iSize)
{
  int iCnt=0;
  int iAdd1=0,iAdd2=0,iAns=0;
  for(iCnt=0;iCnt<iSize;iCnt++)
  {
      if(arr[iCnt]%5==0&&arr[iCnt]%2==0)
      {
          printf("%d ",arr[iCnt]);
      }
  }
}
int main()
{

     int iValue=0;
     int *ptr=NULL;
     int iCnt=0;
     printf("Enter N value:");
     scanf("%d",&iValue);

     ptr=(int*)malloc(4*iValue);

     printf("Enter the numbers:");

     for(iCnt=0;iCnt<iValue;iCnt++)
     {
         scanf("%d",&ptr[iCnt]);
     }
     Display(ptr,iValue);
     return 0;
}
****************************************************************************************
/*
4. Accept N numbers from user and display all such
elements which are divisible by 3 and 5.
Input :  N :   6
Elements : 85 66 3 15 93 88
Output : 15
*/


/*
     START
         Accept the value of N
         Accept all N numbers
         pass that value of N and N number to the function

         function will perform the divisible by 3 and 5
         accept the divisible by 3 and 5 from the function

         display the divisible by 3 and 5
    END
*/
#include<stdio.h>
void Display(int arr[],int iSize)
{
  int iCnt=0;
  int iAdd1=0,iAdd2=0,iAns=0;
  for(iCnt=0;iCnt<iSize;iCnt++)
  {
      if(arr[iCnt]%5==0&&arr[iCnt]%3==0)
      {
          printf("%d ",arr[iCnt]);
      }
  }
}
int main()
{

     int iValue=0;
     int *ptr=NULL;
     int iCnt=0;
     printf("Enter N value:");
     scanf("%d",&iValue);

     ptr=(int*)malloc(4*iValue);

     printf("Enter the numbers:");

     for(iCnt=0;iCnt<iValue;iCnt++)
     {
         scanf("%d",&ptr[iCnt]);
     }
     Display(ptr,iValue);
     return 0;
}
***************************************************************************************
/*
5. Accept N numbers from user and display all such elements which are multiples of 11.
Input :  N :   6
Elements : 85 66 3 55 93 88
Output : 66 55 88
*/
/*
     START
         Accept the value of N
         Accept all N numbers
         pass that value of N and N number to the function

         function will perform the multiples of 11
         accept the multiples of 11 from the function

         display the multiples of 11
    END
*/
#include<stdio.h>
void Display(int arr[],int iSize)
{
  int iCnt=0;
  int iAdd1=0,iAdd2=0,iAns=0;
  for(iCnt=0;iCnt<iSize;iCnt++)
  {
      if(arr[iCnt]%11==0)
      {
          printf("%d ",arr[iCnt]);
      }
  }
}
int main()
{

     int iValue=0;
     int *ptr=NULL;
     int iCnt=0;
     printf("Enter N value:");
     scanf("%d",&iValue);

     ptr=(int*)malloc(4*iValue);

     printf("Enter the numbers:");

     for(iCnt=0;iCnt<iValue;iCnt++)
     {
         scanf("%d",&ptr[iCnt]);
     }
     Display(ptr,iValue);
     return 0;
}
*************************************************************************************
*********************************Assignment 22*******************************************
/*
1. Accept N numbers from user and return frequency of even numbers.
Input :  N :   6
Elements : 85 66 3 80 93 88
Output : 3
*/
/*
     START
         Accept the value of N
         Accept all N numbers
         pass that value of N and N number to the function

         function will perform the frequency of even numbers
         accept the frequency of even numbers from the function

         display the frequency of even numbers
    END
*/
#include<stdio.h>
int CountEven(int arr[],int iSize)
{
  int iCnt=0;
  int iCount=0;
  int iAdd1=0,iAdd2=0,iAns=0;
  for(iCnt=0;iCnt<iSize;iCnt++)
  {
      if(arr[iCnt]%2==0)
      {
          iCount++;
      }
  }
  return iCount;
}
int main()
{
     int iValue=0;
     int *ptr=NULL;
     int iCnt=0;
     int iRet=0;
     printf("Enter N value:");
     scanf("%d",&iValue);

     ptr=(int*)malloc(4*iValue);

     printf("Enter the numbers:");

     for(iCnt=0;iCnt<iValue;iCnt++)
     {
         scanf("%d",&ptr[iCnt]);
     }
     iRet=CountEven(ptr,iValue);
     printf("%d",iRet);
     return 0;
}
***********************************************************************************
/*
2. Accept N numbers from user and return difference between
frequency of even number and odd numbers.
Input :  N :   7
Elements : 85 66 3 80 93 88 90
Output : 1 (4 -3)
*/
/*
     START
         Accept the value of N
         Accept all N numbers
         pass that value of N and N number to the function

         function will perform the frequency of even numbers
         accept the frequency of even numbers from the function

         display the frequency of even numbers
    END
*/
#include<stdio.h>
int Count(int arr[],int iSize)
{
  int iCnt=0;
  int iCountEven=0;
  int iCountOdd=0;
  int iAns=0;
  for(iCnt=0;iCnt<iSize;iCnt++)
  {
      if(arr[iCnt]%2==0)
      {
          iCountEven++;
      }
      else
      {
          iCountOdd++;
      }
  }
  iAns=iCountEven-iCountOdd;
  return iAns;
}
int main()
{
     int iValue=0;
     int *ptr=NULL;
     int iCnt=0;
     int iRet=0;
     printf("Enter N value:");
     scanf("%d",&iValue);

     ptr=(int*)malloc(4*iValue);

     printf("Enter the numbers:");

     for(iCnt=0;iCnt<iValue;iCnt++)
     {
         scanf("%d",&ptr[iCnt]);
     }
     iRet=Count(ptr,iValue);
     printf("%d",iRet);
     return 0;
}
*************************************************************************************
/*
3. Accept N numbers from user check whether that numbers contains 11 in it or not.
Input :  N :   6
Elements : 85 66 11 80 93 88
Output : 11 is present
Input :  N :   6
Elements : 85 66 3 80 93 88
Output : 11 is absent
*/
/*
     START
         Accept the value of N
         Accept all N numbers
         pass that value of N and N number to the function

         function will perform the numbers contains 11 in it or not
         accept the numbers contains 11 in it or not from the function

         display the numbers contains 11 in it or not 
    END
*/
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0
int Check(int arr[],int iSize)
{
  int iCnt=0;
  for(iCnt=0;iCnt<iSize;iCnt++)
  {
      if(arr[iCnt]==11)
      {
          return TRUE;
      }
  }
}
int main()
{
     int iValue=0;
     int *ptr=NULL;
     int iCnt=0;
     BOOL bRet = FALSE;
     printf("Enter N value:");
     scanf("%d",&iValue);

     ptr=(int*)malloc(4*iValue);

     printf("Enter the numbers:");

     for(iCnt=0;iCnt<iValue;iCnt++)
     {
         scanf("%d",&ptr[iCnt]);
     }
     iRet=Check(ptr,iValue);
     if(iRet==TRUE)
     {
         printf("11 is present");
     }
     else
     {
         printf("11 is absent");
     }
     return 0;
}
******************************************************************************************
/*
4. Accept N numbers from user and return frequency of 11 form it.
Input :  N :   6
  Elements : 85 66 3 15 93 88
Output : 0
Input :  N :   6
  Elements : 85 11 3 15 11 111
Output : 2
*/
/*
     START
         Accept the value of N
         Accept all N numbers
         pass that value of N and N number to the function

         function will perform the frequency of 11
         accept the numbers frequency of 11 from the function

         display the numbers frequency of 11
    END
*/
#include<stdio.h>
int Frequency(int arr[],int iSize)
{
  int iCnt=0;
  int iCount=0;
  for(iCnt=0;iCnt<iSize;iCnt++)
  {
      if(arr[iCnt]==11)
      {
         iCount++;
      }
  }
  return iCount;
}
int main()
{
     int iValue=0;
     int *ptr=NULL;
     int iCnt=0;
     int iRet=0;
     printf("Enter N value:");
     scanf("%d",&iValue);

     ptr=(int*)malloc(4*iValue);

     printf("Enter the numbers:");

     for(iCnt=0;iCnt<iValue;iCnt++)
     {
         scanf("%d",&ptr[iCnt]);
     }
     iRet=Frequency(ptr,iValue);
     printf("%d",iRet);
     return 0;
}
*************************************************************************************
/*
5. Accept N numbers from user and accept one another number as NO ,
return frequency of NO form it.
 Input :  N :   6
  NO:  66
  Elements : 85 66 3 66 93 88
Output : 2
Input :  N :   6
NO:  12
Elements : 85 11 3 15 11 111
Output : 0
*/
/*
     START
         Accept the value of N
         Accept all N numbers
         pass that value of N and N number to the function

         function will perform the frequency of NO
         accept the numbers frequency of NO from the function

         display the numbers frequency of NO
    END
*/
#include<stdio.h>
int Frequency(int arr[],int iSize,int iNo)
{
  int iCnt=0;
  int iCount=0;
  for(iCnt=0;iCnt<iSize;iCnt++)
  {
      if(arr[iCnt]==iNo)
      {
         iCount++;
      }
  }
  return iCount;
}
int main()
{
     int iValue=0,iValue2=0;
     int *ptr=NULL;
     int iCnt=0;
     int iRet=0;
     printf("Enter N value:");
     scanf("%d",&iValue);

     printf("\nEnter number to find");
     scanf("%d",&iValue2);

     ptr=(int*)malloc(4*iValue);

     printf("Enter the numbers:");

     for(iCnt=0;iCnt<iValue;iCnt++)
     {
         scanf("%d",&ptr[iCnt]);
     }
     iRet=Frequency(ptr,iValue,iValue2);
     printf("%d",iRet);
     free(ptr);
     return 0;
}
******************************************************************************************

**************************************Assignment 23*************************************
/*1. Accept N numbers from user and accept one
another number as NO , check whether NO is present or not.
  Input :  N :   6
  NO:  66
  Elements : 85 66 3 66 93 88
  Output : TRUE
  Input :  N :   6
  NO:  12
  Elements : 85 11 3 15 11 111
  Output : FALSE   */
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0
BOOL Display(int arr[],int iSize,int iValue)
{
    int iCnt=0;
    for(iCnt=1;iCnt<iSize;iCnt++)
    {
        if(arr[iCnt]==iValue)
        {
            return TRUE;
        }
        else
        {
            return FALSE;
        }
    }
}
int main()
{
    int iSize=0,iValue=0;
     BOOL iRet=FALSE;
    int *ptr=NULL;
    int iCnt=0;

    printf("Enter the Size:");
    scanf("%d",&iSize);

    printf("\nEnter the value:");
    scanf("%d",&iValue);

    printf("\nEnter the Numbers:");

    ptr=(int*)malloc(sizeof(int)*iSize);

    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        scanf("%d",&ptr[iCnt]);
    }
    iRet=Display(ptr,iSize,iValue);

    if(iRet==TRUE)
    {
        printf("Number is present");
    }
    else
    {
        printf("Number is not present");
    }
    free(ptr);
    return 0;
}
***************************************************************************************
/*2. Accept N numbers from user and accept one another
 number as NO , return index of first occurrence of that NO.

  Input :  N :   6
  NO:  66
  Elements : 85 66 3 66 93 88
  Output : 1

  Input :  N :   6
  NO:  12
  Elements : 85 11 3 15 11 111
  Output : -1
*/
#include<stdio.h>
int Display(int arr[],int iSize,int iValue)
{
    int iCnt=0;
    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        if(arr[iCnt]==iValue)
        {
            return iCnt;
        }
    }
    return -1;
}
int main()
{
    int iSize=0,iValue=0;
    int iRet=0;
    int *ptr=NULL;
    int iCnt=0;

    printf("Enter the Size:");
    scanf("%d",&iSize);

    printf("\nEnter the value:");
    scanf("%d",&iValue);

    printf("\nEnter the Numbers:");

    ptr=(int*)malloc(sizeof(int)*iSize);

    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        scanf("%d",&ptr[iCnt]);
    }
    iRet=Display(ptr,iSize,iValue);
    printf("Your index is:%d",iRet);
    free(ptr);
    return 0;
}
*****************************************************************************************
/*3. Accept N numbers from user and accept one another
 number as NO , return index of last occurrence of that NO.

  Input :  N :   6
  NO:  66
  Elements : 85 66 3 66 93 88
  Output : 3

  Input :  N :   6
  NO:  93
  Elements : 85 66 3 66 93 88
  Output : 4

  Input :  N :   6
  NO:  12
  Elements : 85 11 3 15 11 111
  Output : -1
*/
#include<stdio.h>
int Display(int arr[],int iSize,int iValue)
{
    int iCnt=0;
    int iAns=0;
    int iAns1=0;
    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        if(arr[iCnt]==iValue)
        {
            iAns=iCnt;
        }
        else
        {
            iAns1=-1;
        }

    }
    if(iAns==0)
    {
        return iAns1;
    }
    else
    {
        return iAns;
    }
}
int main()
{
    int iSize=0,iValue=0;
    int iRet=0;
    int *ptr=NULL;
    int iCnt=0;

    printf("Enter the Size:");
    scanf("%d",&iSize);

    printf("\nEnter the value:");
    scanf("%d",&iValue);

    printf("\nEnter the Numbers:");

    ptr=(int*)malloc(sizeof(int)*iSize);

    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        scanf("%d",&ptr[iCnt]);
    }
    iRet=Display(ptr,iSize,iValue);
    printf("Your index is:%d",iRet);
    free(ptr);
    return 0;
}
****************************************************************************************
/*4. Accept N numbers from user and accept Range,
 Display all elements from that range
  Input :
  N :   6
  Start: 60
  End :  90
  Elements : 85 66 3 76 93 88
  Output : 85 66 76 88
*/
#include<stdio.h>
void Display(int arr[],int iSize,int iEnd,int iStart)
{
    int iCnt=0;
    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        if(arr[iCnt]>iStart&&arr[iCnt]<iEnd)
        {
            printf("%d ",arr[iCnt]);
        }
    }
}
int main()
{
    int iSize=0,iEnd=0,iStart=0;
    int *ptr=NULL;
    int iCnt=0;

    printf("Enter the Size:");
    scanf("%d",&iSize);

    printf("\nEnter the value start:");
    scanf("%d",&iStart);

    printf("\nEnter the value end:");
    scanf("%d",&iEnd);

    printf("\nEnter the Numbers:");

    ptr=(int*)malloc(sizeof(int)*iSize);

    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        scanf("%d",&ptr[iCnt]);
    }
    Display(ptr,iSize,iEnd,iStart);
    free(ptr);
    return 0;
}
******************************************************************************************
/*5. Accept N numbers from user and return product
of all odd elements.
Input :  N :   6
Elements : 15 66 3 70 10 88
Output : 45

Input :  N :   6
Elements : 44 66 72 70 10 88
Output : 0
*/
#include<stdio.h>
int Display(int arr[],int iSize)
{
    int iCnt=0;
    int iProduct=1;
    int iNo=0;
    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        if(arr[iCnt]%2!=0)
        {
            iProduct=iProduct*arr[iCnt];
        }
    }
    if(iProduct>1)
    {
        return iProduct;
    }
    else
    {
        return iNo;
    }
}
int main()
{
    int iSize=0;
    int iRet=0;
    int *ptr=NULL;
    int iCnt=0;

    printf("Enter the Size:");
    scanf("%d",&iSize);

    printf("\nEnter the Numbers:");

    ptr=(int*)malloc(sizeof(int)*iSize);

    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        scanf("%d",&ptr[iCnt]);
    }
    iRet=Display(ptr,iSize);
    printf("Your product of all elements:%d",iRet);
    free(ptr);
    return 0;
}

***************************************************************************************
***************************************Assignment 24*********************************
/*1. Accept N numbers from user and return the largest number.
Input :  N :   6
Elements : 85 66 3 66 93 88
Output : 93
*/
#include<stdio.h>
int Display(int arr[],int iSize)
{
    int iCnt=0;
    int iNo=0;
    int iMax=arr[0];
    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        iNo=arr[iCnt];
        if(iNo>iMax)
        {
            iMax=iNo;
        }
    }
    return iMax;
}
int main()
{
    int iSize=0;
    int iRet=0;
    int *ptr=NULL;
    int iCnt=0;

    printf("Enter the Size:");
    scanf("%d",&iSize);

    printf("\nEnter the Numbers:");

    ptr=(int*)malloc(sizeof(int)*iSize);

    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        scanf("%d",&ptr[iCnt]);
    }
    iRet=Display(ptr,iSize);
    printf("largest number:%d",iRet);
    free(ptr);
    return 0;
}
***************************************************************************************
/*2. Accept N numbers from user and return the smallest number.
Input :  N :   6
  Elements : 85 66 3 66 93 88
Output : 3
*/
#include<stdio.h>
int Display(int arr[],int iSize)
{
    int iCnt=0;
    int iNo=0;
    int iMin=arr[0];
    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        iNo=arr[iCnt];
        if(iNo<iMin)
        {
            iMin=iNo;
        }
    }
    return iMin;
}
int main()
{
    int iSize=0;
    int iRet=0;
    int *ptr=NULL;
    int iCnt=0;

    printf("Enter the Size:");
    scanf("%d",&iSize);

    printf("\nEnter the Numbers:");

    ptr=(int*)malloc(sizeof(int)*iSize);

    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        scanf("%d",&ptr[iCnt]);
    }
    iRet=Display(ptr,iSize);
    printf("Smallest number:%d",iRet);
    free(ptr);
    return 0;
}
*****************************************************************************************
/*3. Accept N numbers from user and return the difference
 between largest and smallest number.
Input :  N :   6
  Elements : 85 66 3 66 93 88
Output : 90 (93 -3)
*/
#include<stdio.h>
int Display(int arr[],int iSize)
{
    int iCnt=0;
    int iNo=0;
    int iMax=0;
    int iMin=arr[0];
    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        iNo=arr[iCnt];
        if(iNo<iMin)
        {
            iMin=iNo;
        }
         if(iNo>iMax)
        {
            iMax=iNo;
        }
    }
    return(iMax-iMin);
}
int main()
{
    int iSize=0;
    int iRet=0;
    int *ptr=NULL;
    int iCnt=0;

    printf("Enter the Size:");
    scanf("%d",&iSize);

    printf("\nEnter the Numbers:");

    ptr=(int*)malloc(sizeof(int)*iSize);

    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        scanf("%d",&ptr[iCnt]);
    }
    iRet=Display(ptr,iSize);
    printf("Largest and Smallest Division is:%d",iRet);
    free(ptr);
    return 0;
}
**************************************************************************************
/*4. Accept N numbers from user and display all such numbers which contains  3 digits in it.
Input :  N :   6
Elements : 8225  665 3 76 953 858
Output : 665 953 858
*/
#include<stdio.h>
int Display(int arr[],int iSize)
{
    int iCnt=0;
    int iNo=0;
    int iCount=0,iAns=0;
    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        iNo=arr[iCnt];
        while(iNo!=0)
        {
            iAns=iNo%10;
            iCount++;
            iNo=iNo/10;
        }
        if(iCount==3)
        {
            printf("%d ",arr[iCnt]);
        }
        iAns=0;
        iCount=0;
    }
}
int main()
{
    int iSize=0;
    int *ptr=NULL;
    int iCnt=0;

    printf("Enter the Size:");
    scanf("%d",&iSize);

    printf("\nEnter the Numbers:");

    ptr=(int*)malloc(sizeof(int)*iSize);

    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        scanf("%d",&ptr[iCnt]);
    }
    Display(ptr,iSize);
    free(ptr);
    return 0;
}
*************************************************************************************
/*5. Accept N numbers from user and display summation of digits of each number.
Input :  N :   6
Elements : 8225  665 3 76 953 858
Output : 17 17 3 13 17 21
*/
#include<stdio.h>
int Display(int arr[],int iSize)
{
    int iCnt=0;
    int iNo=0;
    int iSum=0,iAns=0;
    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        iNo=arr[iCnt];
        while(iNo!=0)
        {
            iAns=iNo%10;
            iSum=iSum+iAns;
            iNo=iNo/10;
        }
        printf("%d ",iSum);
        iAns=0;
        iSum=0;
    }
}
int main()
{
    int iSize=0;
    int *ptr=NULL;
    int iCnt=0;

    printf("Enter the Size:");
    scanf("%d",&iSize);

    printf("\nEnter the Numbers:");

    ptr=(int*)malloc(sizeof(int)*iSize);

    for(iCnt=0;iCnt<iSize;iCnt++)
    {
        scanf("%d",&ptr[iCnt]);
    }
    Display(ptr,iSize);
    free(ptr);
    return 0;
}
*************************************************************************************
**********************************Assigment 25**************************************
/*1. Accept Character from user and check whether it is alphabet or not (A-Z a-z).
Input :  F
Output :  TRUE
Input :  &
Output :  FALSE
*/
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0
BOOL ChkAlpha(char cValue)
{
    if(cValue>='A'&&cValue<='Z'||cValue>='a'&&cValue<='z')
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}
int main()
{
    char cValue='\0';
    BOOL bRet=FALSE;
    printf("Enter the character:");
    scanf("%c",&cValue);
    bRet=ChkAlpha(cValue);
    if(bRet==TRUE)
    {
        printf("It is a character");
    }
    else
    {
        printf("It is not character");
    }
}
***********************************************************************************
/*2. Accept Character from user and check whether it is capital or not (A-Z).
Input :  F
Output :  TRUE
Input :  d
Output :  FALSE
*/
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0
BOOL ChkAlpha(char cValue)
{
    if(cValue>='A'&&cValue<='Z')
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}
int main()
{
    char cValue='\0';
    BOOL bRet=FALSE;
    printf("Enter the character:");
    scanf("%c",&cValue);
    bRet=ChkAlpha(cValue);
    if(bRet==TRUE)
    {
        printf("It is a Capital");
    }
    else
    {
        printf("It is not Capital");
    }
}
************************************************************************************
/*3. Accept Character from user and check whether it is digit or not (0-9).
Input :  7
Output :  TRUE
Input :  d
Output :  FALSE
*/
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0
BOOL ChkAlpha(char cValue)
{
    if(cValue>='1'&&cValue<='9')
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}
int main()
{
    char cValue='\0';
    BOOL bRet=FALSE;
    printf("Enter the character:");
    scanf("%c",&cValue);
    bRet=ChkAlpha(cValue);
    if(bRet==TRUE)
    {
        printf("It is a Digit");
    }
    else
    {
        printf("It is not Digit");
    }
}
**************************************************************************************
/*4. Accept Character from user and check whether it is
small case or not (a-z).
Input :  g
Output :  TRUE
Input :  D
Output :  FALSE
*/
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0
BOOL ChkAlpha(char cValue)
{
    if(cValue>='a'&&cValue<='z')
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}
int main()
{
    char cValue='\0';
    BOOL bRet=FALSE;
    printf("Enter the character:");
    scanf("%c",&cValue);
    bRet=ChkAlpha(cValue);
    if(bRet==TRUE)
    {
        printf("It is a small case character");
    }
    else
    {
        printf("It is not small case character");
    }
}
***************************************************************************************
/*5. Accept division of student from user and depends on the
 division display exam timing. There are 4 divisions in school
 as A,B,C,D. Exam of division A at 7 AM, B at 8.30 AM,
 C at 9.20 AM and D at 10.30 AM. (Application should be case insensitive)
Input :  C
Output :  Your exam at 9.20 AM
Input :  d
Output :  Your exam at 10.30 AM
*/
#include<stdio.h>
void ChkAlpha(char cValue)
{
    switch(cValue)
    {
         case'a':
         case'A':
            printf("7 am");
            break;
         case'b':
         case'B':
            printf("8.30 am");
            break;
         case'c':
         case'C':
            printf("9.20 am");
            break;
         case'd':
         case'D':
            printf("10.30 am");
            break;
         default:
            printf("You are wrong");
   }
}
int main()
{
    char cValue='\0';
    printf("Enter the character:");
    scanf("%c",&cValue);
    ChkAlpha(cValue);
}
*************************************************************************************
********************************Assignment 26***************************************
/*1. Write a program which displays ASCII table.
 Table contains symbol, Decimal, Hexadecimal and Octal
 representation of every member from 0 to 255.
*/
#include<stdio.h>
int main()
{
    DisplayASCII();
    return 0;
}
void DisplayASCII()
{
    int i;
    for(i=1;i<255;i++)
    {
        printf("%d %h %c\n",i,i,i);
    }
}
***************************************************************************************
/*2. Accept character from user. If character is small display
its corresponding capital character, and if it small then display
its corresponding capital. In other cases display as it is.
Input :  Q
Output : q
Input :  m
Output : M
Input :  4
Output : 4
Input :  %
Output : %
*/
#include<stdio.h>
void Display(char cValue)
{
    if(cValue>='A'&&cValue<='Z')
    {
        printf("%c",cValue+32);
    }
    else if(cValue>='a'&&cValue<='z')
    {
        printf("%c",cValue-32);
    }
    else if(cValue>='1'&&cValue<='9')
    {
        printf("%c",cValue);
    }
    else
    {
        printf("%c",cValue);
    }
}
int main()
{
    char cValue='\0';
    printf("Enter the character:");
    scanf("%c",&cValue);
    Display(cValue);
    return 0;
}
*************************************************************************************
/*3. Accept character from user. If it is capital then
display all the characters from the input characters till Z.
If input character is small then print all the characters in
reverse order till a. In other cases return directly.
Input :  Q
Output : Q R S T U V W X Y Z
Input :  m
Output : m l k j i h g f e d c b a
Input :  8
Output :
*/
#include<stdio.h>
void Display(char cValue)
{
  if(cValue>='A'&&cValue<='Z')
  {
      while(cValue<='Z')
      {
          printf("%c ",cValue);
          cValue++;
      }
   }
   if(cValue>='a'&&cValue<='z')
   {
      while(cValue>='a')
      {
          printf("%c ",cValue);
          cValue--;
      }
   }
}
int main()
{
    char cValue='\0';
    printf("Enter the character:");
    scanf("%c",&cValue);
    Display(cValue);
    return 0;
}

************************************************************************************
/*4. Accept Character from user and check whether it is special symbol or not (!, @, #, $, %, ^, &, *).
Input :  %
Output :  TRUE
Input :  d
Output :  FALSE
*/
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0
BOOL Display(char cValue)
{
  if(cValue>='A'&&cValue<='Z'||cValue>='a'&&cValue<='z'||cValue>='1'&&cValue<='9')
  {
      return TRUE;
  }
  else
  {
      return FALSE;
  }
}
int main()
{
    char cValue='\0';
    BOOL bRet=FALSE;
    printf("Enter the character:");
    scanf("%c",&cValue);
    bRet=Display(cValue);
    if(bRet==TRUE)
    {
        printf("It is not special Character");
    }
    else
    {
        printf("It is special Character");
    }
    return 0;
}

***************************************************************************************
/*5. Accept character from user and
 display its ASCII value in decimal,
 octal and hexadecimal format.
Input :   A
Output :
Decimal   65
Octal   0101
Hexadecimal  0X41*/
#include<stdio.h>
void Display(int cValue)
{
    printf("decimal %d\n",cValue);
    printf("Octal %o\n",cValue);
    printf("Hexadecimal %X\n",cValue);
}
int main()
{
    char cValue='\0';
    printf("Enter the character:");
    scanf("%c",&cValue);
    Display(cValue);
    return 0;
}

****************************************************************************
**************************Assignment 27*************************************
*******************************Assignment 27***********************************
*******************************************************************************
/*1.Write a program which accept string from user and count number
of capital characters.

Input :   “Marvellous Multi OS”
Output :   4 */
#include<stdio.h>
int main()
{
    char arr[20];
    int iRet=0;
    printf("Enter the string:");
    scanf("%[^'\n']s",arr);
    iRet=CountCapital(arr);
    printf("Your count is %d",iRet);
    return 0;
}
int CountCapital(char *arr)//arr[]
{
    int iCount=0,i;
   
    while(arr[i]!='\0')
    {
        if(arr[i]>='A'&&arr[i]<='Z')
        {
            iCount++;
        }
        i++;
    }
    return iCount;
}
*********************************************************************************
/*2. Write a program which accept string from user and count number of small characters.
Input :   “Marvellous”
Output :   9     */
#include<stdio.h>
int main()
{
    char arr[20];
    int iRet=0;
    printf("Enter the string:");
    scanf("%[^'\n']s",arr);
    iRet=CountSmall(arr);
    printf("Your count is %d",iRet);
    return 0;
}
int CountSmall(char *arr)//arr[]
{
    int iCount=0,i;
 
    while(arr[i]!='\0')
    {
        if(arr[i]>='a'&&arr[i]<='z')
        {
            iCount++;
        }
        i++;
    }
    return iCount;
}
*****************************************************************************
/*3. Write a program which accept string from user and return difference between frequency of small characters and frequency of capital characters.
Input :   “MarvellouS”
Output :   6 (8-2)      */
#include<stdio.h>
int main()
{
    char arr[20];
    int iRet=0;
    printf("Enter the string:");
    scanf("%[^'\n']s",arr);
    iRet=CountCS(arr);
    printf("Your count is %d",iRet);
    return 0;
}
int CountCS(char *arr)//arr[]
{
    int iCountCapital=0,iCountSmall=0,i,iAns=0;
    while(*arr!='\0')
    {

        if(*arr>='A'&&*arr<='Z')
        {
            iCountCapital++;
        }
        else
        {
            iCountSmall++;
        }
        arr++;
    }
    iAns=(iCountSmall-iCountCapital);
    return iAns;
}
*************************************************************************************
/*4. Write a program which accept string from user and check whether it contains vowels in it or not.
Input :   “marvellous”
Output :   TRUE
Input :   “Demo”
Output :   TRUE
Input :   “xyz”
Output :   FALSE      */
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0
int main()
{
    char arr[20];
    BOOL bRet=FALSE;
    printf("Enter the string:");
    scanf("%[^'\n']s",arr);
    bRet=ChkVowel(arr);
    if(bRet==TRUE)
    {
        printf("Contains Vowel");
    }
    else
    {
        printf("Contains not Vowel");
    }
    return 0;
}
BOOL ChkVowel(char *arr)//arr[]
{
    int iCountCapital=0,iCountSmall=0,i,iAns=0;
    while(*arr!='\0')
    {

        if(*arr=='A' ||*arr=='E' ||*arr=='I' ||*arr=='O' ||*arr=='U'||*arr=='a' ||*arr=='e'  || *arr=='i'  || *arr=='o'  || *arr=='u')
        {
            return TRUE;
        }
        else
        {
            return FALSE;
        }
    }
}
**********************************************************************************
/*5. Write a program which accept string from user and display it inn reverse order.
Input :   “MarvellouS”
Output :   “SuollevraM”      */
#include<stdio.h>
int main()
{
    char arr[20];
    printf("Enter the string:");
    scanf("%[^'\n']s",arr);
    Reverse(arr);
    return 0;
}
void Reverse(char arr[])//arr[]
{
   int iEnd=0,iStart=0;
   char iTemp=0;
   while(arr[iEnd]!='\0')
   {
       iEnd++;
   }
   iEnd--;
   while(iStart<iEnd)
   {
       iTemp=arr[iStart];
       arr[iStart]=arr[iEnd];
       arr[iEnd]=iTemp;
       iStart++;
       iEnd--;
   }
}
*********************************************************************************
*****************************Assignment 28***********************************
/*1.Write a program which accept string from user and convert it
into lower case.
Input :   “Marvellous Multi OS”
Output :   marvellous multi os      */
#include<stdio.h>
int main()
{
    char arr[20];
    printf("Enter the string:");
    scanf("%[^'\n']s",arr);
    strlwrx(arr);
    return 0;
}
void strlwrx(char arr[])//arr[]
{
    char iChar;
    int i=0;
    while(arr[i]!='\0')
    {
        iChar=arr[i];
        if(iChar>='A'&&iChar<='Z')
        {
            printf("%c",iChar+32);
        }
        else
        {
            printf("%c",iChar);
        }
        i++;
    }
}
******************************************************************************
/*2.Write a program which accept string from user and convert it into upper case.
Input :   “Marvellous Multi OS”
Output :   MARVELLOUS MULTI OS      */
#include<stdio.h>
int main()
{
    char arr[20];
    printf("Enter the string:");
    scanf("%[^'\n']s",arr);
    strlwrx(arr);
    return 0;
}
void strlwrx(char arr[])//arr[]
{
    char iChar;
    int i=0;
    while(arr[i]!='\0')
    {
        iChar=arr[i];
        if(iChar>='a'&&iChar<='z')
        {
            printf("%c",iChar-32);
        }
        else
        {
            printf("%c",iChar);
        }
        i++;
    }
}
******************************************************************************
/*3.Write a program which accept string from user and toggle the case.
Input :   “Marvellous Multi OS”
Output :   mARVELLOUS mULTI os      */
#include<stdio.h>
int main()
{
    char arr[20];
    printf("Enter the string:");
    scanf("%[^'\n']s",arr);
    strlwrx(arr);
    return 0;
}
void strlwrx(char arr[])//arr[]
{
    char iChar;
    int i=0;
    while(arr[i]!='\0')
    {
        iChar=arr[i];
        if(iChar>='a'&&iChar<='z')
        {
            printf("%c",iChar-32);
        }
        else if(iChar>='A'&&iChar<='Z')
        {
            printf("%c",iChar+32);
        }
        else
        {
            printf("%c",iChar);
        }
        i++;
    }
}
************************************************************************************
/*4. Write a program which accept string from user and display only digits from that string.
Input :   “marve89llous121”
Output :   89121
Input :   “Demo”
Output :      */
#include<stdio.h>
int main()
{
    char arr[20];
    printf("Enter the string:");
    scanf("%[^'\n']s",arr);
    strlwrx(arr);
    return 0;
}
void strlwrx(char arr[])//arr[]
{
    char iChar;
    int i=0;
    while(arr[i]!='\0')
    {
        iChar=arr[i];
        if(iChar>='1'&&iChar<='9')
        {
            printf("%c",iChar);
        }
        i++;
    }
}
*********************************************************************************
/*5. Write a program which accept string from user and count number of white spaces
Input :   “MarvellouS”
Output :   0
Input :   “MarvellouS Infosystems”
Output :   1
Input :   “MarvellouS Infosystems by Piyush Manohar Khairnnar”
Output :   5      */
#include<stdio.h>
int main()
{
    char arr[20];
    int iRet=0;
    printf("Enter the string:");
    scanf("%[^'\n']s",arr);
    iRet=strlwrx(arr);
    printf("%d",iRet);
    return 0;
}
int strlwrx(char arr[])//arr[]
{
    int iCount=0;
    char iChar;
    int i=0;
    while(arr[i]!='\0')
    {
        iChar=arr[i];
        if(iChar==' ')
        {
            iCount++;
        }
        i++;
    }
    return iCount;
}
********************************************************************************
**************************Assignment 29*****************************************
/*1.Write a program which accept string from user and accept one character. Check whether that character is present in string or not.
Input :   “Marvellous Multi OS”
e
Output :   TRUE
Input :   “Marvellous Multi OS”
W
Output :   FALSE       */
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0
BOOL ChkChar(char arr[],char cChar)//arr[]
{
    int i=0;
    char cValue;
    while(arr[i]!='\0')
    {
        cValue=arr[i];
        if(cValue==cChar)
        {
            return TRUE;
        }
        i++;
    }
    return FALSE;
}
int main()
{
    char arr[20],cChar;
    BOOL bRet=FALSE;
    printf("Enter the string:");
    gets(arr);
    printf("Enter the character:");
    scanf("%c",&cChar);
    bRet=ChkChar(arr,cChar);
    if(bRet==TRUE)
    {
        printf("Character found");
    }
    else
    {
        printf("Character not found");
    }
    return 0;
}

**********************************************************************************
/*2.Write a program which accept string from user and accept one character. Return frequency of that character.
Input :   “Marvellous Multi OS”
M
Output :   2
Input :   “Marvellous Multi OS”
W
Output :   0       */
#include<stdio.h>
int CountChar(char arr[],char cChar)//arr[]
{
    int i=0,iCount=0;
    char cValue;
    while(arr[i]!='\0')
    {
        cValue=arr[i];
        if(cValue==cChar)
        {
           iCount++;
        }
        i++;
    }
    return iCount;
}
int main()
{
    char arr[20],cChar;
    int iRet=0;
    printf("Enter the string:");
    gets(arr);
    printf("Enter the character:");
    scanf("%c",&cChar);
    iRet=CountChar(arr,cChar);
    printf("your count is:%d",iRet);
    return 0;
}
********************************************************************************
/*3.Write a program which accept string from user and accept one
character. Return index of first occurrence of that character.
Input :   “Marvellous Multi OS”
M
Output :   0
Input :   “Marvellous Multi OS”
W
Output :   -1
Input :   “Marvellous Multi OS”
e
Output :   4        */
#include<stdio.h>
int CountChar(char arr[],char cChar)//arr[]
{
    int i=0,iCount=0;
    char cValue;
    while(arr[i]!='\0')
    {
        cValue=arr[i];
        if(cValue==cChar)
        {
           return i;
        }
        i++;
    }
    return -1;
}
int main()
{
    char arr[20],cChar;
    int iRet=0;
    printf("Enter the string:");
    gets(arr);
    printf("Enter the character:");
    scanf("%c",&cChar);
    iRet=CountChar(arr,cChar);
    printf("your index is:%d",iRet);
    return 0;
}

*****************************************************************************
/*4.Write a program which accept string from user and accept one character. Return index of last occurrence of that character.
Input :   “Marvellous Multi OS”
M
Output :   11
Input :   “Marvellous Multi OS”
W
Output :   -1
Input :   “Marvellous Multi OS”
e
Output :   4       */
#include<stdio.h>
int LastChar(char arr[],char cChar)//arr[]
{
    int i=0,iCount=0;
    char cValue,iAns;
    while(arr[i]!='\0')
    {
        cValue=arr[i];
        if(cValue==cChar)
        {
           iAns=i;
        }
        i++;
    }
    return iAns;
}
int main()
{
    char arr[20],cChar;
    int iRet=0;
    printf("Enter the string:");
    gets(arr);
    printf("Enter the character:");
    scanf("%c",&cChar);
    iRet=LastChar(arr,cChar);
    printf("your index is:%d",iRet);
    return 0;
}
********************************************************************************
/*5. Write a program which accept string from user reverse that string in place.
Input :   “abcd”
Output :   “dcba”
Input :   “abba”
Output :   “abba”       */
#include<stdio.h>
void StrRevX(char arr[])//arr[]
{
    int iEnd=0,iStart=0;
   char iTemp=0;
   while(arr[iEnd]!='\0')
   {
       iEnd++;
   }
   iEnd--;
   while(iStart<iEnd)
   {
       iTemp=arr[iStart];
       arr[iStart]=arr[iEnd];
       arr[iEnd]=iTemp;
       iStart++;
       iEnd--;
   }
}
int main()
{
    char arr[20];
    printf("Enter the string:");
    gets(arr);
    StrRevX(arr);
    return 0;
}

*******************************************************************************
**************************Assignment 30***************************************
/*1.Write a program which accept string from user and copy the contents of that string into another string. (Implement strcpy() function)
Input :   “Marvellous Multi OS”
Output :   “Marvellous Multi OS”       */
#include<stdio.h>
void StrRevX(char *arr,char *brr)//arr[]
{
    int i=0;
    char *ptr=brr;
    while(arr[i]!='\0')
    {
        *ptr=arr[i];
        *ptr++;
        i++;
    }
    *ptr='\0';
    printf("%s",brr);
}
int main()
{
    char arr[20]="Marvellous Multi";
    char brr[20];
    StrRevX(arr,brr);
    return 0;
}
********************************************************************************
/*3. Write a program which accept string from user and copy capital characters of that string into another string.
Input :   “Marvellous Multi OS”
Output :   “MMOS” */
#include<stdio.h>
void StrFunctionX(char *arr,char *brr)//arr[]
{
    int i=0;
    char *ptr=brr;
    while(arr[i]!='\0')
    {
        if(arr[i]>='A'&&arr[i]<='Z')
        {
            *ptr=arr[i];
            *ptr++;
        }
        i++;
    }
    *ptr='\0';
    printf("%s",brr);
}
int main()
{
    char arr[20]="Marvellous Multi OS";
    char brr[20];
    StrFunctionX(arr,brr);
    return 0;
}
***********************************************************************************
/*4. Write a program which accept string from user and copy small characters of that string into another string.
Input :   “Marvellous multi OS”
Output :   “arvellousmulti” */
#include<stdio.h>
void StrFunctionX(char *arr,char *brr)//arr[]
{
    int i=0;
    char *ptr=brr;
    while(arr[i]!='\0')
    {
        if(arr[i]>='a'&&arr[i]<='z')
        {
            *ptr=arr[i];
            *ptr++;
        }
        i++;
    }
    *ptr='\0';
    printf("%s",brr);
}
int main()
{
    char arr[20]="Marvellous Multi OS";
    char brr[20];
    StrFunctionX(arr,brr);
    return 0;
}
*********************************************************************************

/*2. Write a program which accept string from user and copy the
contents of that string into another string. (Implement strncpy() function)
Input :   “Marvellous Multi OS”
 10
Output :   “Marvellous

Note : If third parameter is greater than the size of source string
then copy whole string into destination.       */
#include<stdio.h>
int StrRevX(char *srr,char *brr,int iNo)
{
    int i=0;
    char *ptr=brr;

    while(srr[i]!='\0'&&iNo!=0)
    {
        *ptr=srr[i];
        *ptr++;
        i++;
        iNo--;
    }
     *ptr='\0';
    printf("%s",brr);
}
int main()
{
    char arr[20]="Marvellousy Multi";
    char brr[20];
    StrRevX(arr,brr,10);
    return 0;
}

************************************************************************************
/*5. Write a program which 2 strings from user and concat second string after first string. (Implement strcat() function).
Input :   “Marvellous Infosystems”    “Logic Building”
Output :  “Marvellous Infosystems Logic Building”*/
#include<stdio.h>
int StrFunctionX(char str[],char brr[])
{
    char i=0,j=0;
   while(str[i]!='\0')
    {
        i++;
    }
    while(brr[j]!='\0')
    {
        str[i]=brr[j];
        i++;
        j++;
    }
    str[i]='\0';
    printf("%s",str);
}
int main()
{
    char arr[20]="Marvellous Multi OS";
    char brr[20]="Logic Building";
    StrFunctionX(arr,brr);
    return 0;
}
***************************************************************************************
****************************************Assignment 31***************************
************************************************************************************
/*1. Write a program which accept string from user
 and copy that characters of that string into another
  string in reverse order.
Input :   “Marvellous Python”
Output :   “nohtyP suollevraM” */
#include<stdio.h>
void RevStr(char *arr,char *brr)
{
  char iStart=0,iEnd=0,temp='\0',i=0;

  while(arr[i]!='\0')
  {
      brr[i]=arr[i];
      i++;
  }
  ///string copy

  while(brr[iEnd]!='\0')
  {
      iEnd++;
  }
  iEnd--;

  while(iStart<iEnd)
  {
      temp=brr[iStart];
      brr[iStart]=brr[iEnd];
      brr[iEnd]=temp;
      iStart++;
      iEnd--;
  }
}
int main()
{
    char arr[30],brr[30];
    printf("Enter the string:");
    scanf(" %[^'\n']s",arr);
    RevStr(arr,brr);
    printf("%s",brr);
    return 0;
}
******************************************************************************************
/*2. Write a program which accept string from user and copy that characters
 of that string into another string by removing all white spaces.
Input :   “Marvel   lous Pyth   on”
Output :   “MarvellousPython”
 */
#include<stdio.h>
void StrCpyX(char *arr,char *brr)
{
  int i=0,j=0;
  while(arr[i]!='\0')
  {
      if(arr[i]>='A'&&arr[i]<='Z'||arr[i]>='a'&&arr[i]<='z')
      {
          brr[j]=arr[i];
          j++;
      }
      i++;
  }
  brr[j]='\0';
}
int main()
{
    char arr[30],brr[30];
    printf("Enter the string:");
    scanf(" %[^'\n']s",arr);
    StrCpyX(arr,brr);
    printf("%s",brr);
    return 0;
}
***********************************************************************************
/*3. Write a program which accept string from user and copy that characters of that string into another string by converting all small characters into capital case.
Input :   “Marvellous Python 2”
Output :   “MARVELLOUS PYTHON 2”
 */
#include<stdio.h>
void StrCpyX(char *arr,char *brr)
{
  int i=0,j=0;
  while(arr[i]!='\0')
  {
      if(arr[i]>='a'&&arr[i]<='z')
      {
          brr[j]=arr[i]-32;
          j++;
      }
      else
      {
          brr[j]=arr[i];
          j++;
      }
      i++;
  }
  brr[j]='\0';
}
int main()
{
    char arr[30],brr[30];
    printf("Enter the string:");
    scanf(" %[^'\n']s",arr);
    StrCpyX(arr,brr);
    printf("%s",brr);
    return 0;
}
*****************************************************************************************
/*4. Write a program which accept string from user and copy that characters of that string into another string by converting all capital characters into small case.
Input :   “Marvellous Python 2”
Output :   “marvellous python 2”
 */
#include<stdio.h>
void StrCpyX(char *arr,char *brr)
{
  int i=0,j=0;
  while(arr[i]!='\0')
  {
      if(arr[i]>='A'&&arr[i]<='Z')
      {
          brr[j]=arr[i]+32;
          j++;
      }
      else
      {
          brr[j]=arr[i];
          j++;
      }
      i++;
  }
  brr[j]='\0';
}
int main()
{
    char arr[30],brr[30];
    printf("Enter the string:");
    scanf(" %[^'\n']s",arr);
    StrCpyX(arr,brr);
    printf("%s",brr);
    return 0;
}
**********************************************************************************
/*5. Write a program which accept string from user and
copy that characters of that string into another string by toggling the case.
Input :   “Marvellous Python 2”
Output :   “mARVELLOUS pYTHON 2”
 */
#include<stdio.h>
void StrCpyX(char *arr,char *brr)
{
  int i=0,j=0;
  while(arr[i]!='\0')
  {
      if(arr[i]>='A'&&arr[i]<='Z')
      {
          brr[j]=arr[i]+32;
          j++;
      }
      else if(arr[i]>='a'&&arr[i]<='z')
      {
          brr[j]=arr[i]-32;
          j++;
      }
      else
      {
          brr[j]=arr[i];
          j++;
      }
      i++;
  }
  brr[j]='\0';
}
int main()
{
    char arr[30],brr[30];
    printf("Enter the string:");
    scanf(" %[^'\n']s",arr);
    StrCpyX(arr,brr);
    printf("%s",brr);
    return 0;
}
***************************************************************************************
**************************************Assignment 32************************************
***************************************************************************************
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0

BOOL CheckBit(int iNo)
{
    int iResult=0;
    int iMask=0X00008000;
    int iRem=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    iResult=iNo&iMask;
    if(iResult==iMask)
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}
int main()
{
    int iNo=0;
    BOOL bRet=FALSE;
    printf("Enter the number");
    scanf("%d",&iNo);

    bRet=CheckBit(iNo);

    if(bRet==TRUE)
    {
        printf("Your bit is ON");
    }
    else
    {
        printf("Your bit is OFF");
    }
    return 0;
}
************************************************************************************
/*2. Write a program which checks whether
5th & 18th bit is On or OFF.*/
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0

BOOL CheckBit(int iNo)
{
    int iResult=0;
    int iMask=0X00000120;
    int iRem=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    iResult=iNo&iMask;
    if(iResult==iMask)
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}
int main()
{
    int iNo=0;
    BOOL bRet=FALSE;
    printf("Enter the number");
    scanf("%d",&iNo);

    bRet=CheckBit(iNo);

    if(bRet==TRUE)
    {
        printf("5 and 8 is ON");
    }
    else
    {
        printf("anyone bit is OFF");
    }
    return 0;
}

*********************************************************************************
/*3. Write a program which checks whether
7th & 15th & 21st, 28th bit is On or OFF*/
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0

BOOL CheckBit(int iNo)
{
    int iResult=0;
    int iMask=0X10208080;
    int iRem=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    iResult=iNo&iMask;
    if(iResult==iMask)
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}
int main()
{
    int iNo=0;
    BOOL bRet=FALSE;
    printf("Enter the number");
    scanf("%d",&iNo);

    bRet=CheckBit(iNo);

    if(bRet==TRUE)
    {
        printf("7,15,21,28 is ON");
    }
    else
    {
        printf("anyone bit is OFF");
    }
    return 0;
}
**********************************************************************************
/*4. Write a program which checks whether 7th & 8th & 9th
bit is On or OFF*/
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0

BOOL CheckBit(int iNo)
{
    int iResult=0;
    int iMask=0X00000380;
    int iRem=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    iResult=iNo&iMask;
    if(iResult==iMask)
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}
int main()
{
    int iNo=0;
    BOOL bRet=FALSE;
    printf("Enter the number");
    scanf("%d",&iNo);

    bRet=CheckBit(iNo);

    if(bRet==TRUE)
    {
        printf("7th & 8th & 9th is ON");
    }
    else
    {
        printf("anyone bit is OFF");
    }
    return 0;
}
****************************************************************************************
/*5. Write a program which checks whether
first and last bit is On or OFF.
 First bit means bit number 1 and last
bit means bit number 32*/
#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0

BOOL CheckBit(int iNo)
{
    int iResult=0;
    int iMask=0X800000001;
    int iRem=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    iResult=iNo&iMask;
    if(iResult==iMask)
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}
int main()
{
    int iNo=0;
    BOOL bRet=FALSE;
    printf("Enter the number");
    scanf("%d",&iNo);

    bRet=CheckBit(iNo);

    if(bRet==TRUE)
    {
        printf("1st and last bit is ON");
    }
    else
    {
        printf("anyone bit is OFF");
    }
    return 0;
}
************************************************************************************
******************************Assignment 33**************************************
/*1.Write a program which accept one number
 from user and off 7th bit of that number if it is
  on. Return modified number.
Input :  79
Output : 15*/
#include<stdio.h>

int CheckBit(int iNo)
{
    int iResult=0;
    int iMask=0X00000001;
    int iRem=0;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    iMask=iMask<<6;
    iResult=iNo^iMask;
    return iResult;
}
int main()
{
    int iNo=0;
    int bRet=0;
    printf("Enter the number");
    scanf("%d",&iNo);

    bRet=CheckBit(iNo);
    printf("Your 7th bit is toggeled:%d",bRet);
    return 0;
}
***************************************************************************
/*2. Write a program which accept one number from user and
off 7th and 10th bit of that number. Return modified number.
Input :  577
Output : 1  */

#include<stdio.h>

int CheckBit(int iNo)
{
    int iResult=0;
    int iMask=0X00000240;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    iMask=iMask<<(6&9);
    iResult=iNo^iMask;
    return iResult;
}
int main()
{
    int iNo=0,iPos=0;
    int iRet=0;
    printf("Enter the number");
    scanf("%d",&iNo);

    iRet=CheckBit(iNo);
    printf("%d",iRet);
    return 0;
}
***************************************************************************************
/*3. Write a program which accept one number from user and
toggle 7th bit of that number. Return modified number.
Input :  137
Output : 201  */

#include<stdio.h>

int CheckBit(int iNo)
{
    int iResult=0;
    int iMask=0X00000001;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    iMask=iMask<<6;
    iResult=iNo^iMask;
    return iResult;
}
int main()
{
    int iNo=0,iPos=0;
    int iRet=0;
    printf("Enter the number");
    scanf("%d",&iNo);

    iRet=CheckBit(iNo);
    printf("%d",iRet);
    return 0;
}
************************************************************************************
/*4. Write a program which accept one number from user and
toggle 7th and 10th bit of that number. Return modified number.
Input :  137
Output : 713  */

#include<stdio.h>

int CheckBit(int iNo)
{
    int iResult=0;
    int iMask=0X00000240;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    iMask=iMask<<(6&9);
    iResult=iNo^iMask;
    return iResult;
}
int main()
{
    int iNo=0,iPos=0;
    int iRet=0;
    printf("Enter the number");
    scanf("%d",&iNo);

    iRet=CheckBit(iNo);
    printf("%d",iRet);
    return 0;
}
*****************************************************************************************
/*5. Write a program which accept one number from user and on
its first 4 bits. Return modified number.
Input :  73
Output : 79   */

#include<stdio.h>

int CheckBit(int iNo)
{
    int iResult=0;
    int iMask=0X0000000F;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    iResult=iNo|iMask;
    return iResult;
}
int main()
{
    int iNo=0,iPos=0;
    int iRet=0;
    printf("Enter the number");
    scanf("%d",&iNo);

    iRet=CheckBit(iNo);
    printf("%d",iRet);
    return 0;
}
**************************************************************************************
*********************************Assignment 34**************************************
/*1.Write a program which accept one number and position
from user and check whether bit at that position is on or off.
 If bit is one return TURE otherwise return FALSE.

Input :  10 2
Output :  TRUE  */

#include<stdio.h>
typedef int BOOL;
#define TRUE 1
#define FALSE 0

BOOL CheckBit(int iNo,int iPos)
{
    int iResult=0;
    int iMask=0X00000001;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    iMask=iMask<<(iPos-1);
    iResult=iNo&iMask;
    if(iMask==iResult)
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}
int main()
{
    int iNo=0,iPos=0;
    BOOL bRet=FALSE;
    printf("Enter the number");
    scanf("%d",&iNo);

    printf("Enter the number");
    scanf("%d",&iPos);

    bRet=CheckBit(iNo,iPos);
    if(bRet==TRUE)
    {
        printf("Bit is ON");
    }
    else
    {
        printf("Bit is OFF");
    }
    return 0;
}
***************************************************************************************************
/*2. Write a program which accept one number and position from user
 and off that bit. Return modified number.
Input :  10 2
Output :  8   */

#include<stdio.h>

int CheckBit(int iNo,int iPos)
{
    int iResult=0;
    int iMask=0X00000001;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    iMask=iMask<<(iPos-1);
    iResult=iNo^iMask;
    return iResult;
}
int main()
{
    int iNo=0,iPos=0;
    int iRet=0;
    printf("Enter the number");
    scanf("%d",&iNo);

    printf("Enter the number");
    scanf("%d",&iPos);

    iRet=CheckBit(iNo,iPos);
    printf("%d",iRet);
    return 0;
}
**********************************************************************************************************
/*3. Write a program which accept one number and position from user
 and on that bit. Return modified number.

Input :  10 3
Output :  14    */

#include<stdio.h>

int CheckBit(int iNo,int iPos)
{
    int iResult=0;
    int iMask=0X00000001;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    iMask=iMask<<(iPos-1);
    iResult=iNo|iMask;
    return iResult;
}
int main()
{
    int iNo=0,iPos=0;
    int iRet=0;
    printf("Enter the number");
    scanf("%d",&iNo);

    printf("Enter the number");
    scanf("%d",&iPos);

    iRet=CheckBit(iNo,iPos);
    printf("%d",iRet);
    return 0;
}
***************************************************************************************************
/*4. Write a program which accept one number and position from user and
toggle that bit. Return modified number.

Input :  10 3
Output :  14   */

#include<stdio.h>

int CheckBit(int iNo,int iPos)
{
    int iResult=0;
    int iMask=0X00000001;
    if(iNo<0)
    {
        iNo=-iNo;
    }
    iMask=iMask<<(iPos-1);
    iResult=iNo|iMask;
    return iResult;
}
int main()
{
    int iNo=0,iPos=0;
    int iRet=0;
    printf("Enter the number");
    scanf("%d",&iNo);

    printf("Enter the number");
    scanf("%d",&iPos);

    iRet=CheckBit(iNo,iPos);
    printf("%d",iRet);
    return 0;
}
**********************************************************************************************************
/*5. Write a program which accept one number from user and toggle contents of
first and last nibble of the number. Return modified number.
(Nibble is a group of four bits)   */

#include<stdio.h>

int CheckBit(int iNo)
{
    int iResult=0;

    long int iMask=0XF000000F;

    if(iNo<0)
    {
        iNo=-iNo;
    }

    iResult=iNo^~iMask;
    return iResult;
}
int main()
{
    int iNo=0;
    int iRet=0;
    printf("Enter the number");
    scanf("%d",&iNo);

    iRet=CheckBit(iNo);
    printf("%d",iRet);
    return 0;
}
******************************************************************************************

********************************Assignment 39*****************************************
/*1. Write a program which search first occurrence of particular element from singly linear linked list.  Function should return position at which element is found.
Function Prototype :
int SearchFirstOcc( PNODE Head , int no );
Input linked list : |10|->|20|->|30|->|40|->|50|->|30|->|70|
Input element : 30
Output : 3
*/
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};

typedef struct node NODE;
typedef struct node* PNODE;
typedef struct node** PPNODE;

void InsertLast(PPNODE Head,int no)
{
    PNODE newn=NULL;
    PNODE temp=NULL;
    newn=(PNODE)malloc(sizeof(NODE));

    newn->data=no;
    newn->next=NULL;

    if(*Head==NULL)
    {
        *Head=newn;
    }
    else
    {
        temp=*Head;
        while(temp->next!=NULL)
        {
            temp=temp->next;
        }
        temp->next=newn;
    }
}

int SearchFirstOcc(PNODE Head, int no)
{
    int iCount=0,i=0;
    while(Head!= NULL)
    {
        iCount++;
        if(Head->data==no)
        {
            break;
        }
        Head = Head -> next;
    }
    return iCount;
}
/*int Display(PNODE Head)
{
    while(Head!=NULL)
    {
        printf(" %d |",Head->data);
        Head=Head->next;
    }
}*/
int main()
{
    PNODE First=NULL;
    int iRet=0;
    InsertLast(&First,10);
    InsertLast(&First,20);
    InsertLast(&First,30);
    InsertLast(&First,40);
    InsertLast(&First,20);
    InsertLast(&First,30);
    InsertLast(&First,70);

    iRet=SearchFirstOcc(First,40);
    printf("%d",iRet);
    return 0;
}

**************************************************************************************
/*2. Write a program which search last occurrence of particular element from singly linear linked list.
 Function should return position at which element is found.
Function Prototype :
int SearchLastOcc( PNODE Head, int no );
Input linked list : |10|->|20|->|30|->|40|->|20|->|30|->|70|
Input element : 30
Output : 6
*/
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};

typedef struct node NODE;
typedef struct node* PNODE;
typedef struct node** PPNODE;

void InsertLast(PPNODE Head,int no)
{
    PNODE newn=NULL;
    PNODE temp=NULL;
    newn=(PNODE)malloc(sizeof(NODE));

    newn->data=no;
    newn->next=NULL;

    if(*Head==NULL)
    {
        *Head=newn;
    }
    else
    {
        temp=*Head;
        while(temp->next!=NULL)
        {
            temp=temp->next;
        }
        temp->next=newn;
    }
}

int SearchLastOcc(PNODE Head, int no)
{
    int iCount=0,i=0;
    while(Head!= NULL)
    {
        iCount++;
        if(Head->data==no)
        {
            i=iCount;
        }
        Head = Head -> next;
    }
    return i;
}
/*int Display(PNODE Head)
{
    while(Head!=NULL)
    {
        printf(" %d |",Head->data);
        Head=Head->next;
    }
}*/
int main()
{
    PNODE First=NULL;
    int iRet=0;
    InsertLast(&First,10);
    InsertLast(&First,20);
    InsertLast(&First,30);
    InsertLast(&First,40);
    InsertLast(&First,20);
    InsertLast(&First,30);
    InsertLast(&First,70);

    iRet=SearchLastOcc(First,30);
    printf("%d",iRet);
    return 0;
}
*************************************************************************************
/*3. Write a program which returns addition of all element from singly linear linked list.
Function Prototype :
int Addition( PNODE Head);
Input linked list : |10|->|20|->|30|->|40|
Output : 100
*/
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};

typedef struct node NODE;
typedef struct node* PNODE;
typedef struct node** PPNODE;
void InsertFirst(PPNODE Head, int no)
{
    PNODE newn = NULL;
    newn = (PNODE)malloc(sizeof(NODE));
    newn-> data = no;
    newn-> next = NULL;

    if(*Head == NULL)
    {
        *Head = newn;
    }
    else
    {
        newn -> next = *Head;
        *Head = newn;
    }
}

void Addition(PNODE head)
{
    int iAdd=0;

    while(head != NULL)
    {
       iAdd=iAdd+head->data;
       head = head -> next;
    }

   printf("%d",iAdd);
}
int main()
{
    PNODE First=NULL;
    InsertFirst(&First,10);
    InsertFirst(&First,20);
    InsertFirst(&First,30);
    InsertFirst(&First,40);
    Addition(First);
    return 0;
}
**************************************************************************************
/*4. Write a program which return largest element from singly linear linked list.

 Function Prototype :
int Maximum( PNODE Head);
Input linked list : |110|->|230|->|320|->|240|
Output : 320

*/
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};

typedef struct node NODE;
typedef struct node* PNODE;
typedef struct node** PPNODE;
void InsertFirst(PPNODE Head, int no)
{
    PNODE newn = NULL;
    newn = (PNODE)malloc(sizeof(NODE)); 
    newn-> data = no;   
    newn-> next = NULL; 

    if(*Head == NULL) 
    {
        *Head = newn;
    }
    else  
    {
        newn -> next = *Head;
        *Head = newn;
    }
}

void Maximum(PNODE head)
{
    int iMax=0;
   while(head != NULL)
    {
        if(iMax<head->data)
        {
            iMax=head->data;
        }
       head = head -> next;
    }

   printf("%d",iMax);
}
int main()
{
    PNODE First=NULL;
    InsertFirst(&First,110);
    InsertFirst(&First,230);
    InsertFirst(&First,320);
    InsertFirst(&First,240);
    Maximum(First);
    return 0;
}
*************************************************************************************
/*5. Write a program which return smallest element from singly linear linked list.

Function Prototype :
int Minimum( PNODE Head);
Input linked list : |110|->|230|->|20|->|240|->|640|
Output : 20

*/
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};

typedef struct node NODE;
typedef struct node* PNODE;
typedef struct node** PPNODE;
void InsertFirst(PPNODE Head, int no)
{
    PNODE newn = NULL;
    newn = (PNODE)malloc(sizeof(NODE));
    newn-> data = no;
    newn-> next = NULL;

    if(*Head == NULL)
    {
        *Head = newn;
    }
    else
    {
        newn -> next = *Head;
        *Head = newn;
    }
}

void Minimum(PNODE head)
{
    int iMin=0;

    iMin=head->data;

    while(head != NULL)
    {
        if(iMin>head->data)
        {
            iMin=head->data;
        }
       head = head -> next;
    }

   printf("%d",iMin);
}
int main()
{
    PNODE First=NULL;
    InsertFirst(&First,110);
    InsertFirst(&First,230);
    InsertFirst(&First,20);
    InsertFirst(&First,240);
    InsertFirst(&First,640);
    Minimum(First);
    return 0;
}
**************************************************************************************
*********************************Assignment 40****************************************
/*1. Write a program which displays all elements which are perfect from singly linear linked list.
Function Prototype :
int DisplayPerfect( PNODE Head);
Input linked list : |11|->|28|->|17|->|41|->|6|->|89|
Output :  6 28
*/
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};

typedef struct node NODE;
typedef struct node* PNODE;
typedef struct node** PPNODE;

void InsertFirst(PPNODE Head, int no)
{
    PNODE newn = NULL;
    newn = (PNODE)malloc(sizeof(NODE)); // Allocate memory
    newn-> data = no;   // Iniitialise data
    newn-> next = NULL; // Initialise pointer

    if(*Head == NULL) // Linkedlist is empty
    {
        *Head = newn;
    }
    else  // LL contains atleast one node
    {
        newn -> next = *Head;
        *Head = newn;
    }
}

void DisplayPerfect(PNODE Head)
{
    int iNo=1,iAns=0;
    while(Head != NULL)
    {
      for(iNo=1;iNo<Head->data;iNo++)
      {
        if(Head->data%iNo==0)
        {
            iAns=iAns+iNo;
        }
      }
      if(iAns==Head->data)
        {
            printf("%d ",Head->data);
        }
        iAns=0;
        iNo=1;
        Head = Head -> next;
    }
}
int main()
{
    PNODE First=NULL;
    int iRet=0;
    InsertFirst(&First,11);
    InsertFirst(&First,28);
    InsertFirst(&First,17);
    InsertFirst(&First,41);
    InsertFirst(&First,6);
    InsertFirst(&First,29);
    DisplayPerfect(First);

    return 0;
}
***********************************************************************************
/*2. Write a program which displays all elements which are prime from singly linear linked list.
Function Prototype :
int DisplayPrime( PNODE Head);
Input linked list : |11|->|20|->|17|->|41|->|22|->|89|
Output :  11 17 41 89
*/
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};

typedef struct node NODE;
typedef struct node* PNODE;
typedef struct node** PPNODE;

void InsertLast(PPNODE Head,int no)
{
    PNODE newn=NULL;
    PNODE temp=NULL;
    newn=(PNODE)malloc(sizeof(NODE));

    newn->data=no;
    newn->next=NULL;

    if(*Head==NULL)
    {
        *Head=newn;
    }
    else
    {
        temp=*Head;
        while(temp->next!=NULL)
        {
            temp=temp->next;
        }
        temp->next=newn;
    }
}

void DisplayPrime(PNODE Head)
{
    int iNo=1,Prime=0;
    while(Head != NULL)
    {
      for(iNo=1;iNo<Head->data;iNo++)
      {
        if(Head->data%iNo==0)
        {
            Prime++;
        }
      }
      if(Prime==1)
        {
            printf("%d ",Head->data);
        }
        iNo=1;
        Prime=0;
        Head = Head -> next;
    }
}
/*int Display(PNODE Head)
{
    while(Head!=NULL)
    {
        printf(" %d |",Head->data);
        Head=Head->next;
    }
}*/
int main()
{
    PNODE First=NULL;
    int iRet=0;
    InsertLast(&First,11);
    InsertLast(&First,20);
    InsertLast(&First,17);
    InsertLast(&First,41);
    InsertLast(&First,22);
    InsertLast(&First,89);
    DisplayPrime(First);
    return 0;
}

***********************************************************************************
/*3. Write a program which returns addition of all even element from singly linear linked list.
Function Prototype :
int AdditionEven( PNODE Head);
Input linked list : |11|->|20|->|32|->|41|
Output : 52
*/
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};

typedef struct node NODE;
typedef struct node* PNODE;
typedef struct node** PPNODE;

void InsertFirst(PPNODE Head, int no)
{
    PNODE newn = NULL;
    newn = (PNODE)malloc(sizeof(NODE));
    newn-> data = no;
    newn-> next = NULL;

    if(*Head == NULL)
    {
        *Head = newn;
    }
    else
    {
        newn -> next = *Head;
        *Head = newn;
    }
}

void DisplayPrime(PNODE Head)
{
    int iAdd=0;
    while(Head != NULL)
    {
        if(Head->data%2!=0)
        {
            iAdd=iAdd+Head->data;
        }
        Head = Head -> next;
    }
    printf("%d ",iAdd);
}
int main()
{
    PNODE First=NULL;
    int iRet=0;
    InsertFirst(&First,11);
    InsertFirst(&First,20);
    InsertFirst(&First,32);
    InsertFirst(&First,41);

    DisplayPrime(First);

    return 0;
}
****************************************************************************************
/*4. Write a program which return second maximum element from singly linear linked list.
Function Prototype :
int SecMaximum( PNODE Head);
Input linked list : |110|->|230|->|320|->|240|
Output : 240
*/
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};

typedef struct node NODE;
typedef struct node* PNODE;
typedef struct node** PPNODE;

void InsertLast(PPNODE Head,int no)
{
    PNODE newn=NULL;
    PNODE temp=NULL;
    newn=(PNODE)malloc(sizeof(NODE));

    newn->data=no;
    newn->next=NULL;

    if(*Head==NULL)
    {
        *Head=newn;
    }
    else
    {
        temp=*Head;
        while(temp->next!=NULL)
        {
            temp=temp->next;
        }
        temp->next=newn;
    }
}

void SecMaximum(PNODE Head)
{
    int iAdd=0,iMax=0,iAns1=0,iAns2=0;

    iMax=Head->data;

    while(Head != NULL)
    {
       if(Head->data<iMax)
        {
            iAns1=Head->data;  ///Maximum
        }
         if(iAns2<iAns1)
        {
            iAns2=Head->data;  ///secound Maximum
        }
       Head = Head -> next;
    }
    printf("%d ",iAns2);
}
int main()
{
    PNODE First=NULL;
    int iRet=0;
    InsertLast(&First,11);
    InsertLast(&First,20);
    InsertLast(&First,17);
    InsertLast(&First,41);
    InsertLast(&First,22);
    InsertLast(&First,89);
    SecMaximum(First);
    return 0;
}
*****************************************************************************************
/*
5. Write a program which display addition of digits of element from
singly linear linked list.
Function Prototype :int SumDigit( PNODE Head);
Input linked list : |110|->|230|->|20|->|240|->|640|
Output :  2 5 2 6 10
*/
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};

typedef struct node NODE;
typedef struct node* PNODE;
typedef struct node** PPNODE;

void InsertLast(PPNODE Head,int no)
{
    PNODE newn=NULL;
    PNODE temp=NULL;
    newn=(PNODE)malloc(sizeof(NODE));

    newn->data=no;
    newn->next=NULL;

    if(*Head==NULL)
    {
        *Head=newn;
    }
    else
    {
        temp=*Head;
        while(temp->next!=NULL)
        {
            temp=temp->next;
        }
        temp->next=newn;
    }
}

void SumDigit(PNODE Head)
{
    int iAdd=0,iRem=0,iAns=0;

    while(Head != NULL)
    {
        iAns=Head->data;
        while(iAns!=0)
        {
            iRem=iAns%10;
            iAdd=iAdd+iRem;
            iAns=iAns/10;
        }
        printf("%d ",iAdd);
        iAdd=0;
       Head = Head -> next;
    }
}
int main()
{
    PNODE First=NULL;
    int iRet=0;
    InsertLast(&First,110);
    InsertLast(&First,230);
    InsertLast(&First,20);
    InsertLast(&First,240);
    InsertLast(&First,640);
    SumDigit(First);

    return 0;
}
***************************************************************************************
*************************************assignment 41******************************************
/*1. Write a program which reverse each element of singly linked list.
Function Prototype :
void Reverse( PNODE Head);
Input linked list : |11|->|28|->|17|->|41|->|6|->|89|
Output :  |11|->|82|->|71|->|14|->|6|->|98| */
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};

typedef struct node NODE;
typedef struct node* PNODE;
typedef struct node** PPNODE;

void InsertLast(PPNODE Head,int no)
{
    PNODE newn=NULL;
    PNODE temp=NULL;
    newn=(PNODE)malloc(sizeof(NODE));

    newn->data=no;
    newn->next=NULL;

    if(*Head==NULL)
    {
        *Head=newn;
    }
    else
    {
        temp=*Head;
        while(temp->next!=NULL)
        {
            temp=temp->next;
        }
        temp->next=newn;
    }
}
void reverse(PNODE head)
{
    int temp=0;
    int iAns=0;
    while(head!= NULL)
    {
        temp=head->data;
        while(temp!=0)
        {
             iAns=temp%10;
             printf("%d",iAns);
             temp=temp/10;
        }
        temp=0;
        printf("|");
        head = head -> next;
    }
}
int Display(PNODE Head)
{
    while(Head!=NULL)
    {
        printf(" %d |",Head->data);
        Head=Head->next;
    }
}
int main()
{
    PNODE First=NULL;
    InsertLast(&First,11);
    InsertLast(&First,28);
    InsertLast(&First,17);
    InsertLast(&First,41);
    InsertLast(&First,6);
    InsertLast(&First,89);
    reverse(First);
    return 0;
}
************************************************************************************
/*2. Write a program which display all palindrome elements of singly linked list.
Function Prototype :
void DisplayPallindrome( PNODE Head);
Input linked list : |11|->|28|->|17|->|414|->|6|->|89|
Output :  11 6 414*/
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};

typedef struct node NODE;
typedef struct node* PNODE;
typedef struct node** PPNODE;

void InsertLast(PPNODE Head,int no)
{
    PNODE newn=NULL;
    PNODE temp=NULL;
    newn=(PNODE)malloc(sizeof(NODE));

    newn->data=no;
    newn->next=NULL;

    if(*Head==NULL)
    {
        *Head=newn;
    }
    else
    {
        temp=*Head;
        while(temp->next!=NULL)
        {
            temp=temp->next;
        }
        temp->next=newn;
    }
}
void reverse(PNODE head)
{
    int temp=0;
    int iAns=0,iRem=0;
    while(head!= NULL)
    {
        temp=head->data;
        while(temp!=0)
        {
             iRem=temp%10;
             iAns=iAns*10+iRem;
             if(head->data==iAns)
             {
                 printf("%d |",iAns);
             }
             temp=temp/10;
        }
        iAns=0;
        iRem=0;
        temp=0;
        head = head -> next;
    }
}
int Display(PNODE Head)
{
    while(Head!=NULL)
    {
        printf(" %d |",Head->data);
        Head=Head->next;
    }
}
int main()
{
    PNODE First=NULL;
    InsertLast(&First,11);
    InsertLast(&First,28);
    InsertLast(&First,17);
    InsertLast(&First,41);
    InsertLast(&First,6);
    InsertLast(&First,414);
    reverse(First);
    return 0;
}
******************************************************************************
/*3. Write a program which display product of all digits of all element from singly linear linked list. (Don’t consider 0)
Function Prototype :
void DisplayProduct( PNODE Head);
Input linked list : |11|->|20|->|32|->|41|
Output :   1 2 6 4*/
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};

typedef struct node NODE;
typedef struct node* PNODE;
typedef struct node** PPNODE;

void InsertLast(PPNODE Head,int no)
{
    PNODE newn=NULL;
    PNODE temp=NULL;
    newn=(PNODE)malloc(sizeof(NODE));

    newn->data=no;
    newn->next=NULL;

    if(*Head==NULL)
    {
        *Head=newn;
    }
    else
    {
        temp=*Head;
        while(temp->next!=NULL)
        {
            temp=temp->next;
        }
        temp->next=newn;
    }
}
void reverse(PNODE head)
{
    int temp=0;
    int iAns=1,iRem=0;
    while(head!= NULL)
    {
        temp=head->data;
        while(temp!=0)
        {
             iRem=temp%10;
             if(iRem==0)
             {
                 iRem++;
             }
             iAns=iAns*iRem;
             temp=temp/10;
        }
        printf("%d |",iAns);
        iRem=0;
        iAns=1;
        temp=0;
        head = head -> next;
    }
}
int Display(PNODE Head)
{
    while(Head!=NULL)
    {
        printf(" %d |",Head->data);
        Head=Head->next;
    }
}
int main()
{
    PNODE First=NULL;
    InsertLast(&First,11);
    InsertLast(&First,20);
    InsertLast(&First,32);
    InsertLast(&First,41);
    reverse(First);
    return 0;
}
*******************************************************************************
/*5. Write a program which display largest digits of all element from singly linear linked list.
Function Prototype :
void DisplayLarge( PNODE Head);
Input linked list : |11|->|250|->|532|->|419|
Output :   1 5 5 9*/
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};

typedef struct node NODE;
typedef struct node* PNODE;
typedef struct node** PPNODE;

void InsertLast(PPNODE Head,int no)
{
    PNODE newn=NULL;
    PNODE temp=NULL;
    newn=(PNODE)malloc(sizeof(NODE));

    newn->data=no;
    newn->next=NULL;

    if(*Head==NULL)
    {
        *Head=newn;
    }
    else
    {
        temp=*Head;
        while(temp->next!=NULL)
        {
            temp=temp->next;
        }
        temp->next=newn;
    }
}
void reverse(PNODE head)
{
    int temp=0;
    int iAns=0,iRem=0;
    while(head!= NULL)
    {
        temp=head->data;
        while(temp!=0)
        {
             iRem=temp%10;
             if(iRem>iAns)
             {
                 iAns=iRem;
             }
             temp=temp/10;
        }
        printf("%d |",iAns);
        iAns=1;
        iRem=0;
        head = head -> next;
    }
}
int Display(PNODE Head)
{
    while(Head!=NULL)
    {
        printf(" %d |",Head->data);
        Head=Head->next;
    }
}
int main()
{
    PNODE First=NULL;
    InsertLast(&First,11);
    InsertLast(&First,250);
    InsertLast(&First,532);
    InsertLast(&First,415);
    reverse(First);
    return 0;
}
**************************************************************************************
///Doubly circular link list
#include<stdio.h>
struct node
{
    int data;
    struct node* next;
    struct node* prev;
};

typedef struct node NODE;
typedef struct node*PNODE;
typedef struct node**PPNODE;

int main()
{
    PNODE first=NULL;
    PNODE last=NULL;
    int iRet=0;
    InsertFirst(&first,&last,11);
    InsertFirst(&first,&last,12);
    InsertFirst(&first,&last,13);
    InsertFirst(&first,&last,14);
    InsertLast(&first,&last,10);
    InsertLast(&first,&last,9);
    InsertFirst(&first,&last,100);
    DeleteLast(&first,&last);
    DeleteLast(&first,&last);
    DeleteFirst(&first,&last);
     //DeleteFirst(&first,&last);
    InsertAtPosition(&first,&last,900,3);
    DeleteAtPosition(&first,&last,3);
    Display(first);
    iRet=Count(first);
    printf("\nyour count is:%d",iRet);
    return 0;
}
void InsertFirst(PPNODE head,PPNODE tail,int no)
{
    PNODE newn=NULL;

    newn=(PNODE)malloc(sizeof(NODE));

    newn->data=no;
    newn->next=NULL;
    newn->prev=NULL;

    if((*head==NULL)&&(*tail==NULL))
    {
        *head=newn;
        *tail=newn;
    }
    else
    {
          newn->next=*head;
         (*head)->prev=newn;
         (*head)=newn;

         (*tail)->next=*head;
         (*head)->prev=*tail;
    }
}
void InsertLast(PPNODE head,PPNODE tail,int no)
{
    PNODE newn=NULL;

    newn=(PNODE)malloc(sizeof(NODE));

    newn->data=no;
    newn->next=NULL;
    newn->prev=NULL;

    if(*head==NULL&&*tail==NULL)
    {
        *head=newn;
        *tail=newn;
    }
    else
    {
        (*tail)->next=newn;
         newn->prev=*tail;
         *tail=newn;
    }
    (*tail)->next=*head;
    (*head)->prev=*tail;
}
void Display(PNODE head)
{
        PNODE temp=head;
        if(temp==NULL)
        {
            return;
        }
        while(temp->next!=head)
        {
             printf("%d |",temp->data);
             temp=temp->next;
        }
        printf("%d |",temp->data);
}
int Count(PNODE head)
{
        int iCount=0;
        PNODE temp=head;
        if(temp==NULL)
        {
            return;
        }
        while(temp->next!=head)
        {
             iCount++;
             temp=temp->next;
        }
        iCount++;
        return iCount;
}
void DeleteLast(PPNODE head,PPNODE tail)
{
    PNODE temp=NULL;
    if(*head==NULL)
    {
        return;
    }
    temp=(*head)->prev;
    (*head)->prev=temp->prev;
    (*tail)=temp->prev;
    (*tail)->next=(*head);
    free(temp);
}
void DeleteFirst(PPNODE head,PPNODE tail)
{
    PNODE temp=*head;
    if(*head==NULL&&*tail==NULL)
    {
        return;
    }
    temp=*head;

    (*head)=temp->next;
    (*head)->prev=(temp)->prev;
    (*tail)->next=temp->next;
    free(temp);
}
void InsertAtPosition(PPNODE head,PPNODE tail,int value,int pos)
{
    int size=0,i=0;
     PNODE newn=NULL;
     PNODE temp=NULL;
     size=Count(*head);

     newn=(PNODE)malloc(sizeof(NODE));

     newn->data=value;
     newn->next=NULL;
     newn->prev=NULL;

    if(pos<1||pos>size+1)
    {
        return;
    }
    else if(pos==1)
    {
        InsertFirst(head,tail,value);
    }
    else if(pos==size+1)
    {
        InsertLast(head,tail,value);
    }
    else
    {
        temp=*head;
        for(i=1;i<pos-1;i++)
        {
            temp=temp->next;
        }
        newn->prev=temp;
        newn->next=temp->next;
        temp->next=newn;
        temp->next->prev=newn;
    }
}
void DeleteAtPosition(PPNODE head,PPNODE tail,int pos)
{
    int i=0,size=0;
    PNODE temp=NULL;
    PNODE temp2=NULL;

    size=Count(*head);
    if(pos<1||pos>size)
    {
        return;
    }
    else if(pos==1)
    {
        DeleteFirst(head,tail);
    }
    else if(pos==size)
    {
        DeleteLast(head,tail);
    }
    else
    {
        temp=*head;
        for(i=1;i<pos-1;i++)
        {
            temp=temp->next;
        }
        temp2=temp->next;
        temp->next=temp2->next;
        temp->next->prev=temp;
        free(temp2);
    }
}
*****************************************************************************************
///Singly circular link list
#include<stdio.h>
struct node
{
    int data;
    struct node* next;
};

typedef struct node NODE;
typedef struct node*PNODE;
typedef struct node**PPNODE;

int main()
{
    PNODE first=NULL;
    PNODE last=NULL;
    int iRet=0;
    InsertFirst(&first,&last,11);
    InsertFirst(&first,&last,12);
    InsertFirst(&first,&last,13);
    InsertFirst(&first,&last,14);
    InsertLast(&first,&last,10);
    InsertLast(&first,&last,9);
    InsertFirst(&first,&last,100);
    DeleteLast(&first,&last);
    //DeleteLast(&first,&last);
    DeleteFirst(&first,&last);
     //DeleteFirst(&first,&last);
     InsertAtPosition(&first,&last,100,2);
     DeleteAtPosition(&first,&last,3);
     Display(first);
     iRet=Count(first);
     printf("\nyour count is:%d",iRet);
     return 0;
}
void InsertFirst(PPNODE head,PPNODE tail,int no)
{
    PNODE newn=NULL;

    newn=(PNODE)malloc(sizeof(NODE));

    newn->data=no;
    newn->next=NULL;

    if(*head==NULL||*tail==NULL)
    {
       *head=newn;
       *tail=newn;
    }
    else
    {
        newn->next=*head;
        *head=newn;
        (*tail)->next=newn;
    }

}
void InsertLast(PPNODE head,PPNODE tail,int no)
{
    PNODE newn=NULL;

    newn=(PNODE)malloc(sizeof(NODE));

    newn->data=no;
    newn->next=NULL;

    if(*head==NULL||*tail==NULL)
    {
       *head=newn;
       *tail=newn;
    }
    else
    {
        newn->next=*head;
        (*tail)->next=newn;
    }
}
void Display(PNODE head)
{
    PNODE temp=head;

     if(temp==NULL)
     {
         return;
     }
    while(temp->next!=head)
    {
         printf(" %d |",temp->data);
         temp=temp->next;
    }
    printf(" %d |",temp->data);
}
int Count(PNODE head)
{
    PNODE temp=head;
    int iCount=0;
     if(temp==NULL)
     {
         return;
     }
    while(temp->next!=head)
    {
         iCount++;
         temp=temp->next;
    }
    iCount++;
    return iCount;
}
void DeleteLast(PPNODE head,PPNODE tail)
{
     PNODE temp=*head;
     PNODE temp2=NULL;
     if(*head==NULL && *tail==NULL)
     {
         return;
     }
     else
     {
         temp=*head;
         while(temp->next->next!=*head)
         {
             temp=temp->next;
         }
         temp2=temp->next;
         *tail=temp;
         temp->next=*head;
         free(temp2);
     }
}
void DeleteFirst(PPNODE head,PPNODE tail)
{
        PNODE temp=NULL;
        if(*head==NULL&&*tail==NULL)
        {
            return;
        }
        else
        {
            temp=*head;
            (*head)=temp->next;
            (*tail)->next=*head;
            free(temp);
        }
}
void InsertAtPosition(PPNODE head,PPNODE tail,int value,int pos)
{
    PNODE newn=NULL;
    PNODE temp=NULL;
    int size=0,i=0;

    newn=(PNODE)malloc(sizeof(NODE));
    newn->data=value;
    newn->next=NULL;

    size=Count(*head);
    if(pos<1||pos>size+1)
    {
        return;
    }
    else if(pos==1)
    {
        InsertFirst(head,tail,value);
    }
    else if(pos==size+1)
    {
        InsertLast(head,tail,value);
    }
    else
    {
        temp=*head;
        for(i=1;i<pos-1;i++)
        {
            temp=temp->next;
        }
        newn->next=temp->next;
        temp->next=newn;
    }
}
void DeleteAtPosition(PPNODE head,PPNODE tail,int pos)
{
    int i=0,size=0;
    PNODE temp=NULL;
    PNODE temp2=NULL;

    size=Count(*head);
    if(pos<1||pos>size)
    {
        return;
    }
    else if(pos==1)
    {
        DeleteFirst(head,tail);
    }
    else if(pos==size)
    {
        DeleteLast(head,tail);
    }
    else
    {
        temp=*head;
        for(i=1;i<pos-1;i++)
        {
            temp=temp->next;
        }
        temp2=temp->next;
        temp->next=temp2->next;
        free(temp2);
    }
}
************************************Assignment No 44***************************************
Program 1:
/*Problem Statement: write a recursive program which Display below pattern.
output: * * * * * */
#include<stdio.h>
void Display()
{
    static int i=1;
    if(i<=5)
    {
        printf("*\t");
        i++;
        Display();
    }
}
int main()
{
    Display();
    return 0;
}
******************************************************************************************Program 2:
/*Problem Statement: write a recursive program which Display below pattern.
output: 1 2 3 4 5 */
#include<stdio.h>
void Display()
{
    static int i=1;
    if(i<=5)
    {
        printf("%d\t",i);
        i++;
        Display();
    }
}
int main()
{
    Display();
    return 0;
}
******************************************************************************************Program 3:
/*Problem Statement: write a recursive program which Display below pattern.
output: 5 4 3 2 1 */
#include<stdio.h>
void Display()
{
    static int i=5;
    if(i>0)
    {
        printf("%d\t",i);
        i--;
        Display();
    }
}
int main()
{
    Display();
    return 0;
}
******************************************************************************************Program 4:/*Problem Statement: write a recursive program which Display below pattern.
output: A B C D E F */
#include<stdio.h>
void Display(char ch)
{
		if(ch<='F')
		{
		    printf("%c\t",ch);
		    Display(ch+1);
		}
}
int main()
{
    char ch='A';
    Display(ch);
    return 0;
}
******************************************************************************************Program 5:
/*Problem Statement: write a recursive program which Display below pattern.
output: a b c d e f */
#include<stdio.h>
void Display(char ch)
{		if(ch<='f')
		{
		    printf("%c\t",ch);
		    Display(ch+1);
		}
}
int main()
{
    char ch='a';
    Display(ch);
    return 0;
}
************************************Assignment No 45***************************************
Program 1:
/*Problem Statement: write a recursive program which Display below pattern.
Input:5
output: * * * * * */
#include<stdio.h>
void Display(int iNo)
{
    static int i=1;
    if(i<=iNo)
    {
        printf("*\t");
        i++;
        Display(iNo);
    }
}
int main()
{
    int iValue=0;
    printf("Enter number:");
    scanf("%d",&iValue);
    Display(iValue);
    return 0;
}
******************************************************************************************Program 2:
/*Problem Statement: write a recursive program which Display below pattern.
Input:5
output: 1 2 3 4 5 */
#include<stdio.h>
void Display(int iNo)
{
    static int i=1;
    if(i<=iNo)
    {
        printf("%d\t",i);
        i++;
        Display(iNo);
    }
}
int main()
{
    int iValue=0;
    printf("Enter number:");
    scanf("%d",&iValue);
    Display(iValue);
    return 0;
}
******************************************************************************************program 3:
/*Problem Statement: write a recursive program which Display below pattern.
Input:5
output: 5 4 3 2 1 */
#include<stdio.h>
void Display(int iNo)
{
    static int i=0;
    if(i<iNo)
    {
        printf("%d\t",iNo);
        iNo--;
        Display(iNo);
    }
}
int main()
{
     int iValue=0;
    printf("Enter number:");
    scanf("%d",&iValue);
    Display(iValue);
    return 0;
}
******************************************************************************************Program 4:
/*Problem Statement: write a recursive program which Display below pattern.
Input:6
output: A B C D E F */
#include<stdio.h>
void Display(int iNo)
{
    static int i=1;
    static char ch='A';
		if(iNo>=i)
		{
          printf("%c \t",ch);
          ch++;
          iNo--;
          Display(iNo);
		}
}
int main()
{
     int iValue=0;
    printf("Enter number:");
    scanf("%d",&iValue);
    Display(iValue);
    return 0;
}
******************************************************************************************Program 5:
/*Problem Statement: write a recursive program which Display below pattern.
Input:6
output: a b c d e f */
#include<stdio.h>
void Display(int iNo)
{
    static int i=1;
    static char ch='a';
		if(iNo>=i)
		{
          printf("%c \t",ch);
          ch++;
iNo--;
          Display(iNo);
		}
}
 int main()
{
     int iValue=0;
    printf("Enter number:");
    scanf("%d",&iValue);
    Display(iValue);
    return 0;
}
*************************************************************************************************************************Assignment No:46********************************************
Program 1:
/*Problem Statement: write a recursive program which Display below pattern.
Input:5
output: 5 * 4 * 3 * 2 * 1 * */
#include<stdio.h>
void Display(int iNo)
{
     static int i=0;
    if(i<iNo)
    {
        printf("%d\t",iNo);
         printf("*\t");
        iNo--;
        Display(iNo);
    }
}
int main()
{
    int iValue=0;
    printf("Enter number:");
    scanf("%d",&iValue);
    Display(iValue);
    return 0;
}
******************************************************************************************Program 2:
/*Problem Statement: write a recursive program which accept number  from user and return summation of its digit.
Input:879
output: 24*/
#include<stdio.h>
int Sum(int iNo)
{
    int iAns;
    if(iNo==0)
    {
        return 0;
    }
    if(iNo!=0)
    {
        iAns=((iNo%10)+Sum(iNo/10));
    }
  return iAns;
}
int main()
{
    int iValue=0;
    int iRet=0;
    printf("Enter number:");
    scanf("%d",&iValue);
    iRet= Sum(iValue);
    printf("Sum of Digit:%d",iRet);
    return 0;
}
******************************************************************************************Program 3:
/*Problem Statement: write a recursive program which accept string from user and count number of characters.
Input:hello
output: 5  */
#include<stdio.h>
int Strlen(char *str)
{
    static int iCnt=0;
    if(*str!='\0')
    {
        iCnt++;
        str++;
        Strlen(str);
    }
    else
    {
        return iCnt;
    }
}
int main()
{
    int iRet=0;
    char arr[20];
    printf("Enter string:");
    scanf("%[^'\n']s",arr);
    iRet=Strlen(arr);
    printf("Count:%d",iRet);
    return 0;
}
******************************************************************************************Program 4:
/*Problem Statement: write a recursive program which accept number and return its factorial.
Input:5
output:120 */
#include<stdio.h>
int Fact(int iNo)
{
    int iAns=0;
    if(iNo>0)
    {
        iAns=iNo*Fact(iNo-1);
    }
    else
    {
        return 1;
    }
    return iAns;

}
int main()
{
    int iValue=0,iRet=0;
    printf("Enter number:");
    scanf("%d",&iValue);
    iRet=Fact(iValue);
    printf("Factorial:%d",iRet);
    return 0;
}
******************************************************************************************Program 5:
/*Problem Statement:write a program which accept number from user and return its product of digits.
Input:523
output: 30 */
#include<stdio.h>
int Multi(int iNo)
{
    int multi=1;
    if(iNo!=0)
    {
        multi=multi*iNo%10;
        multi=multi*Multi(iNo/10);
        return multi;
    }
    else
    {
        return 1;
    }
}
int main()
{
    int iValue=0,iRet=0;
    printf("Enter number :");
    scanf("%d",&iValue);
    iRet=Multi(iValue);
    printf("Product:%d",iRet);
    return 0;
}
**************************************************************************************************************************Assignment no  47*******************************************
Program 1:
/*Problem Statement: write a recursive program which accept string from user and count white spaces.
Input:HE llo WOr ID
output: 3*/
#include<stdio.h>
int WhiteSpace(char *str)
{
   static int iCnt=0;
    if(*str!='\0')
    {
        if(*str ==' ')
    {
      iCnt++;
    }
    str++;
  WhiteSpace(str);
    }
    return iCnt;
}
int main()
{
    char arr[20];
    int iRet=0;
    printf("Enter string:");
    scanf("%[^'\n']s",arr);
    iRet=WhiteSpace(arr);
    printf("Count :%d",iRet);
    return 0;
}
******************************************************************************************Program 2:
/*Problem Statement: write a recursive program which accept number  from user and return largest digit.
Input:874569
output:9*/
#include<stdio.h>
int Max(int iNo)
{
    int iAns1,iAns2;
    if(iNo==0)
    {
        return 0;
    }
    else
    {
        iAns1=iNo%10;
        iAns2=Max(iNo/10);
        if(iAns1>iAns2)
        {
            return iAns1;
        }
        else
        {
            return iAns2;
        }
    }
}
int main()
{
    int iValue=0;
    int iRet=0;
    printf("Enter number:");
    scanf("%d",&iValue);
    iRet= Max(iValue);
    printf("largest Digit:%d",iRet);
    return 0;
}
******************************************************************************************Program 3:
/*Problem Statement: write a recursive program which accept string from user and count number of small  characters.
Input:HelloWOrlD
output: 5  */
#include<stdio.h>
int Strlen(char *str)
{
   static int iCnt=0;
    if(*str!='\0')
    {
    if(*str >= 'a' && *str<='z')
    {
      iCnt++;
    }
    str++;
  Strlen(str);
    }
    return iCnt;
}
int main()
{
    int iRet=0;
    char arr[20];
    printf("Enter string:");
    scanf("%[^'\n']s",arr);
    iRet=Strlen(arr);
    printf("Count:%d",iRet);
    return 0;
}
******************************************************************************************Program 4:/*Problem Statement: write a recursive program which accept number  from user and return Smallest digit.
Input:874569
output:4*/
#include<stdio.h>
int Min(int iNo)
{
    int iAns1,iAns2;
    iAns1=iNo%10;
        while(iNo>0)
        {
            iAns2=iNo%10;
            if(iAns1>iAns2)
            {
                iAns1=iAns2;
            }
              iNo=Min(iNo/10);
        }
         return iAns1;
}
int main()
{
    int iValue=0;
    int iRet=0;
    printf("Enter number:");
    scanf("%d",&iValue);
    iRet= Min(iValue);
    printf("largest Digit:%d",iRet);
    return 0;
}
******************************************************************************************Program 5:
/*Problem Statement: write a recursive program which accept number from user and return its reverse nymber.
Input:1234
output:4321  */
#include<stdio.h>
int Reverse(int iNo)
{
    static int rev,rem=0;
    if(iNo)
    {
      rem=iNo%10;
      rev=rev*10+rem;
      Reverse(iNo/10);
    }
    return rev;
}
int main()
{
    int iValue=0;
    int iRet=0;
    printf("Enter number:");
    scanf("%d",&iValue);
    iRet=Reverse(iValue);
    printf("Reverse:%d",iRet);
    return 0;
}
***************************Assignment no: 50***************************************
/*Problem statement: write a program which accept information of students from user and write that information into the file*/
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<fcntl.h>
struct student
{
    int Rollno;
    char Name[20];
    int Marks;
};
void FileWrite(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0;
    struct student sobj;
    fd = open(name,O_WRONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }
    printf("Enter number of students");
    scanf("%d",&size);

    for(i = 1; i <= size; i++)
    {
        printf("Enter roll number\n");
        scanf("%d",&sobj.Rollno);
        printf("Enter Name of student\n");
        scanf(" %s",&sobj.Name);
        printf("Enter marks\n");
        scanf(" %d",&sobj.Marks);

        write(fd,&sobj,sizeof(sobj));
    }
    close(fd);
}
int main()
{
    char name[20];

    printf("Enter file name\n");
    scanf("%s",name);

   FileWrite(name);

    return 0;
}
**********************************************************************************programm2://problem statement: write a program which read all the information of students from the file
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<fcntl.h>
#include<string.h>
struct student
{
    int Rollno;
    char Name[20];
    int Marks;
};
void FileRead(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0;
    struct student sobj;

    fd = open(name,O_RDONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }

    printf("Data from file is : \n");
    printf("**********************************************\n");
    while((ret = read(fd,&sobj,sizeof(sobj)))!= 0)
    {
        printf("Roll number is : %d\n",sobj.Rollno);
        printf("Name of student : %s\n",sobj.Name);
        printf("Marks : %d\n",sobj.Marks);
        printf("**********************************************\n");
    }

    close(fd);
}
int main()
{
     char name[20];
    printf("Enter file name\n");
    scanf("%s",name);
   FileRead(name);

    return 0;;
}
**********************************************************************************
Program3://problem statement:write a program which accept file name which contains information of student and display only name of students.
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<fcntl.h>
struct student
{
    int Rollno;
    char Name[20];
    int Marks;
};
void FileWrite(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0;
    struct student sobj;
    fd = open(name,O_WRONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }
    printf("Enter number of students");
    scanf("%d",&size);

    for(i = 1; i <= size; i++)
    {
        printf("Enter roll number\n");
        scanf("%d",&sobj.Rollno);
        printf("Enter Name of student\n");
        scanf(" %s",&sobj.Name);
        printf("Enter marks\n");
        scanf(" %d",&sobj.Marks);

        write(fd,&sobj,sizeof(sobj));
    }
    close(fd);
}
void FileRead(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0;
    struct student sobj;

    fd = open(name,O_RDONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }

    printf("Data from file is : \n");
    printf("**********************************************\n");
    while((ret = read(fd,&sobj,sizeof(sobj)))!= 0)
    {
        printf("Name of student : %s\n",sobj.Name);
        printf("**********************************************\n");
    }

    close(fd);
}
int main()
{
    char name[20];

    printf("Enter file name\n");
    scanf("%s",name);

   FileWrite(name);
   FileRead(name);

    return 0;
}
**********************************************************************************
Program4://problem statement:write a program which accept file name which contains information of student and display only marks of students.
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<fcntl.h>
struct student
{
    int Rollno;
    char Name[20];
    int Marks;
};
void FileWrite(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0;
    struct student sobj;
    fd = open(name,O_WRONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }
    printf("Enter number of students");
    scanf("%d",&size);

    for(i = 1; i <= size; i++)
    {
        printf("Enter roll number\n");
        scanf(" %d",&sobj.Rollno);
        printf("Enter Name of student\n");
        scanf(" %s",&sobj.Name);
        printf("Enter marks\n");
        scanf(" %d",&sobj.Marks);

        write(fd,&sobj,sizeof(sobj));
    }
    close(fd);
}
void FileRead(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0;
    struct student sobj;

    fd = open(name,O_RDONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }

    printf("Data from file is : \n");
    printf("**********************************************\n");
    while((ret = read(fd,&sobj,sizeof(sobj)))!= 0)
    {
         printf("Marks : %d\n",sobj.Marks);
        printf("**********************************************\n");
    }

    close(fd);
}
int main()
{
    char name[20];

    printf("Enter file name\n");
    scanf("%s",name);

   FileWrite(name);
   FileRead(name);

    return 0;
}
**********************************************************************************
Program5://problem statement:write a program which accept file name which contains information of student and display addition of marks of all students.
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<fcntl.h>
struct student
{
    int Rollno;
    char Name[20];
    int Marks;
};
void FileWrite(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0;
    struct student sobj;
    fd = open(name,O_WRONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }
    printf("Enter number of students");
    scanf("%d",&size);

    for(i = 1; i <= size; i++)
    {
        printf("Enter roll number\n");
        scanf("%d",&sobj.Rollno);
        printf("Enter Name of student\n");
        scanf(" %s",&sobj.Name);
        printf("Enter marks\n");
        scanf(" %d",&sobj.Marks);

        write(fd,&sobj,sizeof(sobj));
    }
    close(fd);
}
void FileRead(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0,marks=0;
    struct student sobj;

    fd = open(name,O_RDONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }

    printf("Data from file is : \n");
    printf("**********************************************\n");
    while((ret = read(fd,&sobj,sizeof(sobj)))!= 0)
    {
        printf("Marks : %d\n",sobj.Marks);
         marks=marks+sobj.Marks;
    }
    printf("Marks total : %d\n",marks);
    printf("**********************************************\n");
    close(fd);
}
int main()
{
    char name[20];

    printf("Enter file name\n");
    scanf("%s",name);

   FileWrite(name);
   FileRead(name);

    return 0;
}
****************************Assignment no:51***************************************
Program3://Problem statement:write a program which accept file name which contains information of student and display all names of student having marks grater than 90.
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<fcntl.h>
#include<string.h>
struct student
{
    int Rollno;
    char Name[20];
    int Marks;
};
void FileWrite(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0;
    struct student sobj;
    fd = open(name,O_WRONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }
    printf("Enter number of students");
    scanf("%d",&size);

    for(i = 1; i <= size; i++)
    {
        printf("Enter roll number\n");
        scanf("%d",&sobj.Rollno);
        printf("Enter Name of student\n");
        scanf(" %s",&sobj.Name);
        printf("Enter marks\n");
        scanf(" %d",&sobj.Marks);

        write(fd,&sobj,sizeof(sobj));
    }
    close(fd);
}
void FileRead(char *name)
{
    int fd=0,ret=0,i=0;
    struct student sobj;
    int mark=0;
    fd=open(name,O_RDONLY);
    if(fd==-1)
    {
        printf("Unable to open file\n");
        return;
    }
    while((ret=read(fd,&sobj,sizeof(sobj)))!=0)
    {
      if(sobj.Marks>=90)
      {
          printf("Names of student having marks greater than 90 marks:%s\n",sobj.Name);
      }
    }
    close(fd);
}
int main()
{
     char name[20];
    printf("Enter file name\n");
    scanf("%s",name);
    FileWrite(name);
   FileRead(name);
    return 0;;
}
**********************************************************************************
Program5://Problem statement:write a program which accept file name which contains information of student and marks. display all student having  that marks.
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<fcntl.h>
struct student
{
    int Rollno;
    char Name[20];
    int Marks;
};
void FileWrite(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0;
    struct student sobj;
    fd = open(name,O_WRONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }
    printf("Enter number of students");
    scanf("%d",&size);

    for(i = 1; i <= size; i++)
    {
        printf("Enter roll number\n");
        scanf(" %d",&sobj.Rollno);
        printf("Enter Name of student\n");
        scanf(" %s",&sobj.Name);
        printf("Enter marks\n");
        scanf(" %d",&sobj.Marks);

        write(fd,&sobj,sizeof(sobj));
    }
    close(fd);
}
void FileRead(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0;
    struct student sobj;

    fd = open(name,O_RDONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }

    printf("Data from file is : \n");
    printf("**********************************************\n");
    while((ret = read(fd,&sobj,sizeof(sobj)))!= 0)
    {
        printf("Name of student : %s\n",sobj.Name);
        printf("Marks : %d\n",sobj.Marks);
        printf("**********************************************\n");
    }


    close(fd);
}
int main()
{
    char name[20];

    printf("Enter file name\n");
    scanf("%s",name);

   FileWrite(name);
   FileRead(name);

    return 0;
}
**********************************Assignment no 52********************************
Program 1://problem statement: write a program which accept file name which contains information of student and display the information of student having highest marks.
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<fcntl.h>
#include<string.h>
struct student
{
    int Rollno;
    char Name[20];
    int Marks;
};
void FileWrite(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0;
    struct student sobj;
    fd = open(name,O_WRONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }
    printf("Enter number of students");
    scanf("%d",&size);

    for(i = 1; i <= size; i++)
    {
        printf("Enter roll number\n");
        scanf("%d",&sobj.Rollno);
        printf("Enter Name of student\n");
        scanf(" %s",&sobj.Name);
        printf("Enter marks\n");
        scanf(" %d",&sobj.Marks);

        write(fd,&sobj,sizeof(sobj));
    }
    close(fd);
}
int FileRead(char *name)
{
    int fd=0,ret=0;
    struct student sobj;
    int mark=0;
    fd=open(name,O_RDONLY);
    if(fd==-1)
    {
        printf("Unable to open file\n");
        return -1;
    }
    while((ret=read(fd,&sobj,sizeof(sobj)))!=0)
    {
        printf("%d\t",sobj.Marks);
        if(mark<sobj.Marks)
        {
            mark=sobj.Marks;
        }
        mark=sobj.Marks;
    }
    close(fd);
    return mark;
}
int main()
{
     char name[20];
    printf("Enter file name\n");
    scanf("%s",name);
    FileWrite(name);
   int iRet=FileRead(name);
   printf("Highest Marks:%d",iRet);
    return 0;;
}
**********************************************************************************
Program 2://problem statement: write a program which accept file name which contains information of student and display the information of student having lowest marks.
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<fcntl.h>
#include<string.h>
struct student
{
    int Rollno;
    char Name[20];
    int Marks;
};
void FileWrite(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0;
    struct student sobj;
    fd = open(name,O_WRONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }
    printf("Enter number of students");
    scanf("%d",&size);

    for(i = 1; i <= size; i++)
    {
        printf("Enter roll number\n");
        scanf("%d",&sobj.Rollno);
        printf("Enter Name of student\n");
        scanf(" %s",&sobj.Name);
        printf("Enter marks\n");
        scanf(" %d",&sobj.Marks);

        write(fd,&sobj,sizeof(sobj));
    }
    close(fd);
}
int FileRead(char *name)
{
    int fd=0,ret=0;
    struct student sobj;
    int mark=0;
    fd=open(name,O_RDONLY);
    if(fd==-1)
    {
        printf("Unable to open file\n");
        return -1;
    }
    while((ret=read(fd,&sobj,sizeof(sobj)))!=0)
    {
        printf("%d\t",sobj.Marks);
        if(mark==0)
        {
            mark=sobj.Marks;
        }
        if(mark>sobj.Marks)
        {
            mark=sobj.Marks;
        }
    }
    close(fd);
    return mark;
}
int main()
{
     char name[20];
    printf("Enter file name\n");
    scanf("%s",name);
    FileWrite(name);
   int iRet=FileRead(name);
   printf("Lowest Marks:%d",iRet);
    return 0;;
}
**********************************************************************************
Program 3://problem statement: write a program which accept file name which contains information of student and display the average marks of students.
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<fcntl.h>
#include<string.h>
struct student
{
    int Rollno;
    char Name[20];
    int Marks;
};
void FileWrite(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0;
    struct student sobj;
    fd = open(name,O_WRONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }
    printf("Enter number of students");
    scanf("%d",&size);

    for(i = 1; i <= size; i++)
    {
        printf("Enter roll number\n");
        scanf("%d",&sobj.Rollno);
        printf("Enter Name of student\n");
        scanf(" %s",&sobj.Name);
        printf("Enter marks\n");
        scanf(" %d",&sobj.Marks);

        write(fd,&sobj,sizeof(sobj));
    }
    close(fd);
}
int FileRead(char *name)
{
    int fd=0,ret=0,i=0;
    struct student sobj;
    int mark=0;
    fd=open(name,O_RDONLY);
    if(fd==-1)
    {
        printf("Unable to open file\n");
        return -1;
    }
    while((ret=read(fd,&sobj,sizeof(sobj)))!=0)
    {
        printf("%d\t",sobj.Marks);
       mark=mark+sobj.Marks;
       i++;
    }
    close(fd);
    mark=mark/i;
    return mark;
}
int main()
{
     char name[20];
    printf("Enter file name\n");
    scanf("%s",name);
    FileWrite(name);
   int iRet=FileRead(name);
   printf("Average Marks:%d",iRet);
    return 0;;
}
**********************************************************************************
Program 4:/*problem statement: write a program which accept file name which contains information of student and display the
 information based on the class (first class 60 to 100,second class 50 to 60 ,pass class 0 to 50)*/
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<fcntl.h>
#include<string.h>
struct student
{
    int Rollno;
    char Name[20];
    int Marks;
};
void FileWrite(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0;
    struct student sobj;
    fd = open(name,O_WRONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }
    printf("Enter number of students");
    scanf("%d",&size);

    for(i = 1; i <= size; i++)
    {
        printf("Enter roll number\n");
        scanf("%d",&sobj.Rollno);
        printf("Enter Name of student\n");
        scanf(" %s",&sobj.Name);
        printf("Enter marks\n");
        scanf(" %d",&sobj.Marks);

        write(fd,&sobj,sizeof(sobj));
    }
    close(fd);
}
void FileRead(char *name)
{
    int fd=0,ret=0,i=0;
    struct student sobj;
    int mark=0;
    fd=open(name,O_RDONLY);
    if(fd==-1)
    {
        printf("Unable to open file\n");
        return;
    }
    while((ret=read(fd,&sobj,sizeof(sobj)))!=0)
    {
        printf("%d\t",sobj.Marks);
      if(sobj.Marks>=60&&sobj.Marks<=100)
      {
          printf("First class\n");
      }
      else if(sobj.Marks>=50&&sobj.Marks<60)
      {
          printf("second class\n");
      }
      else
      {
          printf("pass\n");
      }
    }
    close(fd);
}
int main()
{
     char name[20];
    printf("Enter file name\n");
    scanf("%s",name);
    FileWrite(name);
   FileRead(name);
    return 0;;
}
**********************************************************************************
Program 5://problem statement:write a program which accept file name which contain information of student and display the student names having even number of marks.
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<fcntl.h>
#include<string.h>
struct student
{
    int Rollno;
    char Name[20];
    int Marks;
};
void FileWrite(char *name)
{
    int fd = 0, ret = 0, size = 0, i = 0;
    struct student sobj;
    fd = open(name,O_WRONLY);
    if(fd == -1)
    {
        printf("Unable to open file\n");
        return ;
    }
    printf("Enter number of students");
    scanf("%d",&size);

    for(i = 1; i <= size; i++)
    {
        printf("Enter roll number\n");
        scanf("%d",&sobj.Rollno);
        printf("Enter Name of student\n");
        scanf(" %s",&sobj.Name);
        printf("Enter marks\n");
        scanf(" %d",&sobj.Marks);

        write(fd,&sobj,sizeof(sobj));
    }
    close(fd);
}
void FileRead(char *name)
{
    int fd=0,ret=0,i=0;
    struct student sobj;
    int mark=0;
    fd=open(name,O_RDONLY);
    if(fd==-1)
    {
        printf("Unable to open file\n");
        return;
    }
    while((ret=read(fd,&sobj,sizeof(sobj)))!=0)
    {

      if(sobj.Marks%2==0)
      {
          printf("student name:%s\n",sobj.Name);
      }
    }
    close(fd);
}
int main()
{
     char name[20];
    printf("Enter file name\n");
    scanf("%s",name);
    FileWrite(name);
   FileRead(name);
    return 0;;
}
**********************************************************************************

*********************************Assignment 53*********************************************
********************************************************************************************
/*1. Write Java program which accept N numbers from user and return difference between summation of even
elements and summation of odd elements.

Input :  N :   6
Elements : 85 66 3 80 93 88
Output : 53 (234 - 181)

*/
import java.lang.*;
import java.util.*;

class EvenSum
{
    int add(int size,int arr[])
    {
        int iAns1=0;
        int i=0;
        int iAns2=0;
        int iAns3=0;
        for(i=0;i<arr.length;i++)
        {
            if(arr[i]%2==0)
            {
                iAns1=iAns1+arr[i];
            }
            else
            {
               iAns2=iAns2+arr[i];
            }
        }
        iAns3=iAns1-iAns2;
        System.out.print("Your value" + iAns3);
        return iAns3;
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the number");
        int size=sobj.nextInt();

        int arr[] = new int[size];  //malloc

        System.out.println("Enter elements");
        for(int i = 0; i < arr.length; i++)
        {
            arr[i] = sobj.nextInt();
        }

        EvenSum Eobj=new EvenSum();
        int iRet=Eobj.add(size,arr);
        System.out.println("Your Summation is:" + iRet);
    }
}
*******************************************************************************************
/*2. Write Java program which accept N numbers from user and display all such elements which are divisible by 5.
Input :  N :   6
  Elements : 85 66 3 80 93 88
Output : 85 80*/
import java.lang.*;
import java.util.*;
class Displayn
{
    void Div(int size,int arr[])
    {
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i]%5==0)
            {
                System.out.println(" " + arr[i]);
            }
        }
    }
}
class demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the size:");
        int size=sobj.nextInt();

        int arr[] = new int[size];

        System.out.println("Enter the element:");
        for(int i=0;i<arr.length;i++)
        {
            arr[i] = sobj.nextInt();
        }

        Displayn dobj=new Displayn();

         dobj.Div(size,arr);
    }

}
****************************************************************************************
/*3. Write Java program which accept N numbers from user and display all such elements which are even and divisible by 5.
* Input :  N :   6
  Elements : 85 66 3 80 93 88
Output : 80
*
 */

import java.lang.*;
import java.util.*;

class DemoArray
{
     void Divisible(int size,int arr[])
     {
         for(int i=0;i<arr.length;i++)
         {
             if(arr[i]%2==0&&arr[i]%5==0)
             {
                 System.out.print(" " + arr[i]);
             }
         }
     }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the number:");
        int size=sobj.nextInt();

        int arr[]=new int[size];
        System.out.println("Enter the element");
        for(int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }
        DemoArray dobj=new DemoArray();
        dobj.Divisible(size,arr);
    }
}
********************************************************************************
/*4. Write Java program which accept N numbers from user and display all such elements which are divisible by 3 and 5.
Input :  N :   6
Elements : 85 66 3 15 93 88
Output : 15
*
 */
import com.sun.deploy.util.SyncAccess;

import java.lang.*;
import java.util.*;

class DemoArray
{
    void Divisible(int arr[])
    {
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i]%3==0&&arr[i]%5==0)
            {
                System.out.println(" " + arr[i]);
            }
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the number:");
        int size=sobj.nextInt();

        int arr[]=new int[size];
        System.out.println("Enter the Element:");
        for(int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }

        DemoArray dobj=new DemoArray();
        dobj.Divisible(arr);

    }
}
***************************************************************************************
/*5. Write Java program which accept N numbers from user and display all such elements which are multiples of 11.
Input :  N :   6
Elements : 85 66 3 55 93 88
Output : 66 55 88
*
 */
import com.sun.deploy.util.SyncAccess;

import java.lang.*;
import java.util.*;

class DemoArray
{
    void Divisible(int arr[])
    {
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i]%11==0)
            {
                System.out.println(" " + arr[i]);
            }
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the number:");
        int size=sobj.nextInt();

        int arr[]=new int[size];
        System.out.println("Enter the Element:");
        for(int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }

        DemoArray dobj=new DemoArray();
        dobj.Divisible(arr);

    }
}
*****************************************************************************************
****************************************Assignment 54**********************************
/*1.Write a java program which accept number from user and return the count of even digits.
Input :  2395  Output : 1
Input :  1018 Output :  2
Input :  -1018 Output : 2
Input :  8462 Output :  4
 */
import java.lang.*;
import java.util.*;

class Number
{
    int EvenCount(int iNo)
    {
        if(iNo<0)
        {
            iNo=-iNo;
        }
        int iCount=0;
        int iDigit=0;
        while (iNo!=0)
        {
            iDigit=iNo%10;
            if(iDigit%2==0)
            {
                iCount++;
            }
            iNo=iNo/10;
        }
        return iCount;
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the number:");
        int iValue=sobj.nextInt();

        Number nobj=new Number();
       int iRet=nobj.EvenCount(iValue);
       System.out.println("Your Count of even digit is: " + iRet);
    }
}
**************************************************************************************
/*2.Write a program which accept number from user and return the count of odd digits.
Input :  2395  Output :  3
Input :  1018 Output :  2
Input :  -1018 Output :  2
Input :  8462 Output :  0
 */
import java.lang.*;
import java.util.*;

class Number
{
    int OddCount(int iNo)
    {
        if(iNo<0)
        {
            iNo=-iNo;
        }
        int iCount=0;
        int iDigit=0;
        while (iNo!=0)
        {
            iDigit=iNo%10;
            if(iDigit%2!=0)
            {
                iCount++;
            }
            iNo=iNo/10;
        }
        return iCount;
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the number:");
        int iValue=sobj.nextInt();

        Number nobj=new Number();
       int iRet=nobj.OddCount(iValue);
       System.out.println("Your Count of digit is: " + iRet);
    }
}
*****************************************************************************************
/*3.Write a program which accept number from user and return the count of digits in between 3 and 7.
Input :  2395  Output :  1
Input :  1018 Output :  0
Input :  4521 Output :  2
Input :  9922 Output :  0
 */
import java.lang.*;
import java.util.*;

class Number
{
    int Count(int iNo)
    {
        if(iNo<0)
        {
            iNo=-iNo;
        }
        int iCount=0;
        int iDigit=0;
        while (iNo!=0)
        {
            iDigit=iNo%10;
            if(iDigit>3&&iDigit<7)
            {
                iCount++;
            }
            iNo=iNo/10;
        }
        return iCount;
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the number:");
        int iValue=sobj.nextInt();

        Number nobj=new Number();
       int iRet=nobj.Count(iValue);
       System.out.println("Your Count of digit is: " + iRet);
    }
}
******************************************************************************
/*4.Write a program which accept number from user and return multiplication of all digits.
Input :  2395  Output :  270
Input :  1018 Output :  8
Input :  9440 Output :  144
Input :  922432 Output :  864
 */
import java.lang.*;
import java.util.*;

class Number
{
    int Count(int iNo)
    {
        if(iNo<0)
        {
            iNo=-iNo;
        }
        int iMult=1;
        int iDigit=0;
        while (iNo!=0)
        {
            iDigit=iNo%10;
            if(iDigit!=0)
            {
                iMult=iMult*iDigit;
            }
            iNo=iNo/10;
        }
        return iMult;
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the number:");
        int iValue=sobj.nextInt();

        Number nobj=new Number();
       int iRet=nobj.Count(iValue);
       System.out.println("Your Count of even digit is: " + iRet);
    }
}
******************************************************************************************
/*5.Write a program which accept number from user and return difference between summation of even digits and
 summation of odd digits.
Input :  2395  Output :  -15 (2 - 17)
Input :  1018 Output :  6 (8 - 2)
Input :  8440 Output :  16  (16 - 0)
Input :  5733 Output :  -18 (0 - 18)
 */
import java.lang.*;
import java.util.*;

class Number
{
    int Count(int iNo)
    {
        if(iNo<0)
        {
            iNo=-iNo;
        }
        int iMult1=1;
        int iMult2=1;
        int iDigit=0;
        while (iNo!=0)
        {
            iDigit=iNo%10;
            if(iDigit%2==0)
            {
                iMult1=iMult1+iDigit;
            }
            else
            {
                iMult2=iMult2+iDigit;
            }
            iNo=iNo/10;
        }
        return(iMult1-iMult2);
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the number:");
        int iValue=sobj.nextInt();

        Number nobj=new Number();
       int iRet=nobj.Count(iValue);
       System.out.println("Your Count of even digit is: " + iRet);
    }
}
****************************************************************************************
****************************Assignment 55********************************************
/*1. Write java program which accept N numbers from user and accept one another number as NO , check whether NO is present or not.
Input :  N :   6
  NO:  66
  Elements : 85 66 3 66 93 88
Output : TRUE
Input :  N :   6
  NO:  12
  Elements : 85 11 3 15 11 111
Output : FALSE
 */

import java.lang.*;
import java.util.*;
class DemoArray
{
    Boolean Chech(int arr[],int iNo)
    {
        int iCount=0;
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i]==iNo)
            {
                iCount++;
                break;
            }
        }
        if(iCount==1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {
         Boolean ret=false;
         Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the size");
        int size=sobj.nextInt();

        System.out.println("Enter element");

        int arr[]=new int[size];

        for (int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }

        System.out.println("Enter the one number to find");
        int iValue=sobj.nextInt();

        DemoArray dobj=new DemoArray();

        ret=dobj.Chech(arr,iValue);

        if(ret==true)
        {
            System.out.println("number is present");
        }
        else
        {
            System.out.println("Number is not present");
        }
    }
}
*************************************************************************************
/*2. Write java program which accept N numbers from user and accept one another number as NO ,
return index of first occurrence of that NO.
Input :  N :   6
 NO:  66
 Elements : 85 66 3 66 93 88
Output : 1


Input :  N :   6
NO:  12
Elements : 85 11 3 15 11 111
Output : -1
 */
import java.lang.*;
import java.util.*;
class DemoArray
{
    int Chech(int arr[],int iNo)
    {
        int iCount=0;
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i]==iNo)
            {
                iCount++;
                break;
            }
            iCount++;
        }
        if(iCount!=0)
        {
            return iCount-1;
        }
        else
        {
            return -1;
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

         Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the size");
        int size=sobj.nextInt();

        System.out.println("Enter element");

        int arr[]=new int[size];

        for (int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }

        System.out.println("Enter the one number to find");
        int iValue=sobj.nextInt();

        DemoArray dobj=new DemoArray();

        int ret=dobj.Chech(arr,iValue);
        System.out.println("Your Number first occurence index is:" + ret);

    }
}
*****************************************************************************************
/*3. Write java program which accept N numbers from user and accept one another number as NO , return index of last occurrence of that NO.
Input :  N :   6
NO:  66
Elements : 85 66 3 66 93 88
Output : 3


Input :  N :   6
NO:  93
Elements : 85 66 3 66 93 88
Output : 4


Input :  N :   6
NO:  12
Elements : 85 11 3 15 11 111
Output : -1

 */
import java.lang.*;
import java.util.*;
class DemoArray
{
    int Check(int arr[],int iNo)
    {
        int iCount=0;
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i]==iNo)
            {
                if(iCount<i)
                {
                    iCount=i;
                }
            }
        }
        if(iCount!=0)
        {
            return iCount;
        }
        else
        {
            return -1;
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

         Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the size");
        int size=sobj.nextInt();

        System.out.println("Enter element");

        int arr[]=new int[size];

        for (int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }

        System.out.println("Enter the one number to find");
        int iValue=sobj.nextInt();

        DemoArray dobj=new DemoArray();

        int ret=dobj.Check(arr,iValue);
        System.out.println("Your number last occurence index is:" + ret);

    }
}
*************************************************************************************
/*4. Write java program which accept N numbers from user and accept Range, Display all elements from that range
Input :  N :   6
  Start: 60     End :  90     Elements : 85 66 3 76 93 88
Output :85 66 76 88
Input :  N :   6
  Start: 30     End :  50     Elements : 85 66 3 76 93 88
Output :

 */
import java.lang.*;
import java.util.*;
class DemoArray
{
    void Check(int arr[],int iStart,int iEnd)
    {
        int iCount=0;
        for(int i=0;i<arr.length;i++)
        {
           if(arr[i]>iStart&&iEnd>arr[i])
           {
               System.out.println(" " + arr[i]);
           }
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

         Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the size");
        int size=sobj.nextInt();

        System.out.println("Enter element");

        int arr[]=new int[size];

        for (int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }

        System.out.println("Enter the Start number");
        int iValue=sobj.nextInt();

        System.out.println("Enter the End number");
        int iValue2=sobj.nextInt();

        DemoArray dobj=new DemoArray();

        dobj.Check(arr,iValue,iValue2);
    }
}
*************************************************************************************
/*5. Write java program which accept N numbers from user and return product of all odd elements.
Input :  N :   6     Elements : 15 66 3 70 10 88
Output : 45
Input :  N :   6     Elements : 44 66 72 70 10 88
Output : 0

 */

import java.lang.*;
import java.util.*;
class DemoArray
{
    int Check(int arr[])
    {
        int iCount=0;
        int iMult=1;
        for(int i=0;i<arr.length;i++)
        {
           if(arr[i]%2!=0)
           {
               iMult=iMult*arr[i];
           }
        }
        return iMult;
    }
}
class Demo
{
    public static void main(String arg[])
    {

         Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the size");
        int size=sobj.nextInt();

        System.out.println("Enter element");

        int arr[]=new int[size];

        for (int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }

        DemoArray dobj=new DemoArray();

        int ret=dobj.Check(arr);
        System.out.println("Your Product is " + ret);
    }
}
********************************************************************************
***********************Assingment 56*****************************************
/*1.Write a Java program which accept string from user and count number of capital characters.
Input :   “Marvellous Multi OS”
Output :   4

 */
import java.lang.*;
import java.util.*;
class DemoString
{
    int Count(String str)
    {
        char arr[] = str.toCharArray();
        int size=arr.length;
        int i=0;
        int iCount=0;
        while(i<size)
        {
            if(arr[i]>='A'&&arr[i]<='Z')
            {
                iCount++;
            }
            i++;
        }
        return iCount;
    }
}
class Demo
{
    public static void main(String arg[])
    {

         Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the string");
        String str=sobj.nextLine();

        DemoString dobj=new DemoString();

        int ret=dobj.Count(str);
        System.out.println("Capital letter is: " + ret);
    }
}
***************************************************************************************
/*
 2. Write a java  program which accept string from user and count number of small characters.
Input :   “Marvellous”
Output :   9

 */
import java.lang.*;
import java.util.*;
class DemoString
{
    int Count(String str)
    {
        char arr[] = str.toCharArray();
        int size=arr.length;
        int i=0;
        int iCount=0;
        while(i<size)
        {
            if(arr[i]>='a'&&arr[i]<='z')
            {
                iCount++;
            }
            i++;
        }
        return iCount;
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the string");
        String str=sobj.nextLine();

        DemoString dobj=new DemoString();

        int ret=dobj.Count(str);
        System.out.println("Small letter is: " + ret);
    }
}
**********************************************************************************
/*
3. Write a java program which accept string from user and return difference between
frequency of small characters and frequency of capital characters.

Input :   “MarvellouS”
Output :   6 (8-2)
 */
import java.lang.*;
import java.util.*;
class DemoString
{
    int Count(String str)
    {
        char arr[] = str.toCharArray();
        int size=arr.length;
        int i=0;
        int iCount1=0;
        int iCount2=0;
        while(i<size)
        {
            if(arr[i]>='a'&&arr[i]<='z')
            {
                iCount1++;
            }
            else
            {
                iCount2++;
            }
            i++;
        }
        return (iCount1-iCount2);
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the string");
        String str=sobj.nextLine();

        DemoString dobj=new DemoString();

        int ret=dobj.Count(str);
        System.out.println("Capital and Small letter difference is: " + ret);
    }
}
**************************************************************************************
/*
4. Write a java program which accept string from user and check whether it contains vowels in it or not.
Input :   “marvellous”
Output :   TRUE
Input :   “Demo”
Output :   TRUE
Input :   “xyz”
Output :   FALSE
 */
import java.lang.*;
import java.util.*;
class DemoString
{
    Boolean Count(String str)
    {
        char arr[] = str.toCharArray();
        int size=arr.length;
        int i=0,j=0;
        int iCount1=0;
        int iCount2=0;
        while(i<size)
        {
            if(arr[i]=='a'||arr[i]=='e'||arr[i]=='i'||arr[i]=='o'||arr[i]=='u'||arr[i]=='A'||arr[i]=='E'||arr[i]=='I'||arr[i]=='O'||arr[i]=='U')
            {
                j++;
                break;
            }
            i++;
        }
        if(j==1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the string");
        String str=sobj.nextLine();

        DemoString dobj=new DemoString();

        Boolean ret=dobj.Count(str);
        if(ret==true)
        {
            System.out.println("Vowel present");
        }
        else
        {
            System.out.println("Not present vowel");
        }
    }
}
************************************************************************************
/*
5. Write a java program which accept string from user and display it in reverse order.
Input :   “MarvellouS”
Output :   “SuollevraM”
 */
import java.lang.*;
import java.util.*;
class DemoString
{
    void Pattern(String str)
    {
      char arr1[]=str.toCharArray();
      String RevStr="";
      int i=str.length()-1;
      while (i>=0)   
      {
          RevStr=RevStr+ str.charAt(i);
          i--;
      }
      System.out.println("Your Reserse string is:" + RevStr);
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the first String:");
        String str1=sobj.next();

        DemoString dobj=new DemoString();

         dobj.Pattern(str1);
    }
}
*****************************************************************************************
*****************************Assignment 57*********************************************
/*
1. Write Java program which accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 4
Output : A B C D
         A B C D
         A B C D
         A B C D
 */
import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(int No1,int No2)
    {
        char ch='A';
        for (int i=0;i<No1;i++)
        {
            for(int j=0;j<No2;j++)
            {
                System.out.print("\t" + ch);
                ch++;
            }
            ch='A';
            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Coloumn:");
        int No1=sobj.nextInt();

        System.out.println("Enter second row:");
        int No2=sobj.nextInt();

        DemoString dobj=new DemoString();

         dobj.Pattern(No1,No2);
    }
}
************************************************************************************

/*
2. Write Java program which accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 4
Output : A B C D
         a b c d
         A B C D
         a b c d
 */
import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(int No1,int No2)
    {
        char ch1='A';
        char ch2='a';
        for (int i=0;i<No1;i++)
        {
            for(int j=0;j<No2;j++)
            {
                if(i%2==0)
                {
                    System.out.print("\t" + ch1);
                    ch1++;
                }
                else
                {
                    System.out.print("\t" + ch2);
                    ch2++;
                }

            }
            ch1='A';
            ch2='a';
            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Coloumn:");
        int No1=sobj.nextInt();

        System.out.println("Enter second row:");
        int No2=sobj.nextInt();

        DemoString dobj=new DemoString();

         dobj.Pattern(No1,No2);
    }
}
***************************************************************************************
/*
3. Write Java program which accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 3  iCol = 5
Output : A A A A A
         B B B B B
         C C C C C
 */
import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(int No1,int No2)
    {
        char ch1='A';
        for (int i=0;i<No1;i++)
        {
            for(int j=0;j<No2;j++)
            {
                    System.out.print("\t" + ch1);
            }
            ch1++;
            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Coloumn:");
        int No1=sobj.nextInt();

        System.out.println("Enter second row:");
        int No2=sobj.nextInt();

        DemoString dobj=new DemoString();

         dobj.Pattern(No1,No2);
    }
}
*************************************************************************************
/*
4. Write Java program which accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 5
Output : 4 4 4 4 4
         3 3 3 3 3
         2 2 2 2 2
         1 1 1 1 1
 */
import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(int No1,int No2)
    {
        for (int i=0;i<No1;No1--)
        {
            for(int j=0;j<No2;j++)
            {
                    System.out.print("\t" + No1);
            }
            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Coloumn:");
        int No1=sobj.nextInt();

        System.out.println("Enter second row:");
        int No2=sobj.nextInt();

        DemoString dobj=new DemoString();

         dobj.Pattern(No1,No2);
    }
}
*****************************************************************************************
/*
5. Write Java program which accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 3  iCol =  4
Output : 1 2 3 4
         5 6 7 8
         9 10 11 12
 */
import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(int No1,int No2)
    {
        int k=1;
        for (int i=0;i<No1;i++)
        {
            for(int j=0;j<No2;j++)
            {
                    System.out.print("\t" + k);
                    k++;
            }
            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Coloumn:");
        int No1=sobj.nextInt();

        System.out.println("Enter second row:");
        int No2=sobj.nextInt();

        DemoString dobj=new DemoString();

         dobj.Pattern(No1,No2);
    }
}
******************************************************************************************
***************************************Assignment 58*************************************
/*
1. Write Java program which accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 3
Output : * * *
         * * *
         * * *
         * * *
 */
import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(int No1,int No2)
    {
        for (int i=0;i<No1;i++)
        {
            for(int j=0;j<No2;j++)
            {
                    System.out.print("*\t");
            }
            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Coloumn:");
        int No1=sobj.nextInt();

        System.out.println("Enter second row:");
        int No2=sobj.nextInt();

        DemoString dobj=new DemoString();

         dobj.Pattern(No1,No2);
    }
}
******************************************************************************************
/*
2. Write Java program which accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 3
Output : 1 2 3
         1 2 3
         1 2 3
         1 2 3
 */
import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(int No1,int No2)
    {
        for (int i=0;i<No1;i++)
        {
            for(int j=1;j<=No2;j++)
            {
                    System.out.print("\t" + j);
            }
            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Coloumn:");
        int No1=sobj.nextInt();

        System.out.println("Enter second row:");
        int No2=sobj.nextInt();

        DemoString dobj=new DemoString();

         dobj.Pattern(No1,No2);
    }
}
*****************************************************************************************
/*
3. Write Java program which accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 3  iCol = 5
Output : 5 4 3 2 1
         5 4 3 2 1
         5 4 3 2 1
 */
import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(int No1,int No2)
    {
        int Copy=No2;
        for (int i=0;i<No1;i++)
        {
            for(int j=1;j<=No2;No2--)
            {
                    System.out.print("\t" + No2);
            }
            No2=Copy;
            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Coloumn:");
        int No1=sobj.nextInt();

        System.out.println("Enter second row:");
        int No2=sobj.nextInt();

        DemoString dobj=new DemoString();

         dobj.Pattern(No1,No2);
    }
}
***************************************************************************************
/*
4. Write Java program which accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 3  iCol = 4
Output : * # * #
         * # * #
         * # * #
 */
import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(int No1,int No2)
    {
        for (int i=0;i<No1;i++)
        {
            for(int j=1;j<=No2;j++)
            {
                if(j%2==0)
                {
                    System.out.print("#\t");
                }
                else
                {
                    System.out.print("*\t");
                }

            }
            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Coloumn:");
        int No1=sobj.nextInt();

        System.out.println("Enter second row:");
        int No2=sobj.nextInt();

        DemoString dobj=new DemoString();

         dobj.Pattern(No1,No2);
    }
}
*******************************************************************************************
/*
5. Write Java program which accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4 iCol =  4
Output : 1 1 1 1
         2 2 2 2
         3 3 3 3
         4 4 4 4
 */
import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(int No1,int No2)
    {
        for (int i=1;i<=No1;i++)
        {
            for(int j=1;j<=No2;j++)
            {
                    System.out.print("\t" +i);
            }
            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Coloumn:");
        int No1=sobj.nextInt();

        System.out.println("Enter second row:");
        int No2=sobj.nextInt();

        DemoString dobj=new DemoString();

         dobj.Pattern(No1,No2);
    }
}
**********************************************************************************
************************************Assingment 59*********************************
/*
1. Write Java program which accept String from user and display below pattern.
Input :  Hello
Output : H e l l o
         H e l l o
         H e l l o
         H e l l o
 */
import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(String str)
    {
      char arr[]=str.toCharArray();
      int size=arr.length;

        for (int i=0;i<size;i++)
        {
            for(int j=0;j<size;j++)
            {
                System.out.print("\t" + arr[j]);
            }
            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the String:");
        String str=sobj.nextLine();

        DemoString dobj=new DemoString();

         dobj.Pattern(str);
    }
}
***************************************************************************************
/*
2. Write Java program which accept String from user and display below pattern.
Input :  Hello
Output : H e l l o
         H e l l
         H e l
         H e
         H
 */
import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(String str)
    {
      char arr[]=str.toCharArray();
      int size=arr.length;

        for (int i=0;i<size; size--)
        {
            for(int j=0;j<size;j++)
            {
                System.out.print("\t" + arr[j]);
            }

            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the String:");
        String str=sobj.nextLine();

        DemoString dobj=new DemoString();

         dobj.Pattern(str);
    }
}
****************************************************************************************
/*
3. Write Java program which accept String from user and display below pattern.
Input :  Hello
Output : H
         H e
         H e l
         H e l l
         H e l l o
 */
import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(String str)
    {
      char arr[]=str.toCharArray();
      int size=arr.length;

        for (int i=0;i<=size;i++)
        {
            for(int j=0;j<size;j++)
            {
                if(i>j)
                {
                    System.out.print("\t" + arr[j]);
                }
            }

            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the String:");
        String str=sobj.nextLine();

        DemoString dobj=new DemoString();

         dobj.Pattern(str);
    }
}
****************************************************************************************
/*
4. Write Java program which accept String from user and display below pattern.
Input :  Hello
Output : H e l l o
         H e l l
         H e l
         H e
         H
         H e
         H e l
         H e l l
         H e l l 0
 */
import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(String str)
    {
      char arr[]=str.toCharArray();
      int size=arr.length;
      int temp=size;
        for (int i=0;i<size; size--)
        {
            for(int j=0;j<size;j++)
            {
                System.out.print("\t" + arr[j]);
            }

            System.out.print("\n");
        }
        for (int i=2;i<=temp;i++)
        {
            for(int j=0;j<=temp;j++)
            {
                if(i>j)
                {
                    System.out.print("\t" + arr[j]);
                }
            }

            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the String:");
        String str=sobj.nextLine();

        DemoString dobj=new DemoString();

         dobj.Pattern(str);
    }
}
**************************************************************************************
/*
5. Write Java program which accept String from user and display below pattern.
Input :  Hello
Output : H
         H e
         H e l
         H e l l
         H e l l o
         H e l l
         H e l
         H e l
         H e
         H
 */
import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(String str)
    {
      char arr[]=str.toCharArray();
      int size=arr.length;
      int temp=size;
        for (int i=2;i<=temp;i++)
        {
            for(int j=0;j<=temp;j++)
            {
                if(i>j)
                {
                    System.out.print("\t" + arr[j]);
                }
            }

            System.out.print("\n");
        }
        size--;
        for (int i=0;i<size; size--)
        {
            for(int j=0;j<size;j++)
            {
                System.out.print("\t" + arr[j]);
            }

            System.out.print("\n");
        }

    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the String:");
        String str=sobj.nextLine();

        DemoString dobj=new DemoString();

         dobj.Pattern(str);
    }
}
****************************************************************************************
*********************************Assignment 60****************************************
/*
1. Write a java program which accepts 2 strings from user and concat N characters of second string after first string.Value of N should be accepted from user. Note : If third parameter is greater than the size of second string then concat whole string after first string.
Input :
“Marvellous Infosystems”
“Logic Building”
5
Output :  “Marvellous Infosystems Logic”
 */
import java.lang.*;
import java.util.*;
class DemoString
{
    void Pattern(String str1,String str2,int iNo)
    {
        char arr1[]=str1.toCharArray();
        char arr2[]=str2.toCharArray();

       String ConStr="";
       ConStr=str1;
       int i=0;

       while (iNo>0)
       {
          ConStr=(ConStr)+ str2.charAt(i);
          i++;
          iNo--;
      }
      System.out.println("Your Reserse string is:" + ConStr);
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the first String:");
        String str1=sobj.nextLine();

        System.out.println("Enter the Secound String:");
        String str2=sobj.nextLine();

        System.out.println("Enter the Number:");
        int iNo=sobj.nextInt();

        DemoString dobj=new DemoString();
        dobj.Pattern(str1,str2,iNo);

    }
}
*******************************************************************************************
/*
2.  Write a program which 2 strings from user and check whether contents of two strings are equal or not.
Input :   “Marvellous Infosystems”
          “Marvellous Infosystems”
Output :  TRUE
 */
import java.lang.*;
import java.util.*;
class DemoString
{
    boolean Pattern(String str1,String str2)
    {
        if(str1.equals(str2))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        Boolean ret=false;
        System.out.println("Enter the first String:");
        String str1=sobj.nextLine();

        System.out.println("Enter the Secound String:");
        String str2=sobj.nextLine();

        DemoString dobj=new DemoString();
        ret= dobj.Pattern(str1,str2);
        if(ret==true)
        {
            System.out.println("String is Equal");
        }
        else
        {
            System.out.println("String is not Equal");
        }
    }
}
*****************************************************************************************
/*
3. Write a program which 2 strings from user and check whether first N contents of two strings are equal or not. Note : If third parameter is greater than the size of second string then concat whole string after first string.
Input :   “Marvellous Infosystems”
          “Marvellous Logic Building”
           10
Output :  TRUE
 */
import java.lang.*;
import java.util.*;
class DemoString
{
    boolean Pattern(String str1,String str2,int no)
    {
        int i=0;
        int Copy=no;
        while (no!=0)
        {
            if((str1.charAt(i))==(str2.charAt(i)))
            {
                i++;
            }
            no--;
        }
        if(Copy==i)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        Boolean ret=false;
        System.out.println("Enter the first String:");
        String str1=sobj.nextLine();

        System.out.println("Enter the Secound String:");
        String str2=sobj.nextLine();

        System.out.println("Enter the one number");
        int no=sobj.nextInt();

        DemoString dobj=new DemoString();
        ret= dobj.Pattern(str1,str2,no);
        if(ret==true)
        {
            System.out.println("String is Equal");
        }
        else
        {
            System.out.println("String is not Equal");
        }
    }
}
***************************************************************************************
/*
4. Accept sing from user and reverse the contents of that string by toggling the case.
Input :   “aCBdef”
Output :   “FEDcbA”
 */
import java.lang.*;
import java.util.*;
class DemoString
{
    void Pattern(String str)
    {
      char arr1[]=str.toCharArray();
      StringBuffer newstr=new StringBuffer(str);
      String RevStr="";

      int i=str.length()-1;
      while (i>=0)
      {
          if(Character.isLowerCase(str.charAt(i)))
          {
              newstr.setCharAt(i,Character.toUpperCase(str.charAt(i)));
          }
          else if(Character.isUpperCase(str.charAt(i)))
          {
              newstr.setCharAt(i,Character.toLowerCase(str.charAt(i)));
          }
          RevStr=RevStr+ newstr.charAt(i);
          i--;
      }
      System.out.println("Your Reserse string is:" + RevStr);
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the first String:");
        String str1=sobj.next();

        DemoString dobj=new DemoString();

         dobj.Pattern(str1);
    }
}
******************************************************************************************
/*
5. Accept string from user and check whether the string is palindrome or not without considering its case.
Input :   “1abccBA1”
Output :   TRUE
 */
import java.lang.*;
import java.util.*;
class DemoString
{
    boolean Pattern(String str1)
    {
        boolean flag=true;
        int j=str1.length()-1;
        str1=str1.toLowerCase();


        for(int i=0;i<str1.length()/2;i++,j--)
        {
            if(str1.charAt(i)!=str1.charAt(j))
            {
                flag=false;
                break;
            }
        }

        if(flag)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        Boolean ret=false;
        System.out.println("Enter the String:");
        String str1=sobj.nextLine();

        DemoString dobj=new DemoString();
        ret= dobj.Pattern(str1);
        if(ret==true)
        {
            System.out.println("Palindrome");
        }
        else
        {
            System.out.println("not Palindrome");
        }
    }
}
*************************************************************************************
***********************************Assignment 64************************************
/* 1. Write Java program which accept String from user and display below pattern.
Input :  Hello
Output : H * * * *
         H e * * *
         H e l * *
         H e l l *     */

import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(String str)
    {
        char arr[]=str.toCharArray();
        int size=arr.length;

        for (int i=1;i<=size;i++)
        {
            for(int j=0;j<size;j++)
            {
                if(i>j)
                {
                    System.out.print(""+ arr[j]);
                }
               else
                {
                    System.out.print("*");
                }
               System.out.print("\t");
            }

            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the String:");
        String str=sobj.nextLine();

        DemoString dobj=new DemoString();

        dobj.Pattern(str);
    }
}
*************************************************************************************************************
/* 2. Write Java program which accept String from user and display below pattern.
Input :  Hello
Output : H e l l o
         H e l l *
         H e l * *
         H e * * *
         H * * * *    */

import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(String str)
    {
        char arr[]=str.toCharArray();
        int size=arr.length;

        for (int i=1;i<=size; i++)
        {
            for(int j=0;j<size;j++)
            {
                if(j<=size-i)
                {
                    System.out.print("" + arr[j]);
                }
                else
                {
                    System.out.print("*");
                }
                System.out.print("\t");
            }

            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the String:");
        String str=sobj.nextLine();

        DemoString dobj=new DemoString();

        dobj.Pattern(str);
    }
}
*****************************************************************************************************
/*3. Write Java program which accept String from user and display below pattern.
Input :  Hello
Output : H # # # #
         H e # # #
         H e l # #
         H e l l #
         H e l l o  */

import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(String str)
    {
        char arr[]=str.toCharArray();
        int size=arr.length;

        for (int i=1;i<=size;i++)
        {
            for(int j=0;j<size;j++)
            {
                if(i>j)
                {
                    System.out.print(""+ arr[j]);
                }
                else
                {
                    System.out.print("#");
                }
                System.out.print("\t");
            }

            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the String:");
        String str=sobj.nextLine();

        DemoString dobj=new DemoString();

        dobj.Pattern(str);
    }
}
************************************************************************************************
/*4. Write Java program which accept String from user and display below pattern.
Input :  Hello
Output : H e l l o
         H e l l *
         H e l * *
         H e * * *
         H * * * *
         H e * * *
         H e l * *
         H e l l *
         H e l l 0

         */

import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(String str)
    {
        char arr[]=str.toCharArray();
        int size=arr.length;

        for (int i=1;i<=size; i++)
        {
            for(int j=0;j<size;j++)
            {
                if(j<=size-i)
                {
                    System.out.print("" + arr[j]);
                }
                else
                {
                    System.out.print("*");
                }
                System.out.print("\t");
            }

            System.out.print("\n");
        }
        
        
        for (int i=1;i<=size;i++) 
        {
            for (int j = 0; j < size; j++) 
            {
                if (i > j) 
                {
                    System.out.print("" + arr[j]);
                } 
                else 
                 {
                    System.out.print("*");
                 }
                System.out.print("\t");
            }

            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the String:");
        String str=sobj.nextLine();

        DemoString dobj=new DemoString();

        dobj.Pattern(str);
    }
}
**********************************************************************************************************
/*5. Write Java program which accept String from user and display below pattern.
Input :  Hello
Output : H # # # #
         H e # # #
         H e l # #
         H e l l #
         H e l l o
         H e l l #
         H e l # #
         H e l # #
         H e # # #
         H # # # #

         */

import java.lang.*;
import java.util.*;

class DemoString {
    void Pattern(String str) {
        char arr[] = str.toCharArray();
        int size = arr.length;

        for (int i = 1; i <= size; i++) {
            for (int j = 0; j < size; j++) {
                if (i > j) {
                    System.out.print("" + arr[j]);
                } else {
                    System.out.print("#");
                }
                System.out.print("\t");
            }

            System.out.print("\n");
        }
        for (int i=1;i<=size; i++)
        {
            for(int j=1;j<=size;j++)
            {
                if(j<=size-i)
                {
                    System.out.print("" + arr[j]);
                }
                else
                {
                    System.out.print("#");
                }
                System.out.print("\t");
            }

            System.out.print("\n");
        }
    }

}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the String:");
        String str=sobj.nextLine();

        DemoString dobj=new DemoString();

        dobj.Pattern(str);
    }
}
***************************************************************************************************
*************************************Assignment 65**********************************************
/*1. Write a java program which accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 4
Output : * * * #
         * * # *
         * # * *
         # * * *
  */

import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(int iRow,int iCol)
    {
        int k=0;
        for(int i=1;i<=iRow;i++)
        {
            k=1;
            for(int j=1;j<=iCol;j++)
            {
                if(j==(iCol+k)-i)
                {
                    System.out.print("# ");
                }
                else
                {
                    System.out.print("* ");
                }
            }
            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Row:");
        int iNo1=sobj.nextInt();

        System.out.println("Enter the Row:");
        int iNo2=sobj.nextInt();

        DemoString dobj=new DemoString();

        dobj.Pattern(iNo1,iNo2);
    }
}
*****************************************************************************************
/*2. Write a java program which accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol = 4
Output : * * * #
         * * # @
         * # @ @
         # @ @ @
  */

import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(int iRow,int iCol)
    {
        int i,j,k;
        if(iRow<0)
        {
            iRow=-iRow;
        }
        if(iCol<0)
        {
            iCol=-iCol;
        }
        for(i=1;i<=iRow;i++)
        {
            k=1;
            for(j=1;j<=iCol;j++)
            {
                if(j==(iCol+k)-i)
                {
                    System.out.print("# ");
                }
                else if(j>=(iCol+k)-i)
                {
                    System.out.print("@ ");
                }
                else
                {
                    System.out.print("* ");
                }
            }
            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Row:");
        int iNo1=sobj.nextInt();

        System.out.println("Enter the Row:");
        int iNo2=sobj.nextInt();

        DemoString dobj=new DemoString();

        dobj.Pattern(iNo1,iNo2);
    }
}
********************************************************************************************************
/*3. Write a java program which accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 6  iCol = 6
Output : * * * * * *
         *       * *
         *     *   *
         *   *     *
         * * * * * *
  */

import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(int iRow,int iCol) {
        int i, j, k;
        if (iRow < 0)
        {
            iRow = -iRow;
        }

        
        if (iCol < 0)
        {
            iCol = -iCol;
        }

        for (i = 1; i <= iRow; i++)
        {
            k = 1;
            for (j = 1; j <= iCol; j++)
            {
                if (i == 1 || j == 1 || i == iRow || j == iCol)
                {
                    System.out.print("* ");
                } else if (j == (iCol + k) - i)
                {
                    System.out.print("* ");
                } else
                {
                    System.out.print("  ");
                }

            }
           System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Row:");
        int iNo1=sobj.nextInt();

        System.out.println("Enter the Row:");
        int iNo2=sobj.nextInt();

        DemoString dobj=new DemoString();

        dobj.Pattern(iNo1,iNo2);
    }
}
*******************************************************************************************************
/*4. Write a java program which accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 6  iCol = 6
Output : * * * * * *
         * # # # * *
         * # # * $ *
         * # * $ $ *
         * * $ $ $ *
         * * * * * *
  */

import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(int iRow,int iCol)
    {
        int i, j, k;
        if (iRow < 0)
        {
            iRow = -iRow;
        }
        if (iCol < 0)
        {
            iCol = -iCol;
        }

        for (i = 1; i <= iRow; i++) {
            k = 1;
            for (j = 1; j <= iCol; j++) {
                if (i == 1 || j == 1 || i == iRow || j == iCol)
                {
                    System.out.print("* ");
                } else if (j == (iCol + k) - i)
                {
                    System.out.print("* ");
                } else if (j <= iCol - i)
                {
                    System.out.print("# ");
                } else
                {
                    System.out.print("$ ");
                }

            }
            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Row:");
        int iNo1=sobj.nextInt();

        System.out.println("Enter the Row:");
        int iNo2=sobj.nextInt();

        DemoString dobj=new DemoString();

        dobj.Pattern(iNo1,iNo2);
    }
}
**********************************************************************************************************
/*5. Write a java program which accept number of rows and number of columns from user and display below pattern.
Input :  iRow = 4  iCol =  4
Output : 1 2 3 4 5
         1 2     5
         1  3    5
         1    4  5
         1 2 3 4 5
  */

import java.lang.*;
import java.util.*;

class DemoString
{
    void Pattern(int iRow,int iCol)
    {
        int i, j, k = 1;
        if (iRow < 0)
        {
            iRow = -iRow;
        }
        if (iCol < 0)
        {
            iCol = -iCol;
        }

        for (i = 1; i <= iRow; i++)
        {
            for (j = 1; j <= iCol; j++)
            {
                if (i == j)
                {
                    System.out.print(j);
                } else if (i == 1)
                {
                    System.out.print(j);
                } else if (j == 1)
                {
                    System.out.print(j);
                } else if (i == iRow)
                {
                    System.out.print(j);
                } else if (j == iCol)
                {
                    System.out.print(j);
                } else
                {
                    System.out.print("  ");
                }
              System.out.print("\t");
            }
            System.out.print("\n");
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {

        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Row:");
        int iNo1=sobj.nextInt();

        System.out.println("Enter the Row:");
        int iNo2=sobj.nextInt();

        DemoString dobj=new DemoString();

        dobj.Pattern(iNo1,iNo2);
    }
}
********************************************************************************************************
*****************************************************************************************
************************************Assignment 61****************************************
/* 1.Write a program which accept matrix from user and return addition of diagonal elements.
Input :
 3 2 5 9
 4 3 2 2
 8 4 1 5
 3 9 7 5

 Output : 12
 */
import java.lang.*;
import java.util.*;
class Matrixa
{
   int AdditionDiagonal(int arr[][])
   {
       int Add=0;
       for(int i=0;i<arr.length;i++)
       {
           for(int j=0;j<arr[i].length;j++)
           {
               if(i==j)
               {
                   Add=Add+arr[i][j];
               }
           }
       }
       return Add;
   }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Row:");
        int row=sobj.nextInt();

        System.out.println("Enter the Coloumn:");
        int col=sobj.nextInt();

        System.out.println("Enter the element");
        int arr[][]=new int[row][col];

        for (int i=0;i<arr.length;i++)
        {
            System.out.println("Row with index : "+i);
            for (int j=0;j<arr[i].length;j++)
            {
                System.out.println("Enter the element :"+i+" , "+j);
                arr[i][j]=sobj.nextInt();
            }
        }
        Matrixa mobj=new Matrixa();
        int ret=mobj.AdditionDiagonal(arr);
        System.out.println("Your Addition Diagonal:" + ret);
    }
}
****************************************************************************************
/* 2. Write a program which accept matrix and one number from user and return frequency of that number.
Input : Number : 9

3 2 5 9
4 3 2 2
8 4 1 9
3 9 7 5

 Output : 3
 */
import java.lang.*;
import java.util.*;
class Matrix
{
   int freq(int arr[][],int iNo)
   {
       int Count=0;
       for(int i=0;i<arr.length;i++)
       {
           for(int j=0;j<arr[i].length;j++)
           {
               if(iNo==arr[i][j])
               {
                   Count++;
               }
           }
       }
       return Count;
   }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Row:");
        int row=sobj.nextInt();

        System.out.println("Enter the Coloumn:");
        int col=sobj.nextInt();

        System.out.println("Enter the element");
        int arr[][]=new int[row][col];

        for (int i=0;i<arr.length;i++)
        {
            System.out.println("Row with index : "+i);
            for (int j=0;j<arr[i].length;j++)
            {
                System.out.println("Enter the element :"+i+" , "+j);
                arr[i][j]=sobj.nextInt();
            }
        }
        System.out.println("Enter the one number:");
        int iNo=sobj.nextInt();

        Matrix mobj=new Matrix();
        int ret=mobj.freq(arr,iNo);
        System.out.println("Your Frequency number is:" + ret);
    }
}
****************************************************************************************
/* 3. Write a program which accept matrix and return largest number from both the diagonals

3 2 5 9
4 3 2 2
8 4 1 9
3 9 7 5

 Output : 9
 */
import java.lang.*;
import java.util.*;
class Matrix
{
   int Larg(int arr[][])
   {
       int iLarge1=0,iLarge2=0;
       for(int i=0;i<arr.length;i++)
       {
           for(int j=0;j<arr[i].length;j++)
           {
               if(i<j)
               {
                   if(iLarge1<arr[i][j])
                   {
                       iLarge1=arr[i][j];
                   }
               }
               if(i>j)
               {
                   if(iLarge2<arr[i][j])
                   {
                       iLarge2=arr[i][j];
                   }
               }
           }
       }

       System.out.println("iLarge1:" + iLarge1);
       System.out.println("iLarge2:" + iLarge2);
       if(iLarge1==iLarge2)
       {
           return iLarge1;
       }
       return iLarge2;
   }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the Row:");
        int row=sobj.nextInt();

        System.out.println("Enter the Coloumn:");
        int col=sobj.nextInt();

        System.out.println("Enter the element");
        int arr[][]=new int[row][col];

        for (int i=0;i<arr.length;i++)
        {
            System.out.println("Row with index : "+i);
            for (int j=0;j<arr[i].length;j++)
            {
                System.out.println("Enter the element :"+i+" , "+j);
                arr[i][j]=sobj.nextInt();
            }
        }

        Matrix mobj=new Matrix();
        int ret=mobj.Larg(arr);
        System.out.println("Your Larger value both diagonal is:" + ret);
    }
}
*****************************************************************************************
/* 4. Write a program which accept matrix and display addition of elements From each column.
Input :
3 2 5 9
4 3 2 2
8 4 1 9
3 9 7 5

Output : 18 18 15 25
 */
import java.lang.*;
import java.util.*;
class Matrix
{
    void addition(int arr[][])
    {
        int Add=0;
        for(int i=0;i<arr.length;i++)
        {
            for(int j=0;j<arr[i].length;j++)
            {
                Add=Add+arr[j][i];
            }
            System.out.println("" + Add);
            Add=0;
        }
    }

}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the rows:");
        int row=sobj.nextInt();

        System.out.println("Enter the column");
        int col=sobj.nextInt();

        int arr[][]=new int[row][col];

        System.out.println("Enter the element:");

        for(int i=0;i<arr.length;i++)
        {
            for(int j=0;j<arr[i].length;j++)
            {
                arr[i][j]=sobj.nextInt();
            }
        }

        Matrix mobj=new Matrix();
        mobj.addition(arr);
    }
}
***************************************************************************************
/* 5. Write a program which accept matrix and swap the contents of consecutive rows. Input :
3 2 5 9
4 3 2 2
8 4 1 9
3 9 7 5
Output :

4 3 2 2
3 2 5 9
3 9 7 5
8 4 1 9
 */
import java.lang.*;
import java.util.*;
class Matrix
{
    void swap(int arr[][])
    {

    }

}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the rows:");
        int row=sobj.nextInt();

        System.out.println("Enter the column");
        int col=sobj.nextInt();

        int arr[][]=new int[row][col];

        System.out.println("Enter the element:");

        for(int i=0;i<arr.length;i++)
        {
            for(int j=0;j<arr[i].length;j++)
            {
                arr[i][j]=sobj.nextInt();
            }
        }

        Matrix mobj=new Matrix();
        mobj.swap(arr);
    }
}
***********************************************************************************
*************************************Assignment 62***********************************
/* 1.Write a program which accept matrix from user and display transpose of the matrix. 
The transpose of a given matrix is formed by interchanging the rows and columns of a matrix. 
Input :
3 2 5 9
4 3 2 2
8 4 1 5
3 9 7 5
Output :

3 4 8 3
2 3 4 9
5 2 1 7
9 2 5 5

 */

import java.lang.*;
import java.util.*;
class Matrix
{
        void transpose(int arr[][])
        {
            int Add=0;
            int temp;
            for(int i=0;i<arr.length;i++)
            {
                for(int j=0;j<arr[i].length;j++)
                {
                    temp=arr[i][j];
                    arr[j][i]=arr[i][j];
                    arr[i][j]=temp;
                }
            }
            for(int i=0;i<arr.length;i++)
            {
                for(int j=0;j<arr[i].length;j++)
                {
                   System.out.print(arr[i][j]);
                }
            }
        }

}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter the rows:");
        int row=sobj.nextInt();

        System.out.println("Enter the column");
        int col=sobj.nextInt();

        int arr[][]=new int[row][col];

        System.out.println("Enter the element:");

        for(int i=0;i<arr.length;i++)
        {
            for(int j=0;j<arr[i].length;j++)
            {
                arr[i][j]=sobj.nextInt();
            }
        }

        Matrix mobj=new Matrix();
        mobj.transpose(arr);
    }
}
*****************************************************************************************
****************************************Assignment 66***********************************
/*1. Write Java program which accept two arrays from user and display contents of each array.
        Input :  2 9 7 5 2 3
                 9 3 5 5
        Output : 2 9 7 5 2 3
                 9 3 5 5               */
import java.lang.*;
import java.util.*;
class Arrays
{
    void Diplay(int arr[],int brr[])
    {
        for(int i=0;i<arr.length;i++)
        {
            System.out.print("\t"+ arr[i]);
        }
        System.out.print("\n");
        for(int j=0;j<brr.length;j++)
        {
            System.out.print("\t"+ brr[j]);
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter first array size:");
        int size1=sobj.nextInt();

        System.out.println("Enter Second array size:");
        int size2=sobj.nextInt();

        int arr[]=new int[size1];
        int brr[]=new int[size2];
        System.out.println("Enter the first array element:");
        for(int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }
        System.out.println("Enter the Second array element:");
        for (int j=0;j<brr.length;j++)
        {
            brr[j]=sobj.nextInt();
        }
        Arrays aobj=new Arrays();
        aobj.Diplay(arr,brr);
    }
}
***************************************************************************************
/*2. Write Java program which accept two arrays from user and display even contents of each array.
Input :  2 9 6 5 2 3
        45 6 12 18 23 4

Output :  2 6 2
          6 12 18 4               */
import java.lang.*;
import java.util.*;
class Arrays
{
    void DiplayEven(int arr[],int brr[])
    {
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i]%2==0)
            {
                System.out.print("\t"+ arr[i]);
            }
        }
        System.out.print("\n");
        for(int j=0;j<brr.length;j++)
        {
            if(brr[j]%2==0)
            {
                System.out.print("\t"+ brr[j]);
            }
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter first array size:");
        int size1=sobj.nextInt();

        System.out.println("Enter Second array size:");
        int size2=sobj.nextInt();

        int arr[]=new int[size1];
        int brr[]=new int[size2];
        System.out.println("Enter the first array element:");
        for(int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }
        System.out.println("Enter the Second array element:");
        for (int j=0;j<brr.length;j++)
        {
            brr[j]=sobj.nextInt();
        }
        Arrays aobj=new Arrays();
        aobj.DiplayEven(arr,brr);
    }
}
**************************************************************************************
/*3. Write Java program which accept two arrays from user and display odd contents of each array.
Input :  2 9 6 5 2 3
 45 6 12 18 23 4

Output :  9 5 3
          45 23    */
import java.lang.*;
import java.util.*;
class Arrays
{
    void DiplayEven(int arr[],int brr[])
    {
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i]%2!=0)
            {
                System.out.print("\t"+ arr[i]);
            }
        }
        System.out.print("\n");
        for(int j=0;j<brr.length;j++)
        {
            if(brr[j]%2!=0)
            {
                System.out.print("\t"+ brr[j]);
            }
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter first array size:");
        int size1=sobj.nextInt();

        System.out.println("Enter Second array size:");
        int size2=sobj.nextInt();

        int arr[]=new int[size1];
        int brr[]=new int[size2];
        System.out.println("Enter the first array element:");
        for(int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }
        System.out.println("Enter the Second array element:");
        for (int j=0;j<brr.length;j++)
        {
            brr[j]=sobj.nextInt();
        }
        Arrays aobj=new Arrays();
        aobj.DiplayEven(arr,brr);
    }
}
***************************************************************************************
/*4. Write Java program which accept two arrays from user and form new array which is combination of contents of first and second array.
Input :  12 57 28 3
         99 23 54 58 6 67

Output : 12 57 28 3 99 23 54 58 6 67
 */

import java.lang.*;
import java.util.*;
class Arrays
{
    public void Concat(int arr[],int brr[])
    {

        int Add[]=new int[arr.length+brr.length];
        int i=0;

       for (int element:arr)
       {
           Add[i]=element;
           i++;
       }

        for(int element:brr)
        {
            Add[i]=element;
            i++;
        }
       for (int j=0;j<Add.length;j++)
       {
           System.out.print("\t" + Add[j]);
       }

    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter first array size:");
        int size1=sobj.nextInt();

        System.out.println("Enter Second array size:");
        int size2=sobj.nextInt();

        int arr[]=new int[size1];
        int brr[]=new int[size2];
        System.out.println("Enter the first array element:");
        for(int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }
        System.out.println("Enter the Second array element:");
        for (int j=0;j<brr.length;j++)
        {
            brr[j]=sobj.nextInt();
        }
        Arrays aobj=new Arrays();
        aobj.Concat(arr,brr);
    }
}
***********************************************************************************
/*5. Write Java program which accept two arrays from user and display summation of each array.
Input :  2 9 7 5 2 3   9 3 5 5
Output : 28 22
 */
import java.lang.*;
import java.util.*;
class Arrays
{
    void Concat(int arr[],int brr[])
    {
        int Sum=0;
        int Sum2=0;
       for (int i=0;i< arr.length;i++)
       {
            Sum=Sum+arr[i];
       }
       System.out.print(Sum);
        System.out.print("\n");
        for (int j=0;j< brr.length;j++)
        {
            Sum2=Sum2+arr[j];
        }
        System.out.print(Sum2);
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter first array size:");
        int size1=sobj.nextInt();

        System.out.println("Enter Second array size:");
        int size2=sobj.nextInt();

        int arr[]=new int[size1];
        int brr[]=new int[size2];
        System.out.println("Enter the first array element:");
        for(int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }
        System.out.println("Enter the Second array element:");
        for (int j=0;j<brr.length;j++)
        {
            brr[j]=sobj.nextInt();
        }
        Arrays aobj=new Arrays();
        aobj.Concat(arr,brr);
    }
}
*****************************************************************************************
**************************************Assignment 67************************************
/*1. Write a java program which accept two arrays from user and return difference between summation of arrays.
Input :  2 9 7 5 2 3
         9 3 5 5
Output : 6

 */
import java.lang.*;
import java.util.*;
class Arrays
{
    int Concat(int arr[],int brr[])
    {
        int Sum=0;
        int Sum2=0;
       for (int i=0;i< arr.length;i++)
       {
            Sum=Sum+arr[i];
       }
        System.out.print("\n");
        for (int j=0;j< brr.length;j++)
        {
            Sum2=Sum2+brr[j];
        }
        int Result=(Sum-Sum2);
        return Result;
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter first array size:");
        int size1=sobj.nextInt();

        System.out.println("Enter Second array size:");
        int size2=sobj.nextInt();

        int arr[]=new int[size1];
        int brr[]=new int[size2];
        System.out.println("Enter the first array element:");
        for(int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }
        System.out.println("Enter the Second array element:");
        for (int j=0;j<brr.length;j++)
        {
            brr[j]=sobj.nextInt();
        }
        Arrays aobj=new Arrays();
        int Ret=aobj.Concat(arr,brr);
        System.out.print("Your Difference between:" + Ret);
    }
}
**************************************************************************************
/*2. Write a java program which accept two two arrays from user and display minimum element of each array.
Input :  2 9 7 5 2 3
         9 3 5 5

Output : 2 3

 */
import java.lang.*;
import java.util.*;
class Arrays
{
    void Concat(int arr[],int brr[])
    {
        int Min1=0;
        int Min2=0;
        Min1=arr[0];
        Min2=brr[0];
       for (int i=0;i< arr.length;i++)
       {

            if(arr[i]<Min1)
            {
                Min1=arr[i];
            }
       }
        System.out.print("\n");
        for (int j=0;j< brr.length;j++)
        {

            if(brr[j]<Min2)
            {
                Min2=brr[j];
            }
        }
       System.out.println("First Array:" + Min1);
        System.out.println("Second Array:" + Min2);

    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter first array size:");
        int size1=sobj.nextInt();

        System.out.println("Enter Second array size:");
        int size2=sobj.nextInt();

        int arr[]=new int[size1];
        int brr[]=new int[size2];
        System.out.println("Enter the first array element:");
        for(int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }
        System.out.println("Enter the Second array element:");
        for (int j=0;j<brr.length;j++)
        {
            brr[j]=sobj.nextInt();
        }
        Arrays aobj=new Arrays();
        aobj.Concat(arr,brr);
    }
}
**********************************************************************************
/* 3. Write a java program which accept two array from user and copy the contents of
that array into another array in reverse order and return new array*/
import java.lang.*;
import java.util.*;
class Arrays
{
    public void Concat(int arr[],int brr[])
    {

        int Add1[]=new int[arr.length];
        int Add2[]=new int[arr.length];

        int i=arr.length-1;
        int s=brr.length-1;

       for (int element:arr)
       {
           Add1[i]=element;
           i--;
       }

        for(int element:brr)
        {
            Add2[s]=element;
            s--;
        }

        System.out.println("Array 1st copy reverse order in another array");
        for (int j=0;j<Add1.length;j++)
        {
            System.out.print("\t" + Add1[j]);
        }
        System.out.println();
        System.out.println("Array 2nd copy reverse order in another array");
        for (int k=0;k<Add2.length;k++)
        {
            System.out.print("\t" + Add2[k]);
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter first array size:");
        int size1=sobj.nextInt();

        System.out.println("Enter Second array size:");
        int size2=sobj.nextInt();

        int arr[]=new int[size1];
        int brr[]=new int[size2];
        System.out.println("Enter the first array element:");
        for(int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }
        System.out.println("Enter the Second array element:");
        for (int j=0;j<brr.length;j++)
        {
            brr[j]=sobj.nextInt();
        }
        Arrays aobj=new Arrays();
        aobj.Concat(arr,brr);
    }
}
****************************************************************************************
/*4. Write a java program which accept two array from user and copy the contents
 of that array into another array and return new array.*/
import java.lang.*;
import java.util.*;
class Arrays
{
    public void Rev(int arr[],int brr[])
    {

        int Add1[]=new int[arr.length];
        int Add2[]=new int[brr.length];

        int i=0;
        int s=0;

       for (int element:arr)
       {
           Add1[i]=element;
           i++;
       }

        for(int element:brr)
        {
            Add2[s]=element;
            s++;
        }

        System.out.println("Array 1st copy in another array");
        for (int j=0;j<Add1.length;j++)
        {
            System.out.print("\t" + Add1[j]);
        }
        System.out.println();
        System.out.println("Array 2nd copy in another array");
        for (int k=0;k<Add2.length;k++)
        {
            System.out.print("\t" + Add2[k]);
        }
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        System.out.println("Enter first array size:");
        int size1=sobj.nextInt();

        System.out.println("Enter Second array size:");
        int size2=sobj.nextInt();

        int arr[]=new int[size1];
        int brr[]=new int[size2];
        System.out.println("Enter the first array element:");
        for(int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }
        System.out.println("Enter the Second array element:");
        for (int j=0;j<brr.length;j++)
        {
            brr[j]=sobj.nextInt();
        }
        Arrays aobj=new Arrays();
        aobj.Rev(arr,brr);
    }
}
****************************************************************************************
/*5. Write a java program which accept two array from user and check whether that array and its elements are palindrome or not. 
Input :   11 252 387783 252 11 
Output :   TRUE 
Input :   11 252 387783 77 11 
Output :   FALSE 
Input :   11 252 786 252 11 
Output :   FALSE 
Input :   11 252 786 253 11 
Output :   FALSE 4. Write a java program which accept two array from user and copy the contents
 of that array into another array and return new array.*/
import java.lang.*;
import java.util.*;
class Arrays
{
    boolean Concat(int arr[])
    {

        int size=arr.length;
        int flag=0;

       for (int i=0;i<=size/2 && size!=0;i++)
       {
          if(arr[i]==arr[size-i-1])
          {
             flag=1;
             break;
          }
       }
       if(flag==1)
       {
           return true;
       }
       else
       {
           return false;
       }
    }
}
class Demo
{
    public static void main(String arg[])
    {
        Scanner sobj=new Scanner(System.in);
        boolean Ret=false;
        System.out.println("Enter array size:");
        int size1=sobj.nextInt();

        int arr[]=new int[size1];


        System.out.println("Enter the first array element:");
        for(int i=0;i<arr.length;i++)
        {
            arr[i]=sobj.nextInt();
        }
        Arrays aobj=new Arrays();
        Ret=aobj.Concat(arr);
        if(Ret==true)
        {
            System.out.println("Palindrome");
        }
        else
        {
            System.out.println("Not Palindrome");
        }
    }
}
************************************************************************************
******************************************************************************************
*********************************Assignment 70****************************************
/*1.Complete below code snippet by writing definitions of below function
1.SearchLast()  - Search last occurrence of number
2.EvenCount()  - Count even elements
3.OddCount().  - Count odd elements
4.SumAll(). - sum of all elements */

#include<iostream>
using namespace std;
class Array
{
    protected:
        int *Arr;
        int size;
    public:
        Array(int value = 10)
        {
            cout<<"Inside Connstructor\n";
            this->size = value;
            this->Arr = new int[size];
        }
        Array(Array &ref)
        {
            cout<<"Inside copy connstructor\n";
            this->size = ref.size;
            this->Arr = new int[this->size];
            for(int i = 0;i<size;i++)
                {
                    this->Arr[i] = ref.Arr[i];
                }
        }
        ~Array()
        {
            cout<<"Inside Destructor\n";
            delete []Arr;
        }
          inline void Accept();
          inline void Display();
};
void Array::Accept()
{
     cout<<"Please enter the values\n";
     for(int i = 0;i<this->size;i++)
     {
            cin>>Arr[i];
     }
}
void Array::Display()
{
     cout<<"Elements are\n";
     for(int i = 0;i<this->size;i++)
     {
            cout<<Arr[i]<<" ";
     }
     cout<<"\n";
}
class ArrSearch : public Array
{
    public:
        ArrSearch(int no = 10) : Array(no)
        {}

        int Frequency(int);
        int SearchFirst(int);
        int SearchLast(int);
        int EvenCount();
        int OddCount();
        int SumAll();
};
int ArrSearch::SearchFirst(int value)
{
    int i = 0;
    for(i = 0; i < size; i++)
    {
        if(Arr[i] == value)
        {
            break;
        }
    }
    if(i == size)
    {
        return -1;
    }
    else
    {
        return i + 1;
    }
}
int ArrSearch::Frequency(int value)
{
    int icnt = 0;
    for(int i = 0; i<size; i++)
    {
        if(Arr[i] == value)
        {
            icnt++;
        }
    }
    return icnt;
}
int ArrSearch::SearchLast(int value)
{
    int i = 0;
    for(i = 0; i<=size; i++)
    {
        if(i==size&&Arr[i] == value)
        {
            break;
        }
    }
    if(i == size)
    {
        return -1;
    }
    else
    {
        return i + 1;
    }
}
int ArrSearch::OddCount()
{
    int icnt = 0;
    for(int i = 0; i<size; i++)
    {
        if(Arr[i]%2==0)
        {
            icnt++;
        }
    }
    return icnt;
}
int ArrSearch::SumAll()
{
    int iSum = 0;
    for(int i = 0; i<size; i++)
    {
       iSum=iSum+Arr[i];
    }
    return iSum;
}
int main()
{
          cout<<"Inside main\n";

           ArrSearch sobj1(5);
           sobj1.Accept();
           sobj1.Display();
           int iret = sobj1.Frequency(11);
           cout<<"Frequency is "<<iret<<"\n";
           iret = sobj1.SearchFirst(11);
           cout<<"First occurance is is "<<iret<<"\n";
           // Call all the above functions
           int iOdd=sobj1.OddCount();
           cout<<"Odd number count is:"<<iOdd<<"\n";
           int iSum=sobj1.SumAll();
           cout<<"Sum is:"<<iSum<<"\n";

           int iret2 = sobj1.SearchLast(11);
           cout<<"Last occurance is is "<<iret2<<"\n";
           return 0;
}

******************************************************************************************
